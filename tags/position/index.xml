<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>position - 标签 - Sam&#39;s Garage</title>
        <link>https://liubingxuan.xyz/tags/position/</link>
        <description>position - 标签 - Sam&#39;s Garage</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>ryuukousen@gmail.com (Sam)</managingEditor>
            <webMaster>ryuukousen@gmail.com (Sam)</webMaster><lastBuildDate>Wed, 29 Jul 2020 13:01:21 &#43;0800</lastBuildDate><atom:link href="https://liubingxuan.xyz/tags/position/" rel="self" type="application/rss+xml" /><item>
    <title>CSS 学习笔记——定位</title>
    <link>https://liubingxuan.xyz/css-position/</link>
    <pubDate>Wed, 29 Jul 2020 13:01:21 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://liubingxuan.xyz/css-position/</guid>
    <description><![CDATA[<p>复习盒模型、div 的分层、新属性 position 详解、层叠上下文</p>
<p>​</p>
<h2 id="布局和定位的区别">布局和定位的区别</h2>
<p>区别大了</p>
<ul>
<li>布局是<strong>屏幕平面</strong>上的</li>
<li>定位是<strong>垂直于屏幕</strong>的</li>
</ul>
<p>​</p>
<h2 id="css-定位">CSS 定位</h2>
<blockquote>
<p>还得从<strong>文档流</strong>和<strong>盒模型</strong>说起（两个非常重要的概念）</p>
</blockquote>
<p>​</p>
<h2 id="复习盒模型">复习盒模型</h2>
<p>margin 外边距、border 边框、padding 内边距、content 内容</p>
<p>background 背景</p>
<p></p>
<h3 id="问两个问题">问两个问题</h3>
<h4 id="背景的范围是从哪到哪">背景的范围是从哪到哪？</h4>
<ul>
<li>【A】border 内边沿围成的区域 ？【B】border 外边沿围成的区域 ？</li>
</ul>
<ul>
<li>如何验证自己的猜想？
<ul>
<li>border 半透明试试，答案是【B】</li>
<li>注意：在浏览器的元素样式中，可通过 【alt + 上下方向键】，对半透明数值进行 0.1 的 ± 调整</li>
</ul>
</li>
</ul>
<h4 id="从左边看一个-div是什么样子">从左边看一个 div，是什么样子？</h4>
<blockquote>
<p>元素是有层叠关系的，脑内模拟一个三维立体结构，从左边看一个 div，是什么样子？</p>
</blockquote>
<ul>
<li>background 在文字后面然后呢？</li>
<li>如何验证自己的猜想？用代码证明即可。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;demo&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">span</span> <span class="na">class</span><span class="o">=</span><span class="s">text</span><span class="p">&gt;</span>你好<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">.</span><span class="nc">demo</span><span class="p">{</span>
    <span class="k">box-sizing</span><span class="p">:</span> <span class="kc">border-box</span><span class="p">;</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">5</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
    <span class="k">width</span><span class="p">:</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">height</span><span class="p">:</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">background</span><span class="p">:</span> <span class="kc">blue</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">text</span><span class="p">{</span>
    <span class="k">font-size</span><span class="p">:</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>  <span class="c">/* 让字足够大，测试字能否覆盖住border */</span>
    <span class="k">color</span><span class="p">:</span> <span class="kc">green</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>结论：</p>
<ul>
<li>文字在最上层，中间是 border，最底层是 background 背景</li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="代码验证一个-div-的分层">代码验证：一个 div 的分层</h2>
<blockquote>
<p>三维立体模型 （SketchUp）</p>
</blockquote>
<ul>
<li>先给出结论（三维图），再在下面进行代码验证</li>
</ul>
<p></p>
<p></p>
<p>​</p>
<h3 id="块级子元素与内联子元素的分层位置">块级子元素与内联子元素的分层位置</h3>
<blockquote>
<p>让块级元素与内联元素，出现重叠，就可以判断哪个层级更高</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">.</span><span class="nc">demo</span><span class="p">{</span>
    <span class="k">background</span><span class="p">:</span> <span class="nb">rgb</span><span class="p">(</span><span class="mi">120</span><span class="p">,</span><span class="mi">184</span><span class="p">,</span><span class="mi">211</span><span class="p">);</span>
    <span class="k">width</span><span class="p">:</span> <span class="mi">200</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">height</span><span class="p">:</span> <span class="mi">200</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">15</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
    <span class="k">padding</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">childDiv</span><span class="p">{</span>
    <span class="k">background</span><span class="p">:</span> <span class="kc">white</span><span class="p">;</span>
    <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">margin-top</span><span class="p">:</span> <span class="mi">-10</span><span class="kt">px</span><span class="p">;</span>  <span class="c">/* 测试块级元素与文字的分层位置，将div向上移动，与文字重叠，看是否会遮挡文字 */</span>
  <span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;demo&#34;</span><span class="p">&gt;</span>
  文字内容
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;childDiv&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>如上，<code>“文字内容”</code> 和 <code>div.childDiv</code> 属于同级关系</p>
</li>
<li>
<p>结论：</p>
<ul>
<li>
<p>块级元素位于文字下层</p>
<p></p>
</li>
</ul>
</li>
</ul>
<p>​</p>
<h3 id="浮动子元素与内联子元素的分层位置">浮动子元素与内联子元素的分层位置</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">.</span><span class="nc">demo</span><span class="p">{</span> <span class="err">...</span> <span class="p">}</span>
  <span class="p">.</span><span class="nc">float</span><span class="p">{</span>
    <span class="k">float</span><span class="p">:</span> <span class="kc">left</span><span class="p">;</span>
    <span class="k">background</span><span class="p">:</span> <span class="kc">white</span><span class="p">;</span>
    <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">width</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">margin-right</span><span class="p">:</span> <span class="mi">-10</span><span class="kt">px</span><span class="p">;</span>  
  	<span class="c">/* 测试浮动元素与文字的分层位置，将浮动元素向右移动，与文字重叠，看是否会遮挡文字 */</span>
  <span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;demo&#34;</span><span class="p">&gt;</span>
  文字内容
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;float&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>结论：</p>
<ul>
<li>
<p>浮动元素位于文字下层</p>
<p></p>
</li>
</ul>
</li>
</ul>
<p>​</p>
<h3 id="浮动子元素与块级子元素的分层位置">浮动子元素与块级子元素的分层位置</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">.</span><span class="nc">demo</span><span class="p">{</span><span class="err">...</span><span class="p">}</span>
  <span class="p">.</span><span class="nc">float</span><span class="p">{</span><span class="err">...</span><span class="p">}</span>
  <span class="p">.</span><span class="nc">childDiv</span><span class="p">{</span>
    <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">background</span><span class="p">:</span> <span class="kc">orange</span><span class="p">;</span>
    <span class="k">margin-top</span><span class="p">:</span> <span class="mi">-10</span><span class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;demo&#34;</span><span class="p">&gt;</span>
  文字内容
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;float&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;childDiv&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>结论：
<ul>
<li>
<p>浮动内容（脱离文档流），高于 childDiv（普通文档流元素），低于文字</p>
</li>
<li>
<p>所以，==脱离文档流==，实际上就是从普通文档流中跳出，<strong>比文档流的层级稍微高一点</strong></p>
<p></p>
</li>
</ul>
</li>
</ul>
<p>​</p>
<h3 id="结论">结论</h3>
<ul>
<li>
<p>文字内容层级最高，代码写在下面的文字内容，会覆盖上面的</p>
</li>
<li>
<p>只有浮动元素会<strong>脱离文档流</strong>（从普通文档流中跳出），比普通文档流的层级稍高</p>
<p></p>
<p></p>
</li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="新属性-position">新属性 position</h2>
<h3 id="position-取值">position 取值</h3>
<ul>
<li>
<p>static 默认值，当前元素待在文档流里</p>
</li>
<li>
<p>relative 相对定位，升起来，但不脱离文档流</p>
</li>
<li>
<p>absolute 绝对定位，定位基准是相对于祖先里的非 static 祖先进行定位</p>
</li>
<li>
<p>fixed 固定定位，定位基准是 viewport 视口</p>
<ul>
<li>有诈：后来 css 出的 transform 属性，使 fixed 无法相对 viewport 视口定位，这就是 CSS 的不正交</li>
</ul>
</li>
<li>
<p>sticky 粘滞定位，不好描述直接举例 ↓↓</p>
<ul>
<li>
<p>特别适合做导航：正常状态会存在于文档流中，当向下滚动到 sticky 元素且 sticky 元素即将移出视口时，sticky 元素会始终保持在视口顶部，不会随文档流继续滚动。</p>
</li>
<li>
<p>兼容性特别差，可以在 <a href="https://caniuse.com/#search=sticky" target="_blank" rel="noopener noreffer">caniuse</a> 中查询。 （黄色是需要加前缀or部分支持）</p>
</li>
</ul>
</li>
</ul>
<h3 id="经验">经验</h3>
<ul>
<li>如果你写了 absolute，一般都得补一个 relative</li>
<li>如果你写了 absolute 或 fixed，一定要补 top 和 left</li>
<li>sticky 兼容性很差，主要用于<strong>面试装逼</strong></li>
</ul>
<p>​</p>
<h3 id="position-relative">position: relative</h3>
<h4 id="使用场景">使用场景</h4>
<ul>
<li>用于做位移（很少用），将两个元素对齐</li>
<li>用于给 absolute 元素做爸爸</li>
</ul>
<h4 id="配合-z-index">配合 z-index</h4>
<ul>
<li><code>z-index: auto</code> 默认值，不创建新<a href="#%e4%bb%80%e4%b9%88%e6%98%af%e5%b1%82%e5%8f%a0%e4%b8%8a%e4%b8%8b%e6%96%87" rel="">层叠上下文</a></li>
<li><code>z-index: 0/1/2</code></li>
<li><code>z-index: -1/-2</code></li>
</ul>
<h4 id="经验-1">经验</h4>
<ul>
<li>写 <code>z-index: 9999</code> 的都是 菜B</li>
<li>要学会管理 z-index</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="position-absolute">position: absolute</h3>
<h4 id="使用场景-1">使用场景</h4>
<ul>
<li>
<p>脱离原来的位置，另起一层，比如<strong>对话框的关闭按钮</strong>，通常是通过绝对定位实现的</p>
</li>
<li>
<p>鼠标提示</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;height:100px;&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">button</span><span class="p">&gt;</span>
  点击
  <span class="p">&lt;</span><span class="nt">span</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;tips&#34;</span><span class="p">&gt;</span>提示内容<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
    
<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="nt">button</span><span class="p">{</span> <span class="k">position</span><span class="p">:</span> <span class="kc">relative</span><span class="p">;</span> <span class="p">}</span>
  <span class="nt">button</span> <span class="nt">span</span><span class="p">{</span>
    <span class="k">position</span><span class="p">:</span> <span class="kc">absolute</span><span class="p">;</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
    <span class="k">white-space</span><span class="p">:</span> <span class="kc">nowrap</span><span class="p">;</span>
    <span class="k">bottom</span><span class="p">:</span> <span class="nb">calc</span><span class="p">(</span><span class="mi">100</span><span class="kt">%</span> <span class="o">+</span> <span class="mi">10</span><span class="kt">px</span><span class="p">);</span>
    <span class="k">left</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
    <span class="k">transform</span><span class="p">:</span> <span class="nb">translateX</span><span class="p">(</span><span class="mi">-50</span><span class="kt">%</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="nt">button</span> <span class="nt">span</span><span class="p">{</span> <span class="k">display</span><span class="p">:</span> <span class="kc">none</span><span class="p">;</span> <span class="p">}</span>
  <span class="nt">button</span><span class="p">:</span><span class="nd">hover</span> <span class="nt">span</span><span class="p">{</span> <span class="k">display</span><span class="p">:</span> <span class="kc">inline</span><span class="o">-</span><span class="kc">block</span><span class="p">;</span> <span class="p">}</span>   <span class="c">/* 鼠标悬浮时，显示span */</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
<h4 id="配合-z-index-1">配合 z-index</h4>
<h4 id="经验-2">经验</h4>
<ul>
<li>
<p>很多 菜B 都以为 absolute 是相对于 relative 定位的</p>
<ul>
<li><strong>absolute 是相对于 祖先元素中最近的一个定位元素</strong>
<ul>
<li>只要 position 属性值不是 static 的元素，就是定位元素</li>
</ul>
</li>
</ul>
</li>
<li>
<p>某些浏览器上，如果写了 absolute，不写 top / left / bottom / right 会位置错乱  （4个至少写2个）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">demo</span><span class="p">{</span>
  <span class="k">position</span><span class="p">:</span> <span class="kc">absolute</span><span class="p">;</span>
  <span class="k">top</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">left</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>善用 <code>left: 100%</code> （效果通常是该元素会出现在定位元素的最右边）</p>
</li>
<li>
<p>善用 <code>left: 50%;</code> + 加负 margin （负宽度的一半）：实现居中</p>
<ul>
<li>也可以用  <code>left: 50%;</code> + <code>transform: translateX(-50%);</code>  实现，优点是不需要自己计算宽度的一半</li>
</ul>
</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="position-fixed">position: fixed</h3>
<blockquote>
<p>fixed 是相对于【视口】定位的</p>
<ul>
<li>视口，就是浏览器中普通用户能看到的部分（不包括滚动条）</li>
</ul>
</blockquote>
<h4 id="使用场景-2">使用场景</h4>
<ul>
<li>烦人的广告</li>
<li>回到顶部按钮</li>
</ul>
<h4 id="配合-z-index-2">配合 z-index</h4>
<h4 id="经验-3">经验</h4>
<ul>
<li>
<p>如果 fixed 元素所在的容器，具有某些属性，可能会导致 fixed 元素不再相对于视口定位。</p>
<ul>
<li>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span><span class="p">{</span> <span class="k">position</span><span class="p">:</span> <span class="kc">relative</span><span class="p">;</span> <span class="p">}</span>
<span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">fixed</span><span class="p">{</span> <span class="k">position</span><span class="p">:</span> <span class="kc">fixed</span><span class="p">;</span> <span class="k">left</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span> <span class="k">bottom</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span> <span class="p">}</span>  
<span class="p">.</span><span class="nc">container</span><span class="p">{</span> <span class="k">transform</span><span class="p">:</span> <span class="nb">scale</span><span class="p">(</span><span class="mf">0.9</span><span class="p">);</span> <span class="p">}</span> <span class="c">/* 此时fixed元素就不再相对于视口定位 */</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>总结：<strong>不要把 fixed 元素放到 具有 transform 属性的容器中</strong>，可能会产生奇怪的bug（不正交：调这个元素却影响了另一个元素）</p>
</li>
</ul>
</li>
</ul>
<ul>
<li><strong>手机上尽量不要用这个属性</strong>，坑很多，无穷无尽的bug。不信你搜索一下「 移动端 fixed 」
<ul>
<li>用了，可能就开始996了。一个bug可能引出10个bug</li>
</ul>
</li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="层叠上下文">层叠上下文</h2>
<h3 id="div分层-与-position">div分层 与 position</h3>
<blockquote>
<ul>
<li>任意一个元素的 position 取值非 static 时，就成为了定位元素。定位元素的层级，立马超越内联文字，成为最上层元素（跑到所有元素最上层）</li>
<li>z-index，默认是 auto
<ul>
<li>所有定位元素，会以内联文字层为底层，随着 z-index 递增，层级也会递增</li>
<li>如果 z-index 为负值，则层级比 background 还低</li>
<li>（可以无限向下，但是不能低于层叠上下文，也就是不能低于 html ，低于html还有什么意义）</li>
</ul>
</li>
</ul>
</blockquote>
<p></p>
<h3 id="什么是层叠上下文">什么是层叠上下文</h3>
<blockquote>
<p>也叫堆叠上下文</p>
<p>层叠上下文，会把所有元素包起来。</p>
<ul>
<li>
<p>默认的层叠上下文，是 html 元素，html 就是会把所有元素包起来</p>
</li>
<li>
<p>其他元素，也会因为拥有某些属性而变成层叠上下文（导致 z-index 需要重新计算）</p>
</li>
</ul>
</blockquote>
<p>​</p>
<h4 id="比喻">比喻</h4>
<blockquote>
<p>层叠上下文对 z-index 的影响</p>
</blockquote>
<ul>
<li>每个层叠上下文就是一个新的小世界（作用域）</li>
<li>这个小世界里面的 z-index 跟外界无关</li>
<li><strong>处在同一个小世界的 z-index 才能比较</strong></li>
<li><a href="http://js.jirengu.com/gewob/1/edit?html,css,output" target="_blank" rel="noopener noreffer">JSBin 示例</a>
<ul>
<li>a 和 b2 处于同一个层叠小世界，由 container 创造的，如果 container 没有设定 z-index，那么 a 和 b2 就同处于 html 的作用域里面，是具有可比性的。</li>
</ul>
</li>
</ul>
<p>​</p>
<h4 id="哪些不正交的属性可以创建层叠上下文">哪些不正交的属性可以创建层叠上下文</h4>
<blockquote>
<p>最简单的就是定位元素设置 z-index = 0 ，就会创建一个层叠上下文</p>
</blockquote>
<ul>
<li>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context" target="_blank" rel="noopener noreffer">MDN文档</a>有写</p>
<ol>
<li>文档根元素 html 自成一个层叠上下文</li>
<li>z-index 不为 auto 的定位元素，会开启一个小世界（作用域）</li>
<li>元素的 opacity 小于1，就会创建一个层叠上下文（因为 opacity 会影响内部所有元素）</li>
<li><code>position: fixed;</code> 一定会创建层叠上下文</li>
<li>…</li>
</ol>
<ul>
<li>需要记忆的有：
<ul>
<li>z-index=0时会创建层叠上下文</li>
<li>flex元素内部会形成层叠上下文</li>
<li>opacity 不为1 ，就会创建层叠上下文</li>
<li>具有 transform 的元素，会形成一个 层叠上下文</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>知道这些知识的面试官也不太多，不用花时间背</strong></p>
</li>
<li>
<p>忘了就搜「 层叠上下文 MDN 」</p>
</li>
<li>
<p>你说 CSS 为什么不单独创建一个属性做这个事</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="nt">例如</span><span class="err">：</span> <span class="nt">xxxdisabled</span><span class="o">:</span> <span class="nt">true</span><span class="o">;</span> <span class="c">/* true就创建层叠上下文，false就不创建；css并没有这种直接功能开关*/</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>这就是css的难学之处，互相交叉影响，错综复杂（不正交）</li>
</ul>
</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="负-z-index-与层叠上下文的关系">负 z-index 与层叠上下文的关系</h3>
<blockquote>
<p><a href="http://js.jirengu.com/modez/1/edit?html,css,output" target="_blank" rel="noopener noreffer">JSBin 示例</a></p>
<ul>
<li>.demo 的 z-index = -1，会使 demo 出现在文档流的 bg 的后面</li>
<li>z-index 是默认 auto 时，不具有层叠上下文</li>
</ul>
</blockquote>
<blockquote>
<p>记住 ：负 z-index 逃不出 层叠上下文的小世界</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;demo&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span><span class="p">{</span>
  <span class="k">background</span><span class="p">:</span> <span class="nb">rgba</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mf">0.5</span><span class="p">);</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">200</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">position</span><span class="p">:</span> <span class="kc">relative</span><span class="p">;</span>
  <span class="c">/* z-index 是默认 auto 时，不具有层叠上下文，所以添加z-index=0，创建层叠上下文 */</span>
  <span class="k">z-index</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span> <span class="c">/* 注释这行看看 */</span>    
<span class="p">}</span>
<span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">demo</span><span class="p">{</span>
  <span class="k">width</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">background</span><span class="p">:</span> <span class="kc">red</span><span class="p">;</span>
  <span class="k">position</span><span class="p">:</span> <span class="kc">absolute</span><span class="p">;</span>
  <span class="k">z-index</span><span class="p">:</span> <span class="mi">-1</span><span class="p">;</span> <span class="c">/* 因为上面z-index:0创建了层叠上下文，所以demo无法逃出这个小世界，不可能比container低 */</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>图一：当 container 不是层叠上下文（也就是没有 z-index: 0; ）时，demo 是 <code>z-index = -1</code> 存在于容器bg之下</p>
<p>图二：当 container 创建层叠上下文，demo 就无法跳出容器之外</p>
<p>​</p>
<p>总结：</p>
<blockquote>
<p>z-index = -1  不一定存在于容器的背景之下。当这个容器是一个层叠上下文时，就不可能存在于容器之外</p>
</blockquote>]]></description>
</item></channel>
</rss>
