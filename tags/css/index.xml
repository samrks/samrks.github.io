<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>CSS - 标签 - Sam&#39;s Garage</title>
        <link>http://samrks.github.io/tags/css/</link>
        <description>CSS - 标签 - Sam&#39;s Garage</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>ryuukousen@gmail.com (Sam)</managingEditor>
            <webMaster>ryuukousen@gmail.com (Sam)</webMaster><lastBuildDate>Sun, 02 Aug 2020 01:19:27 &#43;0800</lastBuildDate><atom:link href="http://samrks.github.io/tags/css/" rel="self" type="application/rss+xml" /><item>
    <title>Re：从零开始の CSS 学习笔记——动画</title>
    <link>http://samrks.github.io/20200802-re%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84css%E5%8A%A8%E7%94%BB/</link>
    <pubDate>Sun, 02 Aug 2020 01:19:27 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://samrks.github.io/20200802-re%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84css%E5%8A%A8%E7%94%BB/</guid>
    <description><![CDATA[<p>浏览器的渲染流程、transform、transition、animation</p>
<p>​</p>
<h2 id="动画的原理">动画的原理</h2>
<blockquote>
<p>人脑的 bug</p>
</blockquote>
<h3 id="动画">动画</h3>
<h4 id="定义">定义</h4>
<ul>
<li>由许多静止的画面（帧），</li>
<li>以一定的速度（如每秒30张）连续播放时，</li>
<li>肉眼因视觉残象产生错觉，</li>
<li>而误以为是活动的画面。</li>
</ul>
<h4 id="概念">概念</h4>
<ul>
<li>帧：每个静止的画面都叫做帧</li>
<li>播放速度：每秒24帧（影视）或者每秒30帧（游戏）</li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="一个最简单的例子">一个最简单的例子</h2>
<h3 id="将div从左往右移动">将div从左往右移动</h3>
<blockquote>
<p><a href="http://js.jirengu.com/bagow/1/edit?html,css,js,output">http://js.jirengu.com/bagow/1/edit?html,css,js,output</a></p>
</blockquote>
<ul>
<li><a href="http://js.jirengu.com/wotud/3/edit" target="_blank" rel="noopener noreffer">JSBin 示例1</a>  通过循环定时器 + 定位 + left 实现动画。控制每隔一小段时间增加 left 值，实现位移</li>
<li><a href="http://js.jirengu.com/rogot/1/edit" target="_blank" rel="noopener noreffer">JSBin 示例2</a>  通过延时器 + 添加类名 + transition / transform 实现动画。控制添加类名</li>
</ul>
<h4 id="原理">原理</h4>
<ul>
<li>每过一段时间（用setlnterval做到），</li>
<li>将div移动一小段距离，</li>
<li>直到移动到目标地点。</li>
</ul>
<h4 id="注意性能">注意性能</h4>
<blockquote>
<p>需要先搞懂：<a href="#%e6%b5%8f%e8%a7%88%e5%99%a8%e6%b8%b2%e6%9f%93%e8%bf%87%e7%a8%8b" rel="">浏览器的渲染步骤</a>，以及 <a href="#%e6%af%8f%e4%b8%aa%e5%b1%9e%e6%80%a7%e8%a7%a6%e5%8f%91%e4%bb%80%e4%b9%88%e6%b5%81%e7%a8%8b" rel="">每个属性会触发什么流程</a></p>
</blockquote>
<ul>
<li>
<p>绿色表示重新绘制（repaint）了</p>
</li>
<li>
<p>CSS渲染过程依次包含布局、绘制、合成</p>
</li>
<li>
<p>其中布局和绘制有可能被省略</p>
</li>
</ul>
<p>​</p>
<h3 id="前端高手不用-left-做动画">前端高手不用 left 做动画</h3>
<h4 id="用-transform变形">用 transform（变形）</h4>
<ul>
<li><a href="http://js.jirengu.com/lojiz/1/edit?html,css,js,output" target="_blank" rel="noopener noreffer">JSBin 演示</a></li>
</ul>
<h4 id="原理-1">原理</h4>
<ul>
<li><code>transform: translateX(0=&gt;300px)</code></li>
<li>直接修改会被合成，需要等一会修改</li>
<li>transition 过渡属性可以自动脑补中间帧</li>
</ul>
<h4 id="注意性能-1">注意性能</h4>
<blockquote>
<p>需要先搞懂：<a href="#%e6%b5%8f%e8%a7%88%e5%99%a8%e6%b8%b2%e6%9f%93%e8%bf%87%e7%a8%8b" rel="">浏览器的渲染步骤</a>，以及 <a href="#%e6%af%8f%e4%b8%aa%e5%b1%9e%e6%80%a7%e8%a7%a6%e5%8f%91%e4%bb%80%e4%b9%88%e6%b5%81%e7%a8%8b" rel="">每个属性会触发什么流程</a></p>
</blockquote>
<ul>
<li>transform 优势在于，并没有 relayout（重新布局） 和 repaint（重新绘制）过程</li>
<li>transform 比 left 性能好很多（ 因为 left 会依次经过 relayout、 repaint、composite 3个过程）</li>
</ul>
<p>​</p>
<h3 id="如何查看性能">如何查看性能</h3>
<blockquote>
<p>上述 JSBin 示例1/2两种方式，在性能上有什么区别 ？</p>
</blockquote>
<h4 id="查看性能的方式">查看性能的方式</h4>
<ul>
<li>开启浏览器的【渲染 Rendering 】&gt;  【画图闪烁 Paint flashing】：突出显示需要重新绘制的页面区域（绿色）
<ul>
<li><strong>如果元素发生的重新渲染（绿）的次数多，则更耗性能</strong></li>
</ul>
</li>
</ul>
<p></p>
<ul>
<li>
<p>示例1：使用 setInterval ，控制 left 实现动画</p>
<p>（位移全程 demo元素 都呈绿色：说明全程都在进行demo元素的重新渲染绘制）</p>
</li>
</ul>
<p></p>
<ul>
<li>
<p>示例2：添加类名，通过 transition + transform 实现动画</p>
<p>（刷新后，初次渲染呈绿色，移动过程没有发生重新渲染，移动结束的位置重新渲染一次）</p>
<p></p>
</li>
<li>
<p><strong>总结</strong>：<strong>显然 ，示例1 更耗性能，全程都需要重新渲染</strong></p>
</li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="浏览器的渲染原理">浏览器的渲染原理</h2>
<blockquote>
<ul>
<li>既然讲到这里，提到了性能、渲染，那就深入了解一下</li>
<li>了解浏览器的渲染流程后，再回头看前面2个示例，可能会更好理解它们的不同</li>
</ul>
</blockquote>
<h3 id="参考文章">参考文章</h3>
<h4 id="google-团队写的文章右上角中文">Google 团队写的文章（右上角中文）</h4>
<ul>
<li><a href="https://developers.google.com/web/fundamentals/performance/critical-rendering-path/render-tree-construction" target="_blank" rel="noopener noreffer">渲染树构建、布局及绘制</a></li>
<li><a href="https://developers.google.com/web/fundamentals/performance/rendering/" target="_blank" rel="noopener noreffer">渲染性能</a></li>
<li><a href="https://developers.google.com/web/fundamentals/performance/rendering/stick-to-compositor-only-properties-and-manage-layer-count" target="_blank" rel="noopener noreffer">使用 transform 来实现动画</a></li>
</ul>
<h4 id="查看css各属性触发什么">查看CSS各属性触发什么</h4>
<ul>
<li><a href="https://csstriggers.com/" target="_blank" rel="noopener noreffer">CSSTriggers.com</a></li>
</ul>
<p>​</p>
<h3 id="浏览器渲染过程">浏览器渲染过程</h3>
<blockquote>
<p>浏览器在获取到 html 和 css 后做了什么？</p>
</blockquote>
<h4 id="步骤">步骤</h4>
<ol>
<li>根据 HTML 构建 HTML 树（DOM）</li>
<li>根据 CSS 构建 CSS 树（CSSOM）</li>
<li>将两棵树合并成一颗渲染树（render tree）</li>
<li>根据渲染树，进行 Layout 布局（<strong>文档流</strong>、盒模型、计算大小和位置）
<ul>
<li>先定位：某个标签是否在文档流中…<strong>（文档流的概念非常重要！！）</strong></li>
<li>定位后，要知道这个标签多高多宽、样式如何…</li>
</ul>
</li>
<li>Paint 绘制（填色：把边框颜色、文字颜色、阴影等画出来）</li>
<li>Composite 合成（根据层叠关系展示画面）</li>
</ol>
<h4 id="三棵树">三棵树</h4>
<blockquote>
<p>render tree 就是最终用户看到的树</p>
</blockquote>
<p></p>
<p>​</p>
<h2 id="如何更新样式">如何更新样式</h2>
<h3 id="一般我们用-js-来更新样式">一般我们用 JS 来更新样式</h3>
<ul>
<li>比如 <code>div.style.background='red'</code>  让内联背景变红色</li>
<li>比如 <code>div.style.display='none'</code>  让div消失</li>
<li>比如 <code>div.classList.add('red')</code>  （小白才直接加样式，高手从来只加类名）</li>
<li>比如 <code>div.remove()</code>直接删掉节点</li>
</ul>
<h3 id="那么这些方法有什么不同吗">那么这些方法有什么不同吗</h3>
<ul>
<li>有三种不同的渲染方式</li>
<li>详细看下面  ↓↓</li>
</ul>
<h3 id="三种更新方式">三种更新方式</h3>
<blockquote>
<p>使用 JS 来更新样式，要经过哪些步骤 ？</p>
<ul>
<li>
<p>下面有3种代码示例，配合开启浏览器渲染功能，清晰看到执行重新绘制（Paint）的元素</p>
</li>
<li>
<p>注意 JSBin 中最好<strong>全屏</strong>查看效果，在 iframe 里看可能有问题</p>
</li>
</ul>
</blockquote>
<p></p>
<h5 id="第一种流程全走一遍">第一种，流程全走一遍</h5>
<ul>
<li><a href="http://js.jirengu.com/jagel/1/edit?html,css,js,output" target="_blank" rel="noopener noreffer">div.remove()</a> 会触发当前消失，其他元素 relayout 重新布局</li>
</ul>
<h5 id="第二种跳过-layout">第二种，跳过 layout</h5>
<ul>
<li>说明没有改变元素的位置和大小，不需要变动布局</li>
</ul>
<ul>
<li>比如说：只<a href="http://js.jirengu.com/jidam/1/edit?html,css,js,output" target="_blank" rel="noopener noreffer">改变背景颜色</a>，直接 repaint + composite</li>
</ul>
<h5 id="第三种跳过-layout-和-paint">第三种，跳过 layout 和 paint</h5>
<ul>
<li>没有改变位置、大小，也没有改颜色，只需要合成</li>
</ul>
<ul>
<li>例如：只<a href="http://js.jirengu.com/wusew/1" target="_blank" rel="noopener noreffer">改变 transform</a>，则只需 composite 合成</li>
<li>注意必须全屏查看效果，在 iframe 里看有问题</li>
</ul>
<p>​</p>
<h3 id="每个属性触发什么流程">每个属性触发什么流程</h3>
<blockquote>
<p>CSS变态之处来了：挨个尝试吧</p>
</blockquote>
<p>还好，程序员喜欢分享</p>
<p><a href="https://csstriggers.com/">https://csstriggers.com/</a>  这个网站已经把所有属性全试过了</p>
<p></p>
<ul>
<li>Blink：谷歌 Chrome 浏览器的内核（一般只看 Chrome 性能渲染）</li>
<li>Gecko：火狐浏览器 Firefox</li>
<li>WebKit：苹果 Safari 浏览器</li>
<li>EdgeHTML：微软 Edge 浏览器</li>
</ul>
<blockquote>
<p>现在可以解释 <a href="#%e4%b8%80%e4%b8%aa%e6%9c%80%e7%ae%80%e5%8d%95%e7%9a%84%e4%be%8b%e5%ad%90" rel="">为什么</a> <strong>前端高手不用 left 做动画</strong>，而用 transform 做动画了</p>
<ul>
<li>因为执行 left 会触发3个流程：先布局、再绘制、最后合成</li>
<li>而执行 transform 只会触发 1个流程：只合成</li>
</ul>
</blockquote>
<p></p>
<p></p>
<p>​</p>
<p>​</p>
<h2 id="css动画优化">CSS动画优化</h2>
<blockquote>
<p>可以自己总结一篇博客。面试背不出来，可以让面试官去看博客</p>
</blockquote>
<blockquote>
<p>CSS 性能优化，除了把 left 变成 transform ，还有什么？</p>
<ul>
<li>面试可能考察，但这个问题<strong>没什么技术含量</strong>，就是背</li>
</ul>
</blockquote>
<h3 id="没什么技术含量">没什么技术含量</h3>
<p>答案都在 <a href="https://developers.google.com/web/fundamentals/performance/rendering/stick-to-compositor-only-properties-and-manage-layer-count" target="_blank" rel="noopener noreffer">Google写的文章</a> 里，谁看完谁牛 X</p>
<p></p>
<ul>
<li>
<p><a href="https://developers.google.com/web/fundamentals/performance/rendering/optimize-javascript-execution" target="_blank" rel="noopener noreffer">优化 JS 的执行</a> （JavaScript）</p>
</li>
<li>
<p><a href="https://developers.google.com/web/fundamentals/performance/rendering/reduce-the-scope-and-complexity-of-style-calculations" target="_blank" rel="noopener noreffer">缩小样式计算的范围并降低其复杂性</a> （优化 Style 过程）</p>
</li>
<li>
<p><a href="https://developers.google.com/web/fundamentals/performance/rendering/avoid-large-complex-layouts-and-layout-thrashing" target="_blank" rel="noopener noreffer">避免大型、复杂的布局和布局抖动</a>（优化 Layout 布局过程）</p>
</li>
<li>
<p><a href="https://developers.google.com/web/fundamentals/performance/rendering/simplify-paint-complexity-and-reduce-paint-areas" target="_blank" rel="noopener noreffer">简化绘制的复杂度、减小绘制区域</a>（优化 Paint 绘制过程）</p>
</li>
<li>
<p><a href="https://developers.google.com/web/fundamentals/performance/rendering/stick-to-compositor-only-properties-and-manage-layer-count" target="_blank" rel="noopener noreffer">坚持仅合成器的属性和管理层计数</a>（优化 Composite 合成过程）</p>
</li>
</ul>
<blockquote>
<p>上述每篇文章中的优化方法，都总结在【==TL;DR==（too long don&rsquo;t read 太长不看）】部分</p>
<p>每条优化点之间，都没什么规律，就依靠死记硬背（面试问到，可能这些点，如果能答出1个，就得满分）</p>
</blockquote>
<h3 id="js优化">JS优化</h3>
<p>使用 requestAnimationFrame 代替 setTimeout 或 setInterval</p>
<h3 id="css优化">CSS优化</h3>
<p>使用 will-change 或 translate（transform）</p>
<h3 id="没错">没错</h3>
<blockquote>
<p>没错，完全就是死记硬背！</p>
</blockquote>
<blockquote>
<p>如果面试官问，“ CSS 怎么优化 ”？（通常就是问动画怎么优化，性能上更低耗）</p>
<ul>
<li>动画尽量使用 will-change 或 translate（transform），不直接使用 left</li>
<li>JS 控制的动画中，尽量不使用 setTimeout 和 setInterval，而使用 requestAnimationFrame</li>
</ul>
</blockquote>
<p>​</p>
<p>​</p>
<h2 id="transform-全解">transform 全解</h2>
<blockquote>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform" target="_blank" rel="noopener noreffer">MDN</a> 上讲的非常详细</p>
</blockquote>
<h3 id="transform">transform</h3>
<h4 id="四个常用功能">四个常用功能</h4>
<ul>
<li><a href="#transform%e4%b9%8btranslate" rel="">位移 translate</a>（常用）</li>
<li><a href="#transform%e4%b9%8bscale" rel="">缩放 scale</a>（常用）</li>
<li><a href="#transform%e4%b9%8brotate" rel="">旋转 rotate</a>（做加载动画可能用到）</li>
<li><a href="#transform%e4%b9%8bskew" rel="">倾斜 skew</a>（不常用）</li>
</ul>
<h4 id="经验">经验</h4>
<ul>
<li>一般都需要配合 transition 过渡</li>
<li>inline 元素不支持 transform，需要先变成 block</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="transform之translate">transform之translate</h3>
<h4 id="常用写法">常用写法</h4>
<blockquote>
<p>可以写长度length和百分号percentage， ?表示可省略值</p>
</blockquote>
<ul>
<li>
<p><code>translateX(&lt;length-percentage&gt;)</code>   （横向）</p>
</li>
<li>
<p><code>translateY（&lt;length-percentage&gt;)</code>    （纵向）</p>
</li>
<li>
<p><code>translate(&lt;length-percentage&gt;,&lt;length-percentage&gt;?) </code></p>
<ul>
<li>可省略第二个值，只写第一个值，默认x轴</li>
</ul>
</li>
<li>
<p><code>translateZ(&lt;length&gt;)</code> （垂直于屏幕的方向）</p>
<ul>
<li>
<p>在三维世界中，才能看出 Z 的变化。</p>
<ul>
<li>需要配合 perspective 属性，告知浏览器<strong>视点</strong>的位置 来形成三维。</li>
<li>例：<strong><code>perspective: 1000px</code></strong> 指视点在（位于画面中心）距离屏幕 1000 像素的位置上。</li>
</ul>
</li>
<li>
<p>注意：是给父容器设置 perspective</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;wrapper&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;demo&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">#</span><span class="nn">demo</span><span class="p">{</span>
    <span class="k">width</span><span class="p">:</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">height</span><span class="p">:</span> <span class="mi">200</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
    <span class="k">margin</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="p">#</span><span class="nn">demo</span><span class="p">:</span><span class="nd">hover</span><span class="p">{</span>
    <span class="k">transform</span><span class="p">:</span> <span class="nb">translateZ</span><span class="p">(</span><span class="mi">50</span><span class="kt">px</span><span class="p">);</span>  <span class="c">/* 元素在z轴（默认垂直屏幕方向）上的位置 */</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">wrapper</span><span class="p">{</span>
    <span class="k">perspective</span><span class="p">:</span> <span class="mi">1000</span><span class="kt">px</span><span class="p">;</span>  <span class="c">/* 形成三维构图，标注视点位置 */</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">black</span><span class="p">;</span>
  <span class="p">}</span> 
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
</li>
<li>
<p>translate3d(x,y,z)</p>
<ul>
<li><strong><code>translate3d(50px,50px,200px);</code></strong>  同时设定3个轴上的位置</li>
</ul>
</li>
<li>
<p><a href="http://js.jirengu.com/xidiy/1/edit?html,css,output" target="_blank" rel="noopener noreffer">JSBin 演示</a></p>
</li>
</ul>
<h4 id="经验-1">经验</h4>
<ul>
<li>
<p>要学会看懂 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform" target="_blank" rel="noopener noreffer">MDN 的语法格式</a></p>
</li>
<li>
<p>translate(-50%，-50%) 可做绝对定位元素的<strong>居中</strong></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">#</span><span class="nn">demo</span><span class="p">{</span>
  <span class="k">position</span><span class="p">:</span> <span class="kc">absolute</span><span class="p">;</span>
  <span class="k">left</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
  <span class="k">top</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
  <span class="k">transform</span><span class="p">:</span> <span class="nb">translate</span><span class="p">(</span><span class="mi">-50</span><span class="kt">%</span><span class="p">,</span> <span class="mi">-50</span><span class="kt">%</span><span class="p">)</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="transform之scale">transform之scale</h3>
<h4 id="常用写法-1">常用写法</h4>
<ul>
<li><code>scaleX(&lt;number&gt;) </code></li>
<li><code>scaleY(&lt;number&gt;) </code></li>
<li><code>scale(&lt;number&gt;,&lt;number&gt;?)</code></li>
<li><a href="http://js.jirengu.com/jucal/1/edit?html,css,output" target="_blank" rel="noopener noreffer">JSBin 演示</a></li>
</ul>
<h4 id="经验-2">经验</h4>
<ul>
<li>用得较少，因为缩放容易出现模糊
<ul>
<li>border 也会跟随缩放</li>
</ul>
</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="transform之rotate">transform之rotate</h3>
<h4 id="常用写法-2">常用写法</h4>
<blockquote>
<p>rotate 默认以 Z轴为中心轴，进行转动</p>
</blockquote>
<ul>
<li><code>rotate（[&lt;angle&gt;|&lt;zero&gt;]) </code>   以Z轴为中心旋转</li>
<li><code>rotateZ([&lt;angle&gt;|&lt;zero&gt;]) </code>   以Z轴为中心旋转</li>
<li><code>rotateX([&lt;angle&gt;|&lt;zero&gt;])  </code> 以X轴为中心旋转</li>
<li><code>rotateY（[&lt;angle&gt;|&lt;zero&gt;]) </code>   以Y轴为中心旋转</li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform-function/rotate3d" target="_blank" rel="noopener noreffer">rotate3d</a> 太复杂，无法用语言表述</li>
<li><a href="http://js.jirengu.com/jiquq/1/edit?html,css,output" target="_blank" rel="noopener noreffer">JSBin 演示</a></li>
</ul>
<h4 id="经验-3">经验</h4>
<ul>
<li>一般用于360度旋转制作 loading</li>
<li>用到时再搜索 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform-function/rotate" target="_blank" rel="noopener noreffer">rotate MDN</a> 看文档</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="transform之skew">transform之skew</h3>
<h4 id="常用写法-3">常用写法</h4>
<ul>
<li><code>skewX([&lt;angle&gt;|&lt;zero&gt;]) </code></li>
<li><code>skewY（[&lt;angle&gt;|&lt;zero&gt;]) </code></li>
<li><code>skew([&lt;angle&gt;I&lt;zero&gt;],[&lt;angle&gt;|&lt;zero&gt;]?) </code></li>
<li><a href="http://js.jirengu.com/tazer/1/edit?html,css,output" target="_blank" rel="noopener noreffer">JSBin 演示</a></li>
</ul>
<h4 id="经验-4">经验</h4>
<ul>
<li>用得较少</li>
<li>用到时再搜 skew MDN 文档</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="transform-多重效果">transform 多重效果</h3>
<h4 id="组合使用">组合使用</h4>
<ul>
<li>
<p><strong><code>transform: scale(0.5) translate(-100%, -100%);</code></strong></p>
</li>
<li>
<p><strong><code>transform: none;</code></strong> 取消所有</p>
</li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="实践用-transform-做红心">实践：用 transform 做红心</h2>
<h3 id="跳动的心">跳动的心</h3>
<ul>
<li><a href="http://js.jirengu.com/nonud/1/edit?html,css,output" target="_blank" rel="noopener noreffer">JSBin</a></li>
</ul>
<h3 id="心得">心得</h3>
<ul>
<li>CSS需要你有想象力，而不是逻辑</li>
<li>CSS给出的属性都很简单，但是可以组合得很复杂</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!doctype html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;UTF-8&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;viewport&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">http-equiv</span><span class="o">=</span><span class="s">&#34;X-UA-Compatible&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;ie=edge&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>beating heart<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
      <span class="o">*</span><span class="p">{</span>
        <span class="k">margin</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">padding</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">box-sizing</span><span class="p">:</span> <span class="kc">border-box</span><span class="p">;</span>
      <span class="p">}</span>
      <span class="p">#</span><span class="nn">heart</span><span class="p">{</span>
        <span class="k">margin</span><span class="p">:</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>
        <span class="k">position</span><span class="p">:</span> <span class="kc">relative</span><span class="p">;</span>
        <span class="c">/*border: 1px solid black;*/</span>
        <span class="k">display</span><span class="p">:</span> <span class="kc">inline</span><span class="o">-</span><span class="kc">block</span><span class="p">;</span>
        <span class="k">transition</span><span class="p">:</span> <span class="kc">all</span> <span class="mf">.5</span><span class="kt">s</span> <span class="kc">ease</span><span class="p">;</span>
      <span class="p">}</span>
      <span class="p">#</span><span class="nn">heart</span><span class="p">:</span><span class="nd">hover</span><span class="p">{</span>
        <span class="k">transform</span><span class="p">:</span> <span class="nb">scale</span><span class="p">(</span><span class="mf">1.5</span><span class="p">);</span>
      <span class="p">}</span>
      <span class="p">#</span><span class="nn">heart</span><span class="o">&gt;</span><span class="p">.</span><span class="nc">bottom</span><span class="p">{</span>
        <span class="k">width</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
        <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
        <span class="k">background-color</span><span class="p">:</span> <span class="kc">red</span><span class="p">;</span>
        <span class="c">/*border: 1px solid red;*/</span>
        <span class="k">transform</span><span class="p">:</span> <span class="nb">rotate</span><span class="p">(</span><span class="mi">45</span><span class="kt">deg</span><span class="p">);</span>
      <span class="p">}</span>
      <span class="p">#</span><span class="nn">heart</span><span class="o">&gt;</span><span class="p">.</span><span class="nc">left</span><span class="p">{</span>
        <span class="k">width</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
        <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
        <span class="k">background-color</span><span class="p">:</span> <span class="kc">red</span><span class="p">;</span>
        <span class="c">/*border: 1px solid red;*/</span>
        <span class="k">border-radius</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span> <span class="mi">0</span> <span class="mi">0</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
        <span class="k">transform</span><span class="p">:</span> <span class="nb">rotate</span><span class="p">(</span><span class="mi">45</span><span class="kt">deg</span><span class="p">)</span> <span class="nb">translateX</span><span class="p">(</span><span class="mi">31</span><span class="kt">px</span><span class="p">);</span>
        <span class="k">position</span><span class="p">:</span> <span class="kc">absolute</span><span class="p">;</span>
        <span class="k">bottom</span><span class="p">:</span><span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
        <span class="k">right</span><span class="p">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
      <span class="p">}</span>
      <span class="p">#</span><span class="nn">heart</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">right</span> <span class="p">{</span>
        <span class="k">width</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
        <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
        <span class="k">background-color</span><span class="p">:</span> <span class="kc">red</span><span class="p">;</span>
        <span class="c">/*border: 1px solid red;*/</span>
        <span class="k">border-radius</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span> <span class="mi">50</span><span class="kt">%</span> <span class="mi">0</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">transform</span><span class="p">:</span> <span class="nb">rotate</span><span class="p">(</span><span class="mi">45</span><span class="kt">deg</span><span class="p">)</span> <span class="nb">translate</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">30</span><span class="kt">px</span><span class="p">);</span>
        <span class="k">position</span><span class="p">:</span> <span class="kc">absolute</span><span class="p">;</span>
        <span class="k">bottom</span><span class="p">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
        <span class="k">left</span><span class="p">:</span> <span class="mi">100</span><span class="kt">%</span><span class="p">;</span>
      <span class="p">}</span>
    <span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;heart&#34;</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;left&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;right&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;bottom&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p>​</p>
<p>​</p>
<h2 id="transition-过渡">transition 过渡</h2>
<blockquote>
<p>学习资料：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transition" target="_blank" rel="noopener noreffer">MDN</a></p>
</blockquote>
<h3 id="作用">作用</h3>
<ul>
<li>补充中间帧
<ul>
<li>已知开头位置，结尾位置，中间运动轨迹自动补齐</li>
</ul>
</li>
</ul>
<h3 id="语法">语法</h3>
<blockquote>
<p><strong><code>transition</code></strong> CSS 属性是 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transition-property" target="_blank" rel="noopener noreffer"><code>transition-property</code></a>，<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transition-duration" target="_blank" rel="noopener noreffer"><code>transition-duration</code></a>，<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transition-timing-function" target="_blank" rel="noopener noreffer"><code>transition-timing-function</code></a> 和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/transition-delay" target="_blank" rel="noopener noreffer"><code>transition-delay</code></a> 的一个<a href="https://developer.mozilla.org/en-US/docs/CSS/Shorthand_properties" target="_blank" rel="noopener noreffer">简写属性</a>。</p>
<blockquote>
<p><a href="http://js.jirengu.com/wasiv/1/edit?html,css,js,output" target="_blank" rel="noopener noreffer">JSBin 示例</a></p>
</blockquote>
</blockquote>
<ul>
<li>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="nt">transition</span><span class="o">:</span> <span class="nt">属性名</span> <span class="nt">时长</span> <span class="nt">过渡方式</span> <span class="nt">延迟</span>
</code></pre></td></tr></table>
</div>
</div><p><strong><code>transition: left 200ms linear </code></strong>   属性名是指要给哪个属性添加过渡效果</p>
</li>
<li>
<p>可以用 all 代表所有属性：width | height | left | right | margin-right  ……</p>
<p><strong><code>transition: all 200ms </code></strong></p>
</li>
<li>
<p>可以用逗号分隔两个不同属性</p>
<p><strong><code>transition: left 200ms, top 400ms </code></strong></p>
</li>
<li>
<p>时长 ：支持 秒 s  和  毫秒 ms 单位。0.5s 可以写成  .5s</p>
</li>
<li>
<p>过渡方式有：linear（线性匀速） | ease（默认值：缓动） | ease-in | ease-out | ease- in-out | cubic-bezier | step-start | step-end | steps</p>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/timing-function" target="_blank" rel="noopener noreffer">具体含义</a>要靠数学知识</li>
<li><a href="https://cubic-bezier.com/">https://cubic-bezier.com/</a>   测试运动曲线</li>
</ul>
</li>
</ul>
<h3 id="注意">注意</h3>
<blockquote>
<p>不学常态，学变态</p>
</blockquote>
<h4 id="并不是所有属性都能过渡">并不是所有属性都能过渡</h4>
<ul>
<li>
<p>一个元素，切换可见状态</p>
<ul>
<li>
<p>使用 display: none &lt;=&gt; display: block 没法过渡，会闪现、闪隐【元素消失，不占位置】</p>
</li>
<li>
<p>使用 opacity: 0 &lt;=&gt;  opacity: 1   透明度控制可见状态【可实现过渡效果，<strong>缺点</strong>是元素消失仍占位置】</p>
</li>
<li>
<p><strong>推荐</strong>使用 <strong><code>visibility: hidden</code></strong> &lt;=&gt; <strong><code>visibility: visible</code></strong> （不要问为什么）【缺点没法过渡、元素消失仍占位置】</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-js" data-lang="js"><span class="nx">button</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span>
  <span class="nx">demo</span><span class="p">.</span><span class="nx">classList</span><span class="p">.</span><span class="nx">add</span><span class="p">(</span><span class="s1">&#39;end&#39;</span><span class="p">);</span>
  <span class="cm">/* 解决隐藏后仍占位问题：延迟1s后，将元素删除 */</span>
  <span class="cm">/* 方法一：使用延时器 */</span>
  <span class="nx">setTimeout</span><span class="p">(()</span> <span class="p">=&gt;</span> <span class="p">{</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span> <span class="p">}</span> <span class="p">,</span><span class="mi">1000</span><span class="p">)</span>  
  <span class="cm">/* 方法二: on事件可能有bug，推荐使用事件监听器 */</span>
  <span class="nx">demo</span><span class="p">.</span><span class="nx">ontransitionend</span> <span class="o">=</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span> <span class="p">}</span>  <span class="cm">/* on事件 */</span>
  <span class="nx">demo</span><span class="p">.</span><span class="nx">addEventLisener</span><span class="p">(</span><span class="s1">&#39;transitionend&#39;</span><span class="p">,</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">remove</span><span class="p">();</span> <span class="p">})</span>   <span class="cm">/* 事件监听器 */</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
</li>
<li>
<p>display 和 visibility 的区别</p>
<ul>
<li>
<p><a href="https://www.cnblogs.com/zrenj/p/9785835.html">https://www.cnblogs.com/zrenj/p/9785835.html</a></p>
<p></p>
</li>
</ul>
</li>
<li>
<p>background 颜色可以过渡吗？可以 。</p>
<ul>
<li><a href="http://js.jirengu.com/wasiv/3/edit?html,css,js,output" target="_blank" rel="noopener noreffer">查看示例</a></li>
</ul>
</li>
<li>
<p>opacity 透明度可以过渡吗？ 可以 。</p>
<ul>
<li><a href="http://js.jirengu.com/wasiv/5/edit?html,css,js,output" target="_blank" rel="noopener noreffer">查看示例</a></li>
<li><strong>不推荐用透明度控制显示隐藏，推荐 visibility</strong></li>
<li>opacity: 0 &lt;=&gt;  opacity: 1   可实现过渡效果，<strong>缺点</strong>是元素消失仍占位置，可通过 js 控制 remove() 该元素</li>
</ul>
</li>
</ul>
<p>​</p>
<h3 id="过渡必须要有起始">过渡必须要有起始</h3>
<blockquote>
<p>起始：指一个属性的开始是一个值，该属性的结尾也有一个值。这样才能实现某属性的属性值的变化过渡，中间过渡的效果浏览器会自动补充</p>
</blockquote>
<ul>
<li>一般只有一次动画，或者两次
<ul>
<li>一次：指只有进入动画</li>
<li>两次：①进入动画、②离开动画</li>
</ul>
</li>
<li>比如 hover 和 非 hover 状态的过渡，就是两次动画</li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="如果除了起始还有中间点怎么办">如果除了起始，还有中间点，怎么办</h2>
<blockquote>
<p>例如：从红色，先变黄色，最后再变绿色，怎么实现</p>
</blockquote>
<p>有如下两种办法</p>
<h3 id="方法-使用两次-transform">方法① 使用两次 transform</h3>
<ul>
<li>
<p>流程：   .a === transform ===&gt; .b    然后   .b === transform ===&gt; .c</p>
</li>
<li>
<p>如何知道到了中间点呢？</p>
<ul>
<li>
<p>用 setTimeout 或者监听 transitionend 事件。</p>
<blockquote>
<p>给元素添加新的类名：执行第二段 transform 效果。</p>
<ul>
<li>注意：第二段 transform 中必须包含第一段动画效果，不然执行第二段动画可能还原初始位置，有 bug，可自行测试。</li>
</ul>
</blockquote>
</li>
<li>
<p><a href="http://js.jirengu.com/vehuz/2/edit" target="_blank" rel="noopener noreffer">JSBin 示例</a></p>
</li>
</ul>
</li>
</ul>
<h3 id="方法-使用-animation">方法② 使用 animation</h3>
<ul>
<li>声明关键帧</li>
<li>添加动画</li>
<li><a href="http://js.jirengu.com/peran/1/edit?html,css,output" target="_blank" rel="noopener noreffer">JSBin 示例</a></li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="animation-动画">animation 动画</h2>
<h3 id="提问">提问</h3>
<blockquote>
<p>如何让动画停在最后一帧？</p>
</blockquote>
<ul>
<li>
<p>搜索 css animation stop at end</p>
<ul>
<li>
<p>网友给出的答案是：加个 forwards</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="nt">animation</span><span class="o">:</span> <span class="nt">xxx</span> <span class="nt">1</span><span class="p">.</span><span class="nc">5s</span> <span class="nt">forwards</span><span class="o">;</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
</li>
<li>
<p><a href="http://js.jirengu.com/lodoy/1/edit?html,css,output" target="_blank" rel="noopener noreffer">JSBin 演示</a></p>
</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="keyframes-完整语法">@keyframes 完整语法</h3>
<h4 id="标准写法">标准写法</h4>
<ul>
<li>搜索 <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/@keyframes" target="_blank" rel="noopener noreffer">keyframes MDN</a> 讲得很清楚
<ul>
<li>一种写法是 from to ：只支持两种状态</li>
<li>另一种写法是百分数：支持添加 n 个帧状态</li>
</ul>
</li>
</ul>
<p></p>
<p></p>
<p>​</p>
<h3 id="animation-缩写语法">animation 缩写语法</h3>
<blockquote>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/animation" target="_blank" rel="noopener noreffer">animation MDN</a></p>
</blockquote>
<blockquote>
<p><strong>animation</strong> 属性是 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/animation-name" target="_blank" rel="noopener noreffer"><code>animation-name</code></a>，<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/animation-duration" target="_blank" rel="noopener noreffer"><code>animation-duration</code></a>, <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/animation-timing-function" target="_blank" rel="noopener noreffer"><code>animation-timing-function</code></a>，<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/animation-delay" target="_blank" rel="noopener noreffer"><code>animation-delay</code></a>，<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/animation-iteration-count" target="_blank" rel="noopener noreffer"><code>animation-iteration-count</code></a>，<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/animation-direction" target="_blank" rel="noopener noreffer"><code>animation-direction</code></a>，<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/animation-fill-mode" target="_blank" rel="noopener noreffer"><code>animation-fill-mode</code></a> 和 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/animation-play-state" target="_blank" rel="noopener noreffer"><code>animation-play-state</code></a> 属性的一个简写属性形式。</p>
<p><a href="https://xiedaimala.com/tasks/597dbc7b-15e1-4f27-b814-d2151a63c34b/video_tutorials/046dd8ef-8f6f-4051-a233-d4c997113e24" target="_blank" rel="noopener noreffer">Jirengu 视频讲解</a></p>
<p><a href="http://js.jirengu.com/gaxed/2/edit?html,css,js,output" target="_blank" rel="noopener noreffer">JSBin 演示</a></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="nt">animation</span><span class="o">:</span> <span class="nt">时长</span> <span class="o">|</span> <span class="nt">过渡方式</span> <span class="o">|</span> <span class="nt">延迟</span> <span class="o">|</span> <span class="nt">次数</span> <span class="o">|</span> <span class="nt">方向</span> <span class="o">|</span> <span class="nt">填充模式</span> <span class="o">|</span> <span class="nt">是否暂停</span> <span class="o">|</span> <span class="nt">动画名</span> <span class="o">;</span>  <span class="c">/* 位置任意 */</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>时长：1s 或者 1000ms</p>
</li>
<li>
<p>过渡方式：跟 transition 取值一样，如 linear 。默认是 ease 先快后慢</p>
</li>
<li>
<p>延迟时间：1s 或 1000ms</p>
</li>
<li>
<p>次数：3 或者 2.4 或者 <a href="" rel="">infinite</a>（无限次）</p>
</li>
<li>
<p>方向：reverse | <strong><a href="" rel="">alternate</a></strong>（交替，非常适合做加载动画） | alternate-reverse</p>
</li>
<li>
<p>填充模式：none | <a href="" rel="">forwards</a>（保持在动画终点位置） | backwards | both</p>
</li>
<li>
<p>是否暂停：paused | running</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-js" data-lang="js"><span class="nx">pauseBtn</span><span class="p">.</span><span class="nx">onclick</span> <span class="o">=</span> <span class="p">()</span> <span class="p">=&gt;</span> <span class="p">{</span> <span class="nx">demo</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">animationPlayState</span> <span class="o">=</span> <span class="s1">&#39;paused&#39;</span> <span class="p">}</span> 
<span class="cm">/* 点击按钮，暂停demo元素的动画 */</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>更多属性值的效果，需要自己尝试。<a href="http://js.jirengu.com/gaxed/3/edit" target="_blank" rel="noopener noreffer">JSBin 演示</a></p>
</li>
<li>
<p>以上所有属性都有对应的单独属性</p>
<ul>
<li>
<pre><code>**animation** 只是这些单独属性的**缩写**，上述效果可以通过单独的属性设置
</code></pre>
</li>
</ul>
</li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="实践用-animation-做红心">实践：用 animation 做红心</h2>
<blockquote>
<p><a href="http://js.jirengu.com/hosug/1/edit?html,css,output" target="_blank" rel="noopener noreffer">JSBin 示例</a></p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span><span class="lnt">64
</span><span class="lnt">65
</span><span class="lnt">66
</span><span class="lnt">67
</span><span class="lnt">68
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!doctype html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span> <span class="na">lang</span><span class="o">=</span><span class="s">&#34;en&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;UTF-8&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">name</span><span class="o">=</span><span class="s">&#34;viewport&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">http-equiv</span><span class="o">=</span><span class="s">&#34;X-UA-Compatible&#34;</span> <span class="na">content</span><span class="o">=</span><span class="s">&#34;ie=edge&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>beating heart-animation<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
      <span class="o">*</span> <span class="p">{</span>
        <span class="k">margin</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">padding</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
        <span class="k">box-sizing</span><span class="p">:</span> <span class="kc">border-box</span><span class="p">;</span>
      <span class="p">}</span>
      <span class="p">@</span><span class="k">keyframes</span> <span class="nt">beating</span> <span class="p">{</span>
        <span class="nt">0</span><span class="o">%</span> <span class="p">{</span><span class="k">transform</span><span class="p">:</span> <span class="nb">scale</span><span class="p">(</span><span class="mi">1</span><span class="p">)}</span>
        <span class="c">/*25% {transform: scale(1.25)}*/</span>
        <span class="c">/*50% {transform: scale(1.5)}*/</span>
        <span class="c">/*75% {transform: scale(1.25)}*/</span>
        <span class="nt">100</span><span class="o">%</span> <span class="p">{</span><span class="k">transform</span><span class="p">:</span> <span class="nb">scale</span><span class="p">(</span><span class="mf">1.5</span><span class="p">)}</span>
      <span class="p">}</span>
      <span class="p">#</span><span class="nn">heart</span> <span class="p">{</span>
        <span class="c">/*border: 1px solid black;*/</span>
        <span class="k">display</span><span class="p">:</span> <span class="kc">inline</span><span class="o">-</span><span class="kc">block</span><span class="p">;</span>
        <span class="k">position</span><span class="p">:</span> <span class="kc">relative</span><span class="p">;</span>
        <span class="k">margin</span><span class="p">:</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>
      <span class="p">}</span>
      <span class="p">#</span><span class="nn">heart</span><span class="p">:</span><span class="nd">hover</span> <span class="p">{</span>
        <span class="k">animation</span><span class="p">:</span> <span class="n">beating</span> <span class="mf">.5</span><span class="kt">s</span> <span class="kc">ease</span> <span class="kc">infinite</span> <span class="kc">alternate</span><span class="p">;</span>
      <span class="p">}</span>
      <span class="p">#</span><span class="nn">heart</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">left</span> <span class="p">{</span>
        <span class="k">position</span><span class="p">:</span> <span class="kc">absolute</span><span class="p">;</span>
        <span class="k">bottom</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
        <span class="k">left</span><span class="p">:</span> <span class="mi">-50</span><span class="kt">px</span><span class="p">;</span>
        <span class="k">width</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
        <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
        <span class="c">/*border: 1px solid red;*/</span>
        <span class="k">background</span><span class="p">:</span> <span class="kc">red</span><span class="p">;</span>
        <span class="k">border-radius</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
        <span class="k">transform</span><span class="p">:</span> <span class="nb">rotate</span><span class="p">(</span><span class="mi">45</span><span class="kt">deg</span><span class="p">)</span> <span class="nb">translateX</span><span class="p">(</span><span class="mi">43</span><span class="kt">px</span><span class="p">);</span>
      <span class="p">}</span>
      <span class="p">#</span><span class="nn">heart</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">right</span> <span class="p">{</span>
        <span class="k">position</span><span class="p">:</span> <span class="kc">absolute</span><span class="p">;</span>
        <span class="k">bottom</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
        <span class="k">right</span><span class="p">:</span> <span class="mi">-50</span><span class="kt">px</span><span class="p">;</span>
        <span class="k">width</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
        <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
        <span class="c">/*border: 1px solid red;*/</span>
        <span class="k">background</span><span class="p">:</span> <span class="kc">red</span><span class="p">;</span>
        <span class="k">border-radius</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
        <span class="k">transform</span><span class="p">:</span> <span class="nb">rotate</span><span class="p">(</span><span class="mi">45</span><span class="kt">deg</span><span class="p">)</span> <span class="nb">translateY</span><span class="p">(</span><span class="mi">45</span><span class="kt">px</span><span class="p">);</span>
      <span class="p">}</span>
      <span class="p">#</span><span class="nn">heart</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">bottom</span> <span class="p">{</span>
        <span class="k">width</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
        <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
        <span class="c">/*border: 1px solid red;*/</span>
        <span class="k">background</span><span class="p">:</span> <span class="kc">red</span><span class="p">;</span>
        <span class="k">transform</span><span class="p">:</span> <span class="nb">rotate</span><span class="p">(</span><span class="mi">45</span><span class="kt">deg</span><span class="p">);</span>
      <span class="p">}</span>
    <span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="o">=</span><span class="s">&#34;heart&#34;</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;left&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;right&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;bottom&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Re：从零开始の CSS 学习笔记——定位</title>
    <link>http://samrks.github.io/20200729-re%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84css%E5%AE%9A%E4%BD%8D/</link>
    <pubDate>Wed, 29 Jul 2020 13:01:21 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://samrks.github.io/20200729-re%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84css%E5%AE%9A%E4%BD%8D/</guid>
    <description><![CDATA[<p>复习盒模型、div 的分层、新属性 position 详解、层叠上下文</p>
<p>​</p>
<h2 id="布局和定位的区别">布局和定位的区别</h2>
<p>区别大了</p>
<ul>
<li>布局是<strong>屏幕平面</strong>上的</li>
<li>定位是<strong>垂直于屏幕</strong>的</li>
</ul>
<p>​</p>
<h2 id="css-定位">CSS 定位</h2>
<blockquote>
<p>还得从<strong>文档流</strong>和<strong>盒模型</strong>说起（两个非常重要的概念）</p>
</blockquote>
<p>​</p>
<h2 id="复习盒模型">复习盒模型</h2>
<p>margin 外边距、border 边框、padding 内边距、content 内容</p>
<p>background 背景</p>
<p></p>
<h3 id="问两个问题">问两个问题</h3>
<h4 id="背景的范围是从哪到哪">背景的范围是从哪到哪？</h4>
<ul>
<li>【A】border 内边沿围成的区域 ？【B】border 外边沿围成的区域 ？</li>
</ul>
<ul>
<li>如何验证自己的猜想？
<ul>
<li>border 半透明试试，答案是【B】</li>
<li>注意：在浏览器的元素样式中，可通过 【alt + 上下方向键】，对半透明数值进行 0.1 的 ± 调整</li>
</ul>
</li>
</ul>
<h4 id="从左边看一个-div是什么样子">从左边看一个 div，是什么样子？</h4>
<blockquote>
<p>元素是有层叠关系的，脑内模拟一个三维立体结构，从左边看一个 div，是什么样子？</p>
</blockquote>
<ul>
<li>background 在文字后面然后呢？</li>
<li>如何验证自己的猜想？用代码证明即可。</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;demo&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">span</span> <span class="na">class</span><span class="o">=</span><span class="s">text</span><span class="p">&gt;</span>你好<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">.</span><span class="nc">demo</span><span class="p">{</span>
    <span class="k">box-sizing</span><span class="p">:</span> <span class="kc">border-box</span><span class="p">;</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">5</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
    <span class="k">width</span><span class="p">:</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">height</span><span class="p">:</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">background</span><span class="p">:</span> <span class="kc">blue</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">text</span><span class="p">{</span>
    <span class="k">font-size</span><span class="p">:</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>  <span class="c">/* 让字足够大，测试字能否覆盖住border */</span>
    <span class="k">color</span><span class="p">:</span> <span class="kc">green</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>结论：</p>
<ul>
<li>文字在最上层，中间是 border，最底层是 background 背景</li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="代码验证一个-div-的分层">代码验证：一个 div 的分层</h2>
<blockquote>
<p>三维立体模型 （SketchUp）</p>
</blockquote>
<ul>
<li>先给出结论（三维图），再在下面进行代码验证</li>
</ul>
<p></p>
<p></p>
<p>​</p>
<h3 id="块级子元素与内联子元素的分层位置">块级子元素与内联子元素的分层位置</h3>
<blockquote>
<p>让块级元素与内联元素，出现重叠，就可以判断哪个层级更高</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">.</span><span class="nc">demo</span><span class="p">{</span>
    <span class="k">background</span><span class="p">:</span> <span class="nb">rgb</span><span class="p">(</span><span class="mi">120</span><span class="p">,</span><span class="mi">184</span><span class="p">,</span><span class="mi">211</span><span class="p">);</span>
    <span class="k">width</span><span class="p">:</span> <span class="mi">200</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">height</span><span class="p">:</span> <span class="mi">200</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">15</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
    <span class="k">padding</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">childDiv</span><span class="p">{</span>
    <span class="k">background</span><span class="p">:</span> <span class="kc">white</span><span class="p">;</span>
    <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">margin-top</span><span class="p">:</span> <span class="mi">-10</span><span class="kt">px</span><span class="p">;</span>  <span class="c">/* 测试块级元素与文字的分层位置，将div向上移动，与文字重叠，看是否会遮挡文字 */</span>
  <span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;demo&#34;</span><span class="p">&gt;</span>
  文字内容
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;childDiv&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>如上，<code>“文字内容”</code> 和 <code>div.childDiv</code> 属于同级关系</p>
</li>
<li>
<p>结论：</p>
<ul>
<li>
<p>块级元素位于文字下层</p>
<p></p>
</li>
</ul>
</li>
</ul>
<p>​</p>
<h3 id="浮动子元素与内联子元素的分层位置">浮动子元素与内联子元素的分层位置</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">.</span><span class="nc">demo</span><span class="p">{</span> <span class="err">...</span> <span class="p">}</span>
  <span class="p">.</span><span class="nc">float</span><span class="p">{</span>
    <span class="k">float</span><span class="p">:</span> <span class="kc">left</span><span class="p">;</span>
    <span class="k">background</span><span class="p">:</span> <span class="kc">white</span><span class="p">;</span>
    <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">width</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">margin-right</span><span class="p">:</span> <span class="mi">-10</span><span class="kt">px</span><span class="p">;</span>  
  	<span class="c">/* 测试浮动元素与文字的分层位置，将浮动元素向右移动，与文字重叠，看是否会遮挡文字 */</span>
  <span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;demo&#34;</span><span class="p">&gt;</span>
  文字内容
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;float&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>结论：</p>
<ul>
<li>
<p>浮动元素位于文字下层</p>
<p></p>
</li>
</ul>
</li>
</ul>
<p>​</p>
<h3 id="浮动子元素与块级子元素的分层位置">浮动子元素与块级子元素的分层位置</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">.</span><span class="nc">demo</span><span class="p">{</span><span class="err">...</span><span class="p">}</span>
  <span class="p">.</span><span class="nc">float</span><span class="p">{</span><span class="err">...</span><span class="p">}</span>
  <span class="p">.</span><span class="nc">childDiv</span><span class="p">{</span>
    <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">background</span><span class="p">:</span> <span class="kc">orange</span><span class="p">;</span>
    <span class="k">margin-top</span><span class="p">:</span> <span class="mi">-10</span><span class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;demo&#34;</span><span class="p">&gt;</span>
  文字内容
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;float&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;childDiv&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>结论：
<ul>
<li>
<p>浮动内容（脱离文档流），高于 childDiv（普通文档流元素），低于文字</p>
</li>
<li>
<p>所以，==脱离文档流==，实际上就是从普通文档流中跳出，<strong>比文档流的层级稍微高一点</strong></p>
<p></p>
</li>
</ul>
</li>
</ul>
<p>​</p>
<h3 id="结论">结论</h3>
<ul>
<li>
<p>文字内容层级最高，代码写在下面的文字内容，会覆盖上面的</p>
</li>
<li>
<p>只有浮动元素会<strong>脱离文档流</strong>（从普通文档流中跳出），比普通文档流的层级稍高</p>
<p></p>
<p></p>
</li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="新属性-position">新属性 position</h2>
<h3 id="position-取值">position 取值</h3>
<ul>
<li>
<p>static 默认值，当前元素待在文档流里</p>
</li>
<li>
<p>relative 相对定位，升起来，但不脱离文档流</p>
</li>
<li>
<p>absolute 绝对定位，定位基准是相对于祖先里的非 static 祖先进行定位</p>
</li>
<li>
<p>fixed 固定定位，定位基准是 viewport 视口</p>
<ul>
<li>有诈：后来 css 出的 transform 属性，使 fixed 无法相对 viewport 视口定位，这就是 CSS 的不正交</li>
</ul>
</li>
<li>
<p>sticky 粘滞定位，不好描述直接举例 ↓↓</p>
<ul>
<li>
<p>特别适合做导航：正常状态会存在于文档流中，当向下滚动到 sticky 元素且 sticky 元素即将移出视口时，sticky 元素会始终保持在视口顶部，不会随文档流继续滚动。</p>
</li>
<li>
<p>兼容性特别差，可以在 <a href="https://caniuse.com/#search=sticky" target="_blank" rel="noopener noreffer">caniuse</a> 中查询。 （黄色是需要加前缀or部分支持）</p>
</li>
</ul>
</li>
</ul>
<h3 id="经验">经验</h3>
<ul>
<li>如果你写了 absolute，一般都得补一个 relative</li>
<li>如果你写了 absolute 或 fixed，一定要补 top 和 left</li>
<li>sticky 兼容性很差，主要用于<strong>面试装逼</strong></li>
</ul>
<p>​</p>
<h3 id="position-relative">position: relative</h3>
<h4 id="使用场景">使用场景</h4>
<ul>
<li>用于做位移（很少用），将两个元素对齐</li>
<li>用于给 absolute 元素做爸爸</li>
</ul>
<h4 id="配合-z-index">配合 z-index</h4>
<ul>
<li><code>z-index: auto</code> 默认值，不创建新<a href="#%e4%bb%80%e4%b9%88%e6%98%af%e5%b1%82%e5%8f%a0%e4%b8%8a%e4%b8%8b%e6%96%87" rel="">层叠上下文</a></li>
<li><code>z-index: 0/1/2</code></li>
<li><code>z-index: -1/-2</code></li>
</ul>
<h4 id="经验-1">经验</h4>
<ul>
<li>写 <code>z-index: 9999</code> 的都是 菜B</li>
<li>要学会管理 z-index</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="position-absolute">position: absolute</h3>
<h4 id="使用场景-1">使用场景</h4>
<ul>
<li>
<p>脱离原来的位置，另起一层，比如<strong>对话框的关闭按钮</strong>，通常是通过绝对定位实现的</p>
</li>
<li>
<p>鼠标提示</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;height:100px;&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">button</span><span class="p">&gt;</span>
  点击
  <span class="p">&lt;</span><span class="nt">span</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;tips&#34;</span><span class="p">&gt;</span>提示内容<span class="p">&lt;/</span><span class="nt">span</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">button</span><span class="p">&gt;</span>
    
<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="nt">button</span><span class="p">{</span> <span class="k">position</span><span class="p">:</span> <span class="kc">relative</span><span class="p">;</span> <span class="p">}</span>
  <span class="nt">button</span> <span class="nt">span</span><span class="p">{</span>
    <span class="k">position</span><span class="p">:</span> <span class="kc">absolute</span><span class="p">;</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
    <span class="k">white-space</span><span class="p">:</span> <span class="kc">nowrap</span><span class="p">;</span>
    <span class="k">bottom</span><span class="p">:</span> <span class="nb">calc</span><span class="p">(</span><span class="mi">100</span><span class="kt">%</span> <span class="o">+</span> <span class="mi">10</span><span class="kt">px</span><span class="p">);</span>
    <span class="k">left</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
    <span class="k">transform</span><span class="p">:</span> <span class="nb">translateX</span><span class="p">(</span><span class="mi">-50</span><span class="kt">%</span><span class="p">);</span>
  <span class="p">}</span>
  <span class="nt">button</span> <span class="nt">span</span><span class="p">{</span> <span class="k">display</span><span class="p">:</span> <span class="kc">none</span><span class="p">;</span> <span class="p">}</span>
  <span class="nt">button</span><span class="p">:</span><span class="nd">hover</span> <span class="nt">span</span><span class="p">{</span> <span class="k">display</span><span class="p">:</span> <span class="kc">inline</span><span class="o">-</span><span class="kc">block</span><span class="p">;</span> <span class="p">}</span>   <span class="c">/* 鼠标悬浮时，显示span */</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
<h4 id="配合-z-index-1">配合 z-index</h4>
<h4 id="经验-2">经验</h4>
<ul>
<li>
<p>很多 菜B 都以为 absolute 是相对于 relative 定位的</p>
<ul>
<li><strong>absolute 是相对于 祖先元素中最近的一个定位元素</strong>
<ul>
<li>只要 position 属性值不是 static 的元素，就是定位元素</li>
</ul>
</li>
</ul>
</li>
<li>
<p>某些浏览器上，如果写了 absolute，不写 top / left / bottom / right 会位置错乱  （4个至少写2个）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">demo</span><span class="p">{</span>
  <span class="k">position</span><span class="p">:</span> <span class="kc">absolute</span><span class="p">;</span>
  <span class="k">top</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">left</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>善用 <code>left: 100%</code> （效果通常是该元素会出现在定位元素的最右边）</p>
</li>
<li>
<p>善用 <code>left: 50%;</code> + 加负 margin （负宽度的一半）：实现居中</p>
<ul>
<li>也可以用  <code>left: 50%;</code> + <code>transform: translateX(-50%);</code>  实现，优点是不需要自己计算宽度的一半</li>
</ul>
</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="position-fixed">position: fixed</h3>
<blockquote>
<p>fixed 是相对于【视口】定位的</p>
<ul>
<li>视口，就是浏览器中普通用户能看到的部分（不包括滚动条）</li>
</ul>
</blockquote>
<h4 id="使用场景-2">使用场景</h4>
<ul>
<li>烦人的广告</li>
<li>回到顶部按钮</li>
</ul>
<h4 id="配合-z-index-2">配合 z-index</h4>
<h4 id="经验-3">经验</h4>
<ul>
<li>
<p>如果 fixed 元素所在的容器，具有某些属性，可能会导致 fixed 元素不再相对于视口定位。</p>
<ul>
<li>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span><span class="p">{</span> <span class="k">position</span><span class="p">:</span> <span class="kc">relative</span><span class="p">;</span> <span class="p">}</span>
<span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">fixed</span><span class="p">{</span> <span class="k">position</span><span class="p">:</span> <span class="kc">fixed</span><span class="p">;</span> <span class="k">left</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span> <span class="k">bottom</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span> <span class="p">}</span>  
<span class="p">.</span><span class="nc">container</span><span class="p">{</span> <span class="k">transform</span><span class="p">:</span> <span class="nb">scale</span><span class="p">(</span><span class="mf">0.9</span><span class="p">);</span> <span class="p">}</span> <span class="c">/* 此时fixed元素就不再相对于视口定位 */</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>总结：<strong>不要把 fixed 元素放到 具有 transform 属性的容器中</strong>，可能会产生奇怪的bug（不正交：调这个元素却影响了另一个元素）</p>
</li>
</ul>
</li>
</ul>
<ul>
<li><strong>手机上尽量不要用这个属性</strong>，坑很多，无穷无尽的bug。不信你搜索一下「 移动端 fixed 」
<ul>
<li>用了，可能就开始996了。一个bug可能引出10个bug</li>
</ul>
</li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="层叠上下文">层叠上下文</h2>
<h3 id="div分层-与-position">div分层 与 position</h3>
<blockquote>
<ul>
<li>任意一个元素的 position 取值非 static 时，就成为了定位元素。定位元素的层级，立马超越内联文字，成为最上层元素（跑到所有元素最上层）</li>
<li>z-index，默认是 auto
<ul>
<li>所有定位元素，会以内联文字层为底层，随着 z-index 递增，层级也会递增</li>
<li>如果 z-index 为负值，则层级比 background 还低</li>
<li>（可以无限向下，但是不能低于层叠上下文，也就是不能低于 html ，低于html还有什么意义）</li>
</ul>
</li>
</ul>
</blockquote>
<p></p>
<h3 id="什么是层叠上下文">什么是层叠上下文</h3>
<blockquote>
<p>也叫堆叠上下文</p>
<p>层叠上下文，会把所有元素包起来。</p>
<ul>
<li>
<p>默认的层叠上下文，是 html 元素，html 就是会把所有元素包起来</p>
</li>
<li>
<p>其他元素，也会因为拥有某些属性而变成层叠上下文（导致 z-index 需要重新计算）</p>
</li>
</ul>
</blockquote>
<p>​</p>
<h4 id="比喻">比喻</h4>
<blockquote>
<p>层叠上下文对 z-index 的影响</p>
</blockquote>
<ul>
<li>每个层叠上下文就是一个新的小世界（作用域）</li>
<li>这个小世界里面的 z-index 跟外界无关</li>
<li><strong>处在同一个小世界的 z-index 才能比较</strong></li>
<li><a href="http://js.jirengu.com/gewob/1/edit?html,css,output" target="_blank" rel="noopener noreffer">JSBin 示例</a>
<ul>
<li>a 和 b2 处于同一个层叠小世界，由 container 创造的，如果 container 没有设定 z-index，那么 a 和 b2 就同处于 html 的作用域里面，是具有可比性的。</li>
</ul>
</li>
</ul>
<p>​</p>
<h4 id="哪些不正交的属性可以创建层叠上下文">哪些不正交的属性可以创建层叠上下文</h4>
<blockquote>
<p>最简单的就是定位元素设置 z-index = 0 ，就会创建一个层叠上下文</p>
</blockquote>
<ul>
<li>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Understanding_z_index/The_stacking_context" target="_blank" rel="noopener noreffer">MDN文档</a>有写</p>
<ol>
<li>文档根元素 html 自成一个层叠上下文</li>
<li>z-index 不为 auto 的定位元素，会开启一个小世界（作用域）</li>
<li>元素的 opacity 小于1，就会创建一个层叠上下文（因为 opacity 会影响内部所有元素）</li>
<li><code>position: fixed;</code> 一定会创建层叠上下文</li>
<li>…</li>
</ol>
<ul>
<li>需要记忆的有：
<ul>
<li>z-index=0时会创建层叠上下文</li>
<li>flex元素内部会形成层叠上下文</li>
<li>opacity 不为1 ，就会创建层叠上下文</li>
<li>具有 transform 的元素，会形成一个 层叠上下文</li>
</ul>
</li>
</ul>
</li>
<li>
<p><strong>知道这些知识的面试官也不太多，不用花时间背</strong></p>
</li>
<li>
<p>忘了就搜「 层叠上下文 MDN 」</p>
</li>
<li>
<p>你说 CSS 为什么不单独创建一个属性做这个事</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="nt">例如</span><span class="err">：</span> <span class="nt">xxxdisabled</span><span class="o">:</span> <span class="nt">true</span><span class="o">;</span> <span class="c">/* true就创建层叠上下文，false就不创建；css并没有这种直接功能开关*/</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>这就是css的难学之处，互相交叉影响，错综复杂（不正交）</li>
</ul>
</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="负-z-index-与层叠上下文的关系">负 z-index 与层叠上下文的关系</h3>
<blockquote>
<p><a href="http://js.jirengu.com/modez/1/edit?html,css,output" target="_blank" rel="noopener noreffer">JSBin 示例</a></p>
<ul>
<li>.demo 的 z-index = -1，会使 demo 出现在文档流的 bg 的后面</li>
<li>z-index 是默认 auto 时，不具有层叠上下文</li>
</ul>
</blockquote>
<blockquote>
<p>记住 ：负 z-index 逃不出 层叠上下文的小世界</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;demo&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span><span class="p">{</span>
  <span class="k">background</span><span class="p">:</span> <span class="nb">rgba</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mi">255</span><span class="p">,</span><span class="mf">0.5</span><span class="p">);</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">200</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">position</span><span class="p">:</span> <span class="kc">relative</span><span class="p">;</span>
  <span class="c">/* z-index 是默认 auto 时，不具有层叠上下文，所以添加z-index=0，创建层叠上下文 */</span>
  <span class="k">z-index</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span> <span class="c">/* 注释这行看看 */</span>    
<span class="p">}</span>
<span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">demo</span><span class="p">{</span>
  <span class="k">width</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">background</span><span class="p">:</span> <span class="kc">red</span><span class="p">;</span>
  <span class="k">position</span><span class="p">:</span> <span class="kc">absolute</span><span class="p">;</span>
  <span class="k">z-index</span><span class="p">:</span> <span class="mi">-1</span><span class="p">;</span> <span class="c">/* 因为上面z-index:0创建了层叠上下文，所以demo无法逃出这个小世界，不可能比container低 */</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>图一：当 container 不是层叠上下文（也就是没有 z-index: 0; ）时，demo 是 <code>z-index = -1</code> 存在于容器bg之下</p>
<p>图二：当 container 创建层叠上下文，demo 就无法跳出容器之外</p>
<p>​</p>
<p>总结：</p>
<blockquote>
<p>z-index = -1  不一定存在于容器的背景之下。当这个容器是一个层叠上下文时，就不可能存在于容器之外</p>
</blockquote>]]></description>
</item><item>
    <title>Re：从零开始の CSS 学习笔记——布局（下）</title>
    <link>http://samrks.github.io/20200726-re%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84css%E5%B8%83%E5%B1%80-%E4%B8%8B/</link>
    <pubDate>Sun, 26 Jul 2020 13:26:52 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://samrks.github.io/20200726-re%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84css%E5%B8%83%E5%B1%80-%E4%B8%8B/</guid>
    <description><![CDATA[<p>CSS 布局篇（下）：Grid 布局。</p>
<p>​</p>
<h2 id="如何在两套布局中切换">如何在两套布局中切换</h2>
<blockquote>
<p>一个css中，写两种布局，使用 @media 媒体查询来切换</p>
</blockquote>
<p>​</p>
<h2 id="grid-布局">Grid 布局</h2>
<blockquote>
<p>Grid 布局兼容性并不好，在一两年内都可能不会非常广泛的使用（现在可以不用学的那么仔细）</p>
<p>但功能确实非常强大</p>
</blockquote>
<ul>
<li>flex 更擅长 一维布局，要么横着布局，要么竖着布局</li>
<li>一维布局用 Flex</li>
</ul>
<p>​</p>
<h2 id="二维布局用-grid">二维布局用 Grid</h2>
<blockquote>
<p>以下内容主要来自 CSS Tricks 的一篇文章  <a href="https://css-tricks.com/snippets/css/complete-guide-grid/" target="_blank" rel="noopener noreffer">A Complete Guide to Grid</a></p>
</blockquote>
<ul>
<li>查看本地代码</li>
</ul>
<p>​</p>
<h3 id="grid-也分-container-和-items">Grid 也分 container 和 items</h3>
<blockquote>
<p>分别记忆</p>
</blockquote>
<h3 id="成为-container">成为 container</h3>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span><span class="p">{</span>
	<span class="k">display</span><span class="p">:</span> <span class="k">grid</span> <span class="o">|</span> <span class="kc">inline</span><span class="o">-</span><span class="k">grid</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h3 id="行和列">行和列</h3>
<blockquote>
<p>类似 table 表格（grid 被称为新时代的表格）</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span><span class="p">{</span>
	<span class="k">display</span><span class="p">:</span> <span class="k">grid</span><span class="p">;</span>
  <span class="n">grid-tamplate-columns</span><span class="p">:</span> <span class="mi">40</span><span class="kt">px</span> <span class="mi">50</span><span class="kt">px</span> <span class="kc">auto</span> <span class="mi">50</span><span class="kt">px</span> <span class="mi">40</span><span class="kt">px</span><span class="p">;</span>   <span class="c">/* 每列宽度（有n个值对应生成n列） */</span>
    			         <span class="c">/*  第1列 第2列 第3列 第4列 第5列  */</span>
  
  <span class="n">grid-tamplate-rows</span><span class="p">:</span> <span class="mi">25</span><span class="kt">%</span> <span class="mi">100</span><span class="kt">px</span> <span class="kc">auto</span><span class="p">;</span>   <span class="c">/* 每行高度（有n个值对应生成n行） */</span>
                 <span class="c">/*  第1行 第2行 第3行  */</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<blockquote>
<p>[1]  [2]  [3]  …  [6]   指的是线的序号。用于划分 items  的范围（<a href="#%e7%ac%ac%e4%ba%8c%e6%ad%a5" rel="">具体使用见 items 部分 </a>）</p>
</blockquote>
<p>​</p>
<h4 id="缩写--grid-template">缩写  grid-template</h4>
<blockquote>
<p><code>grid-template</code>是<code>grid-template-rows</code>（行高）和<code>grid-template-columns</code>（列宽）的缩写形式。</p>
<p>比如说，<code>grid-template: 50% 50% / 200px;</code>将创建一个具有两行的网格，每一行占据50%，以及一个200像素宽的列。</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="c">/* 需要包括你的花园上部的60%，以及左侧的200像素。 */</span>
<span class="p">#</span><span class="nn">garden</span> <span class="p">{</span>
  <span class="k">display</span><span class="p">:</span> <span class="k">grid</span><span class="p">;</span>
  <span class="k">grid-template</span><span class="p">:</span> <span class="mi">60</span><span class="kt">%</span> <span class="mi">40</span><span class="kt">%</span> <span class="o">/</span> <span class="mi">200</span><span class="kt">px</span> <span class="nb">calc</span><span class="p">(</span><span class="mi">100</span><span class="kt">%</span> <span class="o">-</span> <span class="mi">200</span><span class="kt">px</span><span class="p">)</span> <span class="p">;</span>
  			 	<span class="c">/*	行高↑↑       列宽↑↑   */</span>
<span class="p">}</span>

<span class="p">#</span><span class="nn">water</span> <span class="p">{</span>
  <span class="k">grid-column</span><span class="p">:</span> <span class="mi">1</span><span class="p">;</span>
  <span class="k">grid-row</span><span class="p">:</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="c">/* 你的花园看起来很棒。现在，你在花园的底部留下了50像素的小路，其他的空间用来种植胡萝卜。
</span><span class="c">不幸的是，胡萝卜地的20%已经杂草丛生了，最后一次用CSS网格布局来规划你的花园吧！ */</span>
<span class="p">#</span><span class="nn">garden</span> <span class="p">{</span>
  <span class="k">display</span><span class="p">:</span> <span class="k">grid</span><span class="p">;</span>
  <span class="k">grid-template</span><span class="p">:</span> <span class="nb">calc</span><span class="p">(</span><span class="mi">100</span><span class="kt">%</span> <span class="o">-</span> <span class="mi">50</span><span class="kt">px</span><span class="p">)</span> <span class="mi">50</span><span class="kt">px</span><span class="o">/</span><span class="mi">20</span><span class="kt">%</span> <span class="mi">80</span><span class="kt">%</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>​</p>
<h3 id="指定-items-布局">指定 items 布局</h3>
<h4 id="第一步">第一步</h4>
<blockquote>
<ul>
<li>
<p>搭出大框架：几行几列</p>
</li>
<li>
<p>有几个区域，就建立几个 items</p>
</li>
</ul>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="o">*</span> <span class="p">{</span>
    <span class="k">margin</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">padding</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">box-sizing</span><span class="p">:</span> <span class="kc">border-box</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">container</span> <span class="p">{</span>
    <span class="k">display</span><span class="p">:</span> <span class="k">grid</span><span class="p">;</span>
    <span class="k">grid-template-columns</span><span class="p">:</span> <span class="mi">40</span><span class="kt">px</span> <span class="mi">50</span><span class="kt">px</span> <span class="kc">auto</span> <span class="mi">50</span><span class="kt">px</span> <span class="mi">40</span><span class="kt">px</span><span class="p">;</span>   <span class="c">/* 5列（auto会撑满该行余下空间） */</span>
    <span class="k">grid-template-rows</span><span class="p">:</span> <span class="mi">100</span><span class="kt">px</span> <span class="mi">300</span><span class="kt">px</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>  <span class="c">/* 3行（每行高度累加，成为container的总高度） */</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">3</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">a</span><span class="o">,</span> <span class="p">.</span><span class="nc">b</span><span class="o">,</span> <span class="p">.</span><span class="nc">c</span><span class="o">,</span> <span class="p">.</span><span class="nc">d</span><span class="o">,</span> <span class="p">.</span><span class="nc">e</span> <span class="p">{</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">3</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">black</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container&#34;</span><span class="p">&gt;</span>
  <span class="c">&lt;!-- emmet快捷键: 键入.a+.b+.c+.d ——&gt; tab 创建出5个div，class分别为abcde --&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;a&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>  <span class="c">&lt;!--第1行, 第1列--&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;b&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>  <span class="c">&lt;!--第1行, 第2列--&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;c&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>  <span class="c">&lt;!--第1行, 第3列--&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;d&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>  <span class="c">&lt;!--第1行, 第4列--&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;e&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>  <span class="c">&lt;!--第1行, 第5列--&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>container 中的子元素，<strong>与列数一一对应</strong>。且默认只占据第一行。所以添加 border 后 效果如下图所示</li>
</ul>
<p></p>
<h4 id="第二步">第二步</h4>
<blockquote>
<p>给每个 item 指定区域、设置范围</p>
</blockquote>
<h5 id="grid-xxx-start--grid-xxx-end">grid-xxx-start / grid-xxx-end</h5>
<blockquote>
<p>grid-row-start、grid-row-end</p>
<p>grid-column-start、grid-column-end</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">a</span><span class="p">{</span>
  <span class="k">grid-row-start</span><span class="p">:</span> <span class="mi">1</span><span class="p">;</span>  <span class="c">/* a从哪条线开始 */</span>     
  <span class="k">grid-row-end</span><span class="p">:</span> <span class="mi">3</span><span class="p">;</span>    <span class="c">/* a到哪条线结束 */</span>         
  <span class="c">/* 指定的两条【线】的中间区域，就是a所占的【行】 */</span>

  <span class="k">grid-column-start</span><span class="p">:</span> <span class="mi">1</span><span class="p">;</span>   
  <span class="k">grid-column-end</span><span class="p">:</span> <span class="mi">2</span><span class="p">;</span>
  <span class="c">/* 指定的两条【线】的中间区域，就是a所占的【列】 */</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h5 id="grid-row--grid-column">grid-row / grid-column</h5>
<blockquote>
<p>grid-row：grid-row-start / grid-row-end;</p>
<p>grid-column:  grid-column-start / grid-column-end;</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="c">/* 上面写法，可以缩写成 ↓ */</span>
<span class="p">.</span><span class="nc">a</span><span class="p">{</span>
  <span class="k">grid-row</span><span class="p">:</span> <span class="mi">1</span><span class="o">/</span><span class="mi">3</span> <span class="p">;</span>
  <span class="k">grid-column</span><span class="p">:</span> <span class="mi">1</span><span class="o">/</span><span class="mi">2</span> <span class="p">;</span>   
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h5 id="grid-area">grid-area</h5>
<blockquote>
<p>grid-area属性接受4个由&rsquo;/&lsquo;分开的值：grid-row-start, grid-column-start, grid-row-end, 最后是 grid-column-end。</p>
<p>​																					起始行 ↑↑            起始列 ↑↑           终止行 ↑↑                      终止列 ↑↑</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="c">/* 再进一步缩写 */</span>
<span class="p">.</span><span class="nc">a</span><span class="p">{</span>
  <span class="k">grid-area</span><span class="p">:</span> <span class="mi">1</span><span class="o">/</span><span class="mi">1</span><span class="o">/</span><span class="mi">3</span><span class="o">/</span><span class="mi">2</span> <span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>最终效果</p>
<p></p>
</li>
</ul>
<p>​</p>
<h4 id="可以给线起名字">可以给线起名字</h4>
<blockquote>
<p>但没必要，代码太麻烦。就按照序号就很好</p>
</blockquote>
<p></p>
<p>取名结果：如图↘</p>
<p></p>
<p>item可以设置范围，直接用线的名称</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">item-a</span><span class="p">{</span> 
  <span class="k">grid-column-start</span><span class="p">:</span> <span class="mi">2</span><span class="p">;</span> 
  <span class="k">grid-column-end</span><span class="p">:</span> <span class="n">five</span><span class="p">;</span>
  <span class="k">grid-row-start</span><span class="p">:</span> <span class="n">rowl-start</span><span class="p">;</span> 
  <span class="k">grid-row-end</span><span class="p">:</span> <span class="mi">3</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><hr>
<p>​</p>
<p>​</p>
<h3 id="fr-单位份">fr ：单位【份】</h3>
<blockquote>
<p>容器属性</p>
</blockquote>
<blockquote>
<p>全称  free space   自由空间</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;a&#34;</span><span class="p">&gt;</span>a<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;b&#34;</span><span class="p">&gt;</span>b<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;c&#34;</span><span class="p">&gt;</span>c<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;d&#34;</span><span class="p">&gt;</span>d<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;e&#34;</span><span class="p">&gt;</span>e<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="c">&lt;!-- &lt;div class=&#34;f&#34;&gt;f&lt;/div&gt; --&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="o">&lt;</span><span class="nt">style</span><span class="o">&gt;</span>
<span class="o">*</span> <span class="p">{</span><span class="k">margin</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span><span class="k">padding</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span><span class="k">box-sizing</span><span class="p">:</span> <span class="kc">border-box</span><span class="p">;}</span>
<span class="p">.</span><span class="nc">container</span> <span class="p">{</span>
  <span class="k">display</span><span class="p">:</span> <span class="k">grid</span><span class="p">;</span>
  <span class="k">grid-template-columns</span><span class="p">:</span> <span class="mi">1</span><span class="n">fr</span> <span class="mi">1</span><span class="n">fr</span> <span class="mi">1</span><span class="n">fr</span><span class="p">;</span>   <span class="c">/* fr=份，与flex的份类似：共3列每列占1份，也就是均分 */</span>
  <span class="k">grid-template-rows</span><span class="p">:</span> <span class="mi">1</span><span class="n">fr</span> <span class="mi">1</span><span class="n">fr</span><span class="p">;</span>  <span class="c">/* 共2行，每行占1份，均分 */</span>
  <span class="k">border</span><span class="p">:</span> <span class="mi">3</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
  <span class="k">min-height</span><span class="p">:</span> <span class="mi">500</span><span class="kt">px</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">a</span><span class="o">,</span> <span class="p">.</span><span class="nc">b</span><span class="o">,</span> <span class="p">.</span><span class="nc">c</span><span class="o">,</span> <span class="p">.</span><span class="nc">d</span><span class="o">,</span> <span class="p">.</span><span class="nc">e</span> <span class="p">{</span>
  <span class="k">border</span><span class="p">:</span> <span class="mi">3</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">black</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">e</span><span class="p">{</span>
  <span class="k">grid-column-start</span><span class="p">:</span> <span class="mi">2</span><span class="p">;</span>    <span class="c">/* 再单独定义e版块占两列空间 */</span>
  <span class="k">grid-column-end</span><span class="p">:</span> <span class="mi">4</span><span class="p">;</span>
  <span class="k">background-color</span><span class="p">:</span> <span class="mh">#ccc</span><span class="p">;</span>
<span class="p">}</span>
<span class="o">&lt;/</span><span class="nt">style</span><span class="o">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>​</p>
<h4 id="变形">变形</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span> <span class="p">{</span>
  <span class="k">display</span><span class="p">:</span> <span class="k">grid</span><span class="p">;</span>
  <span class="k">grid-template-rows</span><span class="p">:</span> <span class="mi">1</span><span class="n">fr</span> <span class="mi">3</span><span class="n">fr</span><span class="p">;</span>   <span class="c">/* 2行：第2行占3份 */</span>
  <span class="k">grid-template-columns</span><span class="p">:</span> <span class="mi">1</span><span class="n">fr</span> <span class="mi">2</span><span class="n">fr</span> <span class="mi">1</span><span class="n">fr</span><span class="p">;</span>   <span class="c">/* 3列：第2列占2份 */</span>
  <span class="err">...</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>​</p>
<h4 id="平均布局-grid-gap">平均布局 grid-gap</h4>
<blockquote>
<p>fr 主要用于实现平均布局</p>
</blockquote>
<blockquote>
<p>容器属性：grid-gap  用于控制间距</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="c">&lt;!-- 应用下面grid布局样式，可实现任意添加.image，都可以实现一排4个、间距12px的布局 --&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="o">*</span><span class="p">{</span>
    <span class="k">margin</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">padding</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">box-sizing</span><span class="p">:</span> <span class="kc">border-box</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">container</span><span class="p">{</span>
    <span class="k">margin-right</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
    <span class="k">margin-left</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
    <span class="k">margin-top</span><span class="p">:</span> <span class="mi">30</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">outline</span><span class="p">:</span> <span class="mi">5</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
    <span class="k">width</span><span class="p">:</span> <span class="mi">800</span><span class="kt">px</span><span class="p">;</span>
    <span class="c">/* 开启grid布局 */</span>
    <span class="k">display</span><span class="p">:</span> <span class="k">grid</span><span class="p">;</span>
    <span class="k">grid-template-columns</span><span class="p">:</span> <span class="mi">1</span><span class="n">fr</span> <span class="mi">1</span><span class="n">fr</span> <span class="mi">1</span><span class="n">fr</span> <span class="mi">1</span><span class="n">fr</span><span class="p">;</span>  <span class="c">/* 格子布局：1排4个 */</span>
    <span class="k">grid-template-rows</span><span class="p">:</span> <span class="mi">1</span><span class="n">fr</span> <span class="mi">1</span><span class="n">fr</span><span class="p">;</span>   
    <span class="k">grid-gap</span><span class="p">:</span> <span class="mi">12</span><span class="kt">px</span><span class="p">;</span>  <span class="c">/* 计算每项边距，自动计算位置，四边上的会紧贴 */</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">container</span><span class="o">&gt;</span><span class="nt">div</span><span class="p">{</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">2</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">black</span><span class="p">;</span>
    <span class="k">background-color</span><span class="p">:</span> <span class="mh">#ccc</span><span class="p">;</span>
    <span class="k">height</span><span class="p">:</span> <span class="mi">191</span><span class="kt">px</span><span class="p">;</span> <span class="c">/* 宽800px，1排4个产品，计算得出：每个产品可占宽191px，则间距为12px */</span>
    <span class="k">width</span><span class="p">:</span> <span class="mi">191</span><span class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>​</p>
<h3 id="分区-grid-template-areas">分区 grid template-areas</h3>
<blockquote>
<p>名字很长，但非常好用</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">header</span><span class="p">&gt;</span>header<span class="p">&lt;/</span><span class="nt">header</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">aside</span><span class="p">&gt;</span>aside<span class="p">&lt;/</span><span class="nt">aside</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">main</span><span class="p">&gt;</span>main<span class="p">&lt;/</span><span class="nt">main</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;ad&#34;</span><span class="p">&gt;</span>ad<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">footer</span><span class="p">&gt;</span>footer<span class="p">&lt;/</span><span class="nt">footer</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">.</span><span class="nc">container</span> <span class="p">{</span>
    <span class="k">min-height</span><span class="p">:</span> <span class="mi">100</span><span class="kt">vh</span><span class="p">;</span>   <span class="c">/* 最小高度为占满整个屏幕 */</span>
    <span class="k">display</span><span class="p">:</span> <span class="k">grid</span><span class="p">;</span>
    <span class="k">grid-template-rows</span><span class="p">:</span> <span class="mi">60</span><span class="kt">px</span> <span class="kc">auto</span> <span class="mi">60</span><span class="kt">px</span><span class="p">;</span>  <span class="c">/* 行高 */</span>
    <span class="k">grid-template-columns</span><span class="p">:</span> <span class="mi">190</span><span class="kt">px</span> <span class="kc">auto</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>    <span class="c">/* 列宽 */</span>
    <span class="c">/* 布局：以版块名称直接写出布局、位置 */</span>
    <span class="k">grid-template-areas</span><span class="p">:</span>  
      <span class="s2">&#34;header header header&#34;</span>
      <span class="s2">&#34;aside main ad&#34;</span>
      <span class="s2">&#34;. footer .&#34;</span><span class="p">;</span>  <span class="c">/* 空格通常会写一个不存在的名称，如【.】点 */</span>
    <span class="k">grid-gap</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>  <span class="c">/* 设置空隙 */</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="o">*</span> <span class="p">{</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">2</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="nt">header</span> <span class="p">{</span><span class="k">grid-area</span><span class="p">:</span> <span class="n">header</span><span class="p">;}</span>   <span class="c">/* 版块命名 */</span>
  <span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="nt">aside</span> <span class="p">{</span><span class="k">grid-area</span><span class="p">:</span> <span class="n">aside</span><span class="p">;}</span>
  <span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="nt">aside</span> <span class="p">{</span><span class="k">grid-area</span><span class="p">:</span> <span class="n">aside</span><span class="p">;}</span>
  <span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="nt">main</span> <span class="p">{</span><span class="k">grid-area</span><span class="p">:</span> <span class="n">main</span><span class="p">;}</span>
  <span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">ad</span> <span class="p">{</span><span class="k">grid-area</span><span class="p">:</span> <span class="n">ad</span><span class="p">;}</span>
  <span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="nt">footer</span> <span class="p">{</span><span class="k">grid-area</span><span class="p">:</span> <span class="n">footer</span><span class="p">;}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<h4 id="grid-gap-设置间距">grid-gap 设置间距</h4>
<blockquote>
<p>grid-gap：通用间距</p>
<p>grid-row-gap :   行间距</p>
<p>grid-column-gap： 列间距</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span><span class="p">{</span>
  <span class="err">...</span>
  <span class="k">grid-gap</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span><span class="p">{</span>
  <span class="err">...</span>
  <span class="k">grid-row-gap</span><span class="p">:</span> <span class="mi">20</span><span class="kt">px</span><span class="p">;</span>  <span class="c">/* 行间距 */</span>
  <span class="k">grid-column-gap</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>   <span class="c">/* 列间距 */</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>​</p>
<p>​</p>
<h2 id="实践">实践</h2>
<h3 id="布局">布局</h3>
<blockquote>
<p>Grid 尤其适合不规则布局</p>
</blockquote>
<h3 id="经验">经验</h3>
<blockquote>
<ul>
<li>等到 Grid 普及了，前端对CSS的要求会进一步降低</li>
<li>目前你简单尝试一下 Grid 就可以了</li>
</ul>
</blockquote>
<h3 id="示例">示例</h3>
<h4 id="第一步根据设计图划分行列需求给每块区域命名">第一步：根据设计图，划分行列需求，给每块区域命名</h4>
<p></p>
<h4 id="第二步书写容器样式">第二步：书写【容器】样式</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">header</span><span class="p">&gt;</span>header<span class="p">&lt;/</span><span class="nt">header</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image bigImage&#34;</span><span class="p">&gt;</span>big<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image smallImage&#34;</span><span class="p">&gt;</span>small<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image smallImage&#34;</span><span class="p">&gt;</span>small<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image smallImage&#34;</span><span class="p">&gt;</span>small<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image middleImage&#34;</span><span class="p">&gt;</span>middle<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image middleImage&#34;</span><span class="p">&gt;</span>middle<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image middleImage&#34;</span><span class="p">&gt;</span>middle<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="o">*</span> <span class="p">{</span>
    <span class="k">margin</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">padding</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
    <span class="k">box-sizing</span><span class="p">:</span> <span class="kc">border-box</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">container</span> <span class="p">{</span>
    <span class="k">display</span><span class="p">:</span> <span class="k">grid</span><span class="p">;</span>
    <span class="k">grid-template-rows</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span> <span class="mi">200</span><span class="kt">px</span> <span class="nf">repeat</span><span class="p">(</span><span class="mi">4</span><span class="p">,</span> <span class="mi">100</span><span class="kt">px</span><span class="p">);</span> <span class="c">/* 重复4个120px，可以使用repeat()缩写语法 */</span>
    <span class="k">grid-template-columns</span><span class="p">:</span> <span class="mi">240</span><span class="kt">px</span> <span class="mi">240</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">grid-template-areas</span><span class="p">:</span>
      <span class="s2">&#34;header header&#34;</span>
      <span class="s2">&#34;big mid1&#34;</span>
      <span class="s2">&#34;big mid2&#34;</span>
      <span class="s2">&#34;sm1 mid2&#34;</span>
      <span class="s2">&#34;sm2 mid3&#34;</span>
      <span class="s2">&#34;sm3 mid3&#34;</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><h4 id="第三步指定每项的名称所属">第三步：指定每项的名称（所属）</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="o">*</span> <span class="p">{</span>
  <span class="k">border</span><span class="p">:</span> <span class="mi">2</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">black</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="nt">header</span> <span class="p">{</span><span class="k">grid-area</span><span class="p">:</span> <span class="n">header</span><span class="p">;}</span>
<span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">image</span><span class="p">:</span><span class="nd">nth-child</span><span class="o">(</span><span class="nt">2</span><span class="o">)</span> <span class="p">{</span><span class="k">grid-area</span><span class="p">:</span> <span class="n">big</span><span class="p">;}</span>
<span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">image</span><span class="p">:</span><span class="nd">nth-child</span><span class="o">(</span><span class="nt">3</span><span class="o">)</span> <span class="p">{</span><span class="k">grid-area</span><span class="p">:</span> <span class="n">sm2</span><span class="p">;}</span>
<span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">image</span><span class="p">:</span><span class="nd">nth-child</span><span class="o">(</span><span class="nt">4</span><span class="o">)</span> <span class="p">{</span><span class="k">grid-area</span><span class="p">:</span> <span class="n">sm3</span><span class="p">;}</span>
<span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">image</span><span class="p">:</span><span class="nd">nth-child</span><span class="o">(</span><span class="nt">5</span><span class="o">)</span> <span class="p">{</span><span class="k">grid-area</span><span class="p">:</span> <span class="n">mid1</span><span class="p">;}</span>
<span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">image</span><span class="p">:</span><span class="nd">nth-child</span><span class="o">(</span><span class="nt">6</span><span class="o">)</span> <span class="p">{</span><span class="k">grid-area</span><span class="p">:</span> <span class="n">mid2</span><span class="p">;}</span>
<span class="p">.</span><span class="nc">container</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">image</span><span class="p">:</span><span class="nd">nth-child</span><span class="o">(</span><span class="nt">7</span><span class="o">)</span> <span class="p">{</span><span class="k">grid-area</span><span class="p">:</span> <span class="n">mid3</span><span class="p">;}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>​</p>
<p>​</p>
<h3 id="游戏">游戏</h3>
<p><a href="https://cssgridgarden.com/#zh-cn">https://cssgridgarden.com/#zh-cn</a></p>
<p>忘记用法时，可以通过游戏来快速回忆</p>
<p>​</p>
<h4 id="grid-area-1">grid-area</h4>
<blockquote>
<p>grid-area属性接受4个由&rsquo;/&lsquo;分开的值：grid-row-start, grid-column-start, grid-row-end, 最后是 grid-column-end。</p>
<p>​																					起始行 ↑↑            起始列 ↑↑           终止行 ↑↑                      终止列 ↑↑</p>
</blockquote>
<p></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">#</span><span class="nn">garden</span> <span class="p">{</span>
  <span class="k">display</span><span class="p">:</span> <span class="k">grid</span><span class="p">;</span>
  <span class="k">grid-template-columns</span><span class="p">:</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span><span class="p">;</span>
  <span class="k">grid-template-rows</span><span class="p">:</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span><span class="p">;</span>
<span class="p">}</span>

<span class="p">#</span><span class="nn">water-1</span> <span class="p">{</span>
  <span class="k">grid-area</span><span class="p">:</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">4</span> <span class="o">/</span> <span class="mi">6</span> <span class="o">/</span> <span class="mi">5</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">#</span><span class="nn">water-2</span> <span class="p">{</span>
  <span class="k">grid-area</span><span class="p">:</span> <span class="mi">2</span> <span class="o">/</span> <span class="mi">3</span> <span class="o">/</span> <span class="mi">5</span> <span class="o">/</span> <span class="mi">6</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>​</p>
<h4 id="order">order</h4>
<blockquote>
<p>如果网格项不是以<code>grid-area</code>、<code>grid-column</code>、<code>grid-row</code> 等显示的，它们会自动按照它们在源程序中出现的位置摆放。同样我们也可以使用<code>order</code>属性来重写它的顺序，这也是网格布局优于表格布局的好处之一。</p>
<p>默认情况下，所有的网格项的<code>order</code>都是0，但是顺序也可以被任意设置为正数或者负数，就像<code>z-index</code>一样。</p>
</blockquote>
<p>​</p>
<h4 id="fr-与-px-结合">fr 与 px 结合</h4>
<p></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">#</span><span class="nn">garden</span> <span class="p">{</span>
  <span class="k">display</span><span class="p">:</span> <span class="k">grid</span><span class="p">;</span>
  <span class="k">grid-template-columns</span><span class="p">:</span> <span class="mi">50</span><span class="kt">px</span> <span class="mi">1</span><span class="n">fr</span> <span class="mi">1</span><span class="n">fr</span> <span class="mi">1</span><span class="n">fr</span> <span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">grid-template-rows</span><span class="p">:</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span><span class="p">;</span>
<span class="p">}</span>

<span class="p">#</span><span class="nn">water</span> <span class="p">{</span>
  <span class="k">grid-area</span><span class="p">:</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">6</span> <span class="o">/</span> <span class="mi">2</span><span class="p">;</span>
<span class="p">}</span>

<span class="p">#</span><span class="nn">poison</span> <span class="p">{</span>
  <span class="k">grid-area</span><span class="p">:</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">5</span> <span class="o">/</span> <span class="mi">6</span> <span class="o">/</span> <span class="mi">6</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">#</span><span class="nn">garden</span> <span class="p">{</span>
  <span class="k">display</span><span class="p">:</span> <span class="k">grid</span><span class="p">;</span>
  <span class="k">grid-template-columns</span><span class="p">:</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span> <span class="mi">20</span><span class="kt">%</span><span class="p">;</span>
  <span class="k">grid-template-rows</span><span class="p">:</span> <span class="mi">1</span><span class="n">fr</span> <span class="mi">1</span><span class="n">fr</span> <span class="mi">1</span><span class="n">fr</span> <span class="mi">1</span><span class="n">fr</span> <span class="nb">calc</span><span class="p">(</span><span class="mi">100</span><span class="kt">%</span> <span class="o">-</span> <span class="mi">50</span><span class="kt">px</span><span class="p">);</span>
<span class="p">}</span>

<span class="p">#</span><span class="nn">water</span> <span class="p">{</span>
  <span class="k">grid-column</span><span class="p">:</span> <span class="mi">1</span> <span class="o">/</span> <span class="mi">6</span><span class="p">;</span>
  <span class="k">grid-row</span><span class="p">:</span> <span class="mi">5</span> <span class="o">/</span> <span class="mi">6</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div>]]></description>
</item><item>
    <title>Re：从零开始の CSS 学习笔记——布局（上）</title>
    <link>http://samrks.github.io/20200725-re%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84css%E5%B8%83%E5%B1%80-%E4%B8%8A/</link>
    <pubDate>Sat, 25 Jul 2020 16:16:55 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://samrks.github.io/20200725-re%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84css%E5%B8%83%E5%B1%80-%E4%B8%8A/</guid>
    <description><![CDATA[<p>CSS 布局篇（上）： Float 布局、Flex 布局 。</p>
<p>​</p>
<p>​</p>
<p>Float 示例代码  <a href="http://js.jirengu.com/wiwuh/3/edit?html,css,output">http://js.jirengu.com/wiwuh/3/edit?html,css,output</a></p>
<p>Flex 示例代码  <a href="http://js.jirengu.com/pakez/2/edit?html,css,output">http://js.jirengu.com/pakez/2/edit?html,css,output</a></p>
<p>Flex 青蛙游戏  <a href="https://flexboxfroggy.com/#zh-cn">https://flexboxfroggy.com/#zh-cn</a></p>
<p>​</p>
<h2 id="布局是什么">布局是什么</h2>
<blockquote>
<p>把页面分成一块一块，按左中右、上中下等排列</p>
</blockquote>
<h3 id="布局分类">布局分类</h3>
<h4 id="两种">两种</h4>
<ul>
<li>固定宽度布局，一般宽度为960/1000/1024px （淘宝pc）</li>
<li>不固定宽度布局，主要靠文档流的原理来布局（常用在移动端、响应式，会跟随设备宽度变化）</li>
</ul>
<h4 id="还记得吗">还记得吗</h4>
<ul>
<li>文档流本来就是自适应的，不需要加额外的样式</li>
</ul>
<h4 id="第三种布局">第三种布局</h4>
<ul>
<li>响应式布局
<ul>
<li>意思就是PC上固定宽度，手机上不固定宽度</li>
<li>也就是一种混合布局</li>
</ul>
</li>
</ul>
<p>​</p>
<h3 id="布局的两种思路">布局的两种思路</h3>
<h4 id="从大到小">从大到小</h4>
<ul>
<li>先定下大局</li>
<li>然后完善每个部分的小布局</li>
</ul>
<h4 id="从小到大">从小到大</h4>
<ul>
<li>先完成小布局</li>
<li>然后组合成大布局</li>
</ul>
<h4 id="两种均可">两种均可</h4>
<ul>
<li>新人推荐用第二种，因为小的简单</li>
<li>老手一般用第一种，因为熟练有大局观</li>
</ul>
<p>​</p>
<h3 id="布局需要用到哪些属性">布局需要用到哪些属性</h3>
<blockquote>
<p>不多哗哗，直接给你所有套路</p>
</blockquote>
<p>以前经常说 DIV+CSS 布局，但是现在已经无意于用 DIV 了，就说用 CSS 布局</p>
<ul>
<li>main、header、footer、nav、aside … 这些标签的出现，已经可以代替 div 了</li>
</ul>
<p>需要兼容 IE9 吗</p>
<ul>
<li>不用，只做手机页面（闲鱼），阿里巴巴在顺序手机时代</li>
<li>很老的手机产品要兼容吗、兼容最新浏览器吗？</li>
</ul>
<p></p>
<p>​</p>
<p>​</p>
<h2 id="float-布局">Float 布局</h2>
<blockquote>
<p>float 主要是针对 IE 的，而现在公司基本不需要兼容 IE6789。</p>
</blockquote>
<h3 id="步骤">步骤</h3>
<ol>
<li>
<p>子元素上加 <code> float: left</code>  和 <code> width</code></p>
</li>
<li>
<p>在父元素上加  <code>.clearfix</code>（清除浮动的影响）</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="c">&lt;!-- header中没有文档流元素，子元素都浮动了(脱离文档流) ，所以header的高度为0 --&gt;</span>
<span class="c">&lt;!-- 添加 clearfix 后，可以清除浮动的影响 --&gt;</span>
<span class="p">&lt;</span><span class="nt">header</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;clearfix&#34;</span><span class="p">&gt;</span>    
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;logo&#34;</span><span class="p">&gt;</span>XDML<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
   <span class="p">&lt;</span><span class="nt">nav</span><span class="p">&gt;</span>导航<span class="p">&lt;/</span><span class="nt">nav</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">header</span><span class="p">&gt;</span>
     
<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
   <span class="p">.</span><span class="nc">logo</span><span class="p">{</span><span class="k">float</span><span class="p">:</span> <span class="kc">left</span><span class="p">;</span><span class="err">...</span><span class="p">}</span>   <span class="c">/* 脱离文档流 */</span>
   <span class="nt">nav</span><span class="p">{</span><span class="k">float</span><span class="p">:</span> <span class="kc">left</span><span class="p">;</span><span class="err">...</span><span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">clearfix</span><span class="p">:</span><span class="nd">after</span><span class="p">{</span>    
  <span class="k">content</span><span class="p">:</span> <span class="s1">&#39;&#39;</span><span class="p">;</span>
  <span class="k">display</span><span class="p">:</span> <span class="kc">block</span><span class="p">;</span>
  <span class="k">clear</span><span class="p">:</span> <span class="kc">both</span><span class="p">;</span>
<span class="p">}</span>
<span class="c">/* 背过 clearfix 的写法 */</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ol>
<h3 id="经验">经验</h3>
<ul>
<li>
<p>有经验者会留一些空间或者最后一个不设 width （或者可以给个 <code>max-width: xxxpx;</code>）</p>
</li>
<li>
<p>不需要做响应式，因为手机上没有IE，而<strong>这个布局是专门为 IE 准备的</strong></p>
</li>
<li>
<p>IE6/7 存在双倍 margin bug（给浮动元素设置 margin: 10px 在 IE6/7 中实际距离会变成 margin: 20px 的效果）</p>
<ul>
<li>
<p>解决办法有两个</p>
<ul>
<li>
<p>一是将错就错，针对 IE6/7 把 margin 减半</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">logo</span><span class="p">{</span>
  <span class="k">float</span><span class="p">:</span> <span class="kc">left</span><span class="p">;</span>
  <span class="k">margin-top</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>  <span class="c">/* 其他浏览器 只能识别这句，无法识别下面属性 */</span>
  <span class="n">_margin-top</span><span class="p">:</span> <span class="mi">5</span><span class="kt">px</span><span class="p">;</span>  <span class="c">/* IE6/7在属性前加 下划线 或 星号 都能识别 */</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>二是神来一笔，再加一个 <code>display: inline-block</code></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">logo</span><span class="p">{</span>
  <span class="k">float</span><span class="p">:</span> <span class="kc">left</span><span class="p">;</span>
  <span class="k">margin-top</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span> 
  <span class="k">display</span><span class="p">:</span> <span class="kc">inline</span><span class="o">-</span><span class="kc">block</span><span class="p">;</span>  <span class="c">/* 微软说：IE6/7遇到margin乘2的bug，就添加这句 */</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ul>
</li>
<li>
<p>为什么可以这样？你问我，我问谁…</p>
</li>
</ul>
</li>
</ul>
<p>​</p>
<h3 id="实践">实践</h3>
<h4 id="不同布局">不同布局</h4>
<ul>
<li>用 float 做两栏布局（如顶部条）</li>
<li>用 float 做三栏布局（如内容区）</li>
<li>用 float 做四栏布局（如导航）</li>
<li><a href="#float%e5%ae%9e%e7%8e%b0%e5%b9%b3%e5%9d%87%e5%b8%83%e5%b1%80" rel="">用 float 做平均布局</a>（如产品列表展示区）—— <strong>负margin</strong></li>
<li>曾经淘宝的前端发明了双飞翼布局，不要学，已过时代码</li>
</ul>
<h4 id="经验-1">经验</h4>
<ul>
<li>加上头尾，即可满足所有PC页面需求</li>
<li>手机页面傻子才用float</li>
<li>float要程序员自己计算宽度，不灵活</li>
<li>float用来应付IE足以</li>
</ul>
<h4 id="技术总结">技术总结</h4>
<blockquote>
<p><a href="https://jsbin.com/xihinip/edit?html,css,output" target="_blank" rel="noopener noreffer">JSbin 演示</a>，总结如下</p>
</blockquote>
<h5 id="outline">outline</h5>
<blockquote>
<p>现象描述：计算宽度时，内部3个元素的宽度和=300，外层容器=300，但是还会把最后一个元素挤下去，说明子元素的宽度超出容器的宽度。</p>
</blockquote>
<ul>
<li>原因可能是，虽然设定容器宽度为 300，但是容器添加了<strong>边框</strong> border : 1像素，所以容器的内容区域的宽度实际只有 298 px。(仅限 border-box 情况)</li>
<li>解决：
<ul>
<li>把容器的边框删了</li>
<li>改用 <code> outline: 1px solid red;</code>  outline 是在外侧的，不占内部区域，但是outline 样式上会有点奇怪</li>
<li>改用 背景颜色 标识区域</li>
</ul>
</li>
</ul>
<h5 id="居中">居中</h5>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="c">/* margin: 0 auto;  下面两句的写法更好，这句还覆盖了margin上下的距离，css原则是不要写多余的 */</span>    
<span class="nt">margin-left</span><span class="o">:</span> <span class="nt">auto</span><span class="o">;</span>
<span class="nt">margin-right</span><span class="o">:</span> <span class="nt">auto</span><span class="o">;</span>
</code></pre></td></tr></table>
</div>
</div><blockquote>
<p>只有==块级元素==，才能使用 margin … auto，实现居中。</p>
</blockquote>
<h5 id="float实现平均布局">float实现平均布局</h5>
<blockquote>
<p>添加一个 父元素 x ，进行 ==负margin== 操作（这个词基本都是高手才懂，面试说道这几个字，平均布局这块就一定能过）</p>
<p>注意：添加 父元素后，clearfix 的位置也需要相应移动到，浮动元素的直属父级上</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;imageList&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;x clearfix&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="c">&lt;!--&lt;div class=&#34;image&#34;&gt;&lt;/div&gt;--&gt;</span>
    <span class="c">&lt;!--&lt;div class=&#34;image&#34;&gt;&lt;/div&gt;--&gt;</span>
  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">.</span><span class="nc">imageList</span> <span class="p">{</span>
    <span class="k">outline</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">green</span><span class="p">;</span>
    <span class="k">width</span><span class="p">:</span> <span class="mi">800</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">margin-left</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
    <span class="k">margin-right</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
    <span class="k">margin-top</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">imageList</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">x</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">image</span> <span class="p">{</span>
    <span class="k">width</span><span class="p">:</span> <span class="mi">191</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">height</span><span class="p">:</span> <span class="mi">191</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">background-color</span><span class="p">:</span> <span class="mh">#555</span><span class="p">;</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
    <span class="k">float</span><span class="p">:</span> <span class="kc">left</span><span class="p">;</span>
    <span class="k">margin-bottom</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">margin-right</span><span class="p">:</span> <span class="mi">12</span><span class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">imageList</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">x</span> <span class="p">{</span>
    <span class="k">margin-right</span><span class="p">:</span> <span class="mi">-12</span><span class="kt">px</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>​</p>
<p>​</p>
<h2 id="缩写">缩写</h2>
<blockquote>
<p>html、css  （√）</p>
<p>navigator  &mdash;&gt;   nav   （√）</p>
<ul>
<li>不能缩写未经约定、达成统一的单词
<ul>
<li>content   —&gt;  cnt    （x）     container 也可以缩写成 cnt  容易误会，所以不要用</li>
</ul>
</li>
</ul>
</blockquote>
<p>​</p>
<p>​</p>
<h2 id="flex-布局">Flex 布局</h2>
<ul>
<li>教程（来自 <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank" rel="noopener noreffer">CSS Tricks</a>)</li>
<li>把教程过一遍，然后忘掉</li>
<li>完成 <a href="https://flexboxfroggy.com/" target="_blank" rel="noopener noreffer">Flex青蛙游戏</a></li>
<li>开始用flex！</li>
</ul>
<h3 id="容器-container-有哪些属性">容器 container 有哪些属性</h3>
<ul>
<li>container ：表示容器，一般用于做父元素</li>
<li>items ：表示容器里面的、直接的子元素，就称为 items（项）</li>
</ul>
<p></p>
<blockquote>
<p>以下都是 container 的样式</p>
</blockquote>
<p>​</p>
<h4 id="让一个元素变成-flex-容器">让一个元素变成 flex 容器</h4>
<p>只有下面两种写法：</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span><span class="p">{</span>
  <span class="k">display</span><span class="p">:</span> <span class="kc">flex</span><span class="p">;</span>     <span class="c">/* 或 display: inline-flex; */</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>​</p>
<h4 id="改变-items-流动方向主轴">改变 items 流动方向（主轴）</h4>
<blockquote>
<p>默认，所有项都会挤在主轴，主轴占满会平均压缩每项宽度，以保证在主轴存放下所有项</p>
</blockquote>
<p></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span><span class="p">{</span>
  <span class="k">display</span><span class="p">:</span> <span class="kc">flex</span><span class="p">;</span>
  <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
  <span class="k">flex-direction</span><span class="p">:</span> <span class="kc">row</span><span class="p">;</span>  <span class="c">/* 【默认值】横向（从左到右） */</span>
  <span class="k">flex-direction</span><span class="p">:</span> <span class="kc">column</span><span class="p">;</span>  <span class="c">/* 纵向（从上到下） */</span>
  <span class="k">flex-direction</span><span class="p">:</span> <span class="kc">row</span><span class="o">-</span><span class="kc">reverse</span><span class="p">;</span> <span class="c">/* 横向反向（从右到左） */</span>
  <span class="k">flex-direction</span><span class="p">:</span> <span class="kc">column</span><span class="o">-</span><span class="kc">reverse</span><span class="p">;</span> <span class="c">/* 纵向反向（从上到下） */</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p>​</p>
<h4 id="改变折行">改变折行</h4>
<p></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span><span class="p">{</span>
  <span class="k">display</span><span class="p">:</span> <span class="kc">flex</span><span class="p">;</span>
  <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
  <span class="k">flex-direction</span><span class="p">:</span> <span class="kc">row</span><span class="p">;</span>  <span class="c">/* 默认横向 */</span>
  <span class="k">flex-wrap</span><span class="p">:</span> <span class="kc">wrap</span><span class="o">-</span><span class="kc">reverse</span><span class="p">;</span>  <span class="c">/* 反向折行, 效果如下图，基本没用 */</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<blockquote>
<p><code>flex-direction</code>和<code>flex-wrap</code>两个属性经常会一起使用，所以有缩写属性<code>flex-flow</code>。这个缩写属性接受两个属性的值，两个值中间以空格隔开。</p>
<p>举个例子，你可以用<code>flex-flow: row wrap</code>去设置行并自动换行。</p>
</blockquote>
<p>​</p>
<p>​</p>
<h4 id="主轴对齐方式">主轴对齐方式</h4>
<blockquote>
<p>默认主轴是 横轴</p>
<p>除非你改变了 flex-direction 方向</p>
</blockquote>
<p></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html">.container {
  justify-content: flex-start | flex-end | center | space-between | space-around | space-evenly;
}
</code></pre></td></tr></table>
</div>
</div><ul>
<li>space-around： 每项左右两边的空间一样</li>
<li>space-evenly：每项间距一样</li>
<li>space-between：把空间放到中间，元素分布两边</li>
</ul>
<p>​</p>
<h4 id="次轴对齐">次轴对齐</h4>
<blockquote>
<p>默认次轴是 纵轴</p>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span><span class="p">{</span>
  <span class="k">align-items</span><span class="p">:</span> <span class="kc">stretch</span> <span class="p">[</span><span class="err">默认值</span><span class="p">]</span> <span class="o">|</span> <span class="kc">flex</span><span class="o">-</span><span class="kc">start</span> <span class="o">|</span> <span class="kc">flex</span><span class="o">-</span><span class="kc">end</span> <span class="o">|</span> <span class="kc">center</span> <span class="o">|</span> <span class="kc">baseline</span><span class="err">（不需要）</span> 
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<ul>
<li>
<p>stretch【默认值】</p>
<ul>
<li>默认所有 items 的高度 与 高度最高的 item 保持一致</li>
<li>如下图，3个 item 都与 2 号 item 一样高</li>
</ul>
<p></p>
</li>
<li>
<p>flex-start</p>
<p></p>
</li>
<li>
<p>flex-end</p>
<p></p>
</li>
<li>
<p>center</p>
<p></p>
</li>
</ul>
<p>​</p>
<h4 id="多行分布">多行分布</h4>
<blockquote>
<p>很少用到</p>
</blockquote>
<blockquote>
<ul>
<li>
<p>默认平均分  ：  <code>align-content: stretch</code> (如图)</p>
<p></p>
</li>
</ul>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span><span class="p">{</span>
  <span class="k">display</span><span class="p">:</span> <span class="kc">flex</span><span class="p">;</span>
  <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
  <span class="k">flex-wrap</span><span class="p">:</span> <span class="kc">wrap</span><span class="p">;</span>
  <span class="err">height：400px；</span>
  <span class="k">align-content</span><span class="p">:</span> <span class="kc">flex</span><span class="o">-</span><span class="kc">start</span><span class="p">;</span>   <span class="c">/* 全部集中到顶部 */</span>
  <span class="k">align-content</span><span class="p">:</span> <span class="kc">flex</span><span class="o">-</span><span class="kc">end</span><span class="p">;</span>   <span class="c">/* 全部集中到底部 */</span>
  <span class="k">align-content</span><span class="p">:</span> <span class="kc">center</span><span class="p">;</span>   <span class="c">/* 全部集中到中间 */</span>
  <span class="k">align-content</span><span class="p">:</span> <span class="kc">space</span><span class="o">-</span><span class="n">between</span><span class="p">;</span>
  <span class="k">align-content</span><span class="p">:</span> <span class="kc">space</span><span class="o">-</span><span class="n">around</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>​</p>
<p>​</p>
<h3 id="flex-item-有哪些属性">flex item 有哪些属性</h3>
<blockquote>
<p>以下都是 item 的属性</p>
</blockquote>
<h4 id="item-上加-order">item 上加 order</h4>
<ul>
<li>
<p><strong>默认 order 为 0</strong></p>
</li>
<li>
<p>指定 order 后，item 会按照 order 顺序从小到大排列（可以指定为负数）</p>
<p></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;item&#34;</span><span class="p">&gt;</span>1<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;item&#34;</span><span class="p">&gt;</span>2<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>  
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;item&#34;</span><span class="p">&gt;</span>3<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;item&#34;</span><span class="p">&gt;</span>4<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    
<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">.</span><span class="nc">container</span><span class="p">{</span>
    <span class="k">display</span><span class="p">:</span> <span class="kc">flex</span><span class="p">;</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">item</span><span class="p">{</span>
    <span class="k">width</span><span class="p">:</span><span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">height</span><span class="p">:</span><span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">green</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">item</span><span class="p">:</span><span class="nd">first-child</span><span class="p">{</span> <span class="k">order</span><span class="p">:</span> <span class="mi">100</span><span class="p">;</span> <span class="p">}</span>    <span class="c">/* 最后 */</span>
  <span class="p">.</span><span class="nc">item</span><span class="p">:</span><span class="nd">nth-child</span><span class="o">(</span><span class="nt">2</span><span class="o">)</span><span class="p">{</span> <span class="k">order</span><span class="p">:</span> <span class="mi">2</span><span class="p">;</span> <span class="p">}</span>			
  <span class="p">.</span><span class="nc">item</span><span class="p">:</span><span class="nd">nth-child</span><span class="o">(</span><span class="nt">3</span><span class="o">)</span><span class="p">{</span> <span class="k">order</span><span class="p">:</span> <span class="mi">3</span><span class="p">;</span> <span class="p">}</span>
  <span class="p">.</span><span class="nc">item</span><span class="p">:</span><span class="nd">last-child</span><span class="p">{</span> <span class="k">order</span><span class="p">:</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>    <span class="c">/* 最前 */</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
</li>
</ul>
<p>​</p>
<h4 id="item-上加-flex-grow">item 上加 flex-grow</h4>
<blockquote>
<p>用于分配多余的空间（控制变胖）</p>
<ul>
<li>flex-grow： 默认为 0.   就是 item 宽度由内容撑开，没内容的话宽度就是0，不会占用多余的空间</li>
<li>给 item 设置 flex-grow  值为 n （&gt;0），就是将分配多余空间给当前 item 占 n 份。
<ul>
<li>如果一共有3个item，那就平均分配多余空间，每个 item 占 n/3.</li>
</ul>
</li>
</ul>
</blockquote>
<p></p>
<ul>
<li>
<p>当我们不给 item 设置宽度时，item 的宽度是能有多窄有多窄（宽度由内容撑开）</p>
<p></p>
</li>
<li>
<p>实现宽度能有多宽有多宽，就给 item 添加 flex-grow</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">item</span><span class="p">{</span>
  <span class="k">flex-grow</span><span class="p">:</span> <span class="mi">1</span><span class="p">;</span>    <span class="c">/* 每一个 item 平均分配宽度，来占满多余的空间（不是占满整行空间） */</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
</li>
<li>
<p>需求：从多余的空间中，给2,3 的宽度占 2 份;   给 1,4 占 1 份 空间</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">container</span><span class="p">{</span>
  <span class="k">display</span><span class="p">:</span> <span class="kc">flex</span><span class="p">;</span>
  <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">item</span><span class="p">{</span>
  <span class="k">height</span><span class="p">:</span><span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">green</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">item</span><span class="p">:</span><span class="nd">first-child</span><span class="p">{</span> <span class="k">flex-grow</span><span class="p">:</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
<span class="p">.</span><span class="nc">item</span><span class="p">:</span><span class="nd">nth-child</span><span class="o">(</span><span class="nt">2</span><span class="o">)</span><span class="p">{</span> <span class="k">flex-grow</span><span class="p">:</span> <span class="mi">2</span><span class="p">;</span> <span class="p">}</span>
<span class="p">.</span><span class="nc">item</span><span class="p">:</span><span class="nd">nth-child</span><span class="o">(</span><span class="nt">3</span><span class="o">)</span><span class="p">{</span> <span class="k">flex-grow</span><span class="p">:</span> <span class="mi">2</span><span class="p">;</span> <span class="p">}</span>
<span class="p">.</span><span class="nc">item</span><span class="p">:</span><span class="nd">last-child</span><span class="p">{</span> <span class="k">flex-grow</span><span class="p">:</span> <span class="mi">1</span><span class="p">;</span> <span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
</li>
</ul>
<h5 id="经验-2">经验</h5>
<ul>
<li>当 3 栏布局，如下
<ul>
<li>只给【导航】设置<strong><code> flex-grow: 1</code></strong>（实现导航宽度的响应式），logo、头像固定宽度</li>
</ul>
</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;container&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;item&#34;</span><span class="p">&gt;</span>logo<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;item&#34;</span><span class="p">&gt;</span>导航<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>  
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;item&#34;</span><span class="p">&gt;</span>头像<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">.</span><span class="nc">container</span><span class="p">{</span>
    <span class="k">display</span><span class="p">:</span> <span class="kc">flex</span><span class="p">;</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">item</span><span class="p">{</span>
    <span class="k">height</span><span class="p">:</span><span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">green</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="p">.</span><span class="nc">item</span><span class="p">:</span><span class="nd">nth-child</span><span class="o">(</span><span class="nt">2</span><span class="o">)</span><span class="p">{</span>   
    <span class="k">flex-grow</span><span class="p">:</span> <span class="mi">1</span><span class="p">;</span> 
  <span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>​</p>
<h4 id="flex-shrink-控制如何变瘦">flex-shrink 控制如何变瘦</h4>
<blockquote>
<p>当界面不断变窄，无法存放每项的给定宽度时，每项都需要变窄，flex-shrink 就控制谁瘦的多，谁瘦的少</p>
<ul>
<li>默认是1（所有item平均收缩，要缩一起缩）</li>
<li>一般写 <strong><code>flex-shrink: 0;</code></strong>  防止变瘦（被设置为 0 的这一项，就算空间不够时，也不会收缩。要缩别找我）</li>
</ul>
</blockquote>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">item</span><span class="p">{</span>
  <span class="k">width</span><span class="p">:</span> <span class="mi">150</span><span class="kt">px</span><span class="p">;</span>  <span class="c">/* 合计宽度最小450px */</span>
  <span class="k">height</span><span class="p">:</span><span class="mi">50</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">green</span><span class="p">;</span>
  <span class="k">flex-grow</span><span class="p">:</span> <span class="mi">1</span><span class="p">;</span>  <span class="c">/* 每项会均分多余空间 */</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">item</span><span class="p">:</span><span class="nd">first-child</span><span class="p">{</span>
  <span class="k">flex-shrink</span><span class="p">:</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">item</span><span class="p">:</span><span class="nd">nth-child</span><span class="o">(</span><span class="nt">2</span><span class="o">)</span><span class="p">{</span> 
  <span class="k">flex-shrink</span><span class="p">:</span> <span class="mi">50</span><span class="p">;</span>   <span class="c">/* 2 的收缩比例较大 */</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">item</span><span class="p">:</span><span class="nd">last-child</span><span class="p">{</span>
  <span class="k">flex-shrink</span><span class="p">:</span> <span class="mi">1</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>当宽度缩小达到450px以内，每项宽度不足，此时每项会开始收缩， flex-shrink 值越大，则收缩的越大，flex-shrink 值越小，越不会受到收缩的影响
<ul>
<li>如下图，宽度收缩450px以内，【导航】最先开始发生了较大的收缩，因为设定了较大的 flex-shrink 值</li>
<li>【logo】和【头像】版块，基本不收缩</li>
</ul>
</li>
</ul>
<p></p>
<p>​</p>
<h4 id="flex-basis-控制基准宽度">flex-basis 控制基准宽度</h4>
<blockquote>
<p>用法：</p>
<ul>
<li>默认是 auto（与 item 的 width 值保持一致）</li>
<li>指定宽度：<code>flex-basis: 100px;</code>  相当于指定了 width 值</li>
</ul>
</blockquote>
<p>这个属性方方也比较迷：不是很重要的属性</p>
<ul>
<li>可以直接用 width 来代替这个属性</li>
</ul>
<p>​</p>
<h4 id="缩写成-flex">缩写成 flex</h4>
<blockquote>
<p>flex  相当于  flex-grow  flex-shrink   flex-basis</p>
<p>方方一般不写缩写，容易记错位置</p>
</blockquote>
<ul>
<li>flex  只有以下 4 种形式的写法</li>
</ul>
<p></p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">item</span><span class="p">:</span><span class="nd">first-child</span><span class="p">{</span>
  <span class="k">flex</span><span class="p">:</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>    <span class="c">/* grow-1，shrink-1，宽100px */</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">item</span><span class="p">:</span><span class="nd">nth-child</span><span class="o">(</span><span class="nt">2</span><span class="o">)</span><span class="p">{</span>
  <span class="k">flex</span><span class="p">:</span> <span class="mi">1</span> <span class="mi">100</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>    <span class="c">/* grow-1，shrink-100，宽100px */</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">item</span><span class="p">:</span><span class="nd">last-child</span><span class="p">{</span>
  <span class="k">flex</span><span class="p">:</span> <span class="mi">1</span> <span class="mi">1</span> <span class="mi">100</span><span class="kt">px</span><span class="p">;</span>    <span class="c">/* grow-1，shrink-1，宽100px */</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>上述，3个item，宽度为100px
<ul>
<li>grow撑开时每个item平均占满所有多余空间</li>
<li>宽度不足时，2 号主要进行收缩</li>
</ul>
</li>
</ul>
<p>​</p>
<h4 id="align-self-定制-align-items">align-self 定制 align-items</h4>
<blockquote>
<p>用的很少</p>
<ul>
<li>默认在垂直方向上，都是顶端对齐的</li>
<li>align-self  可以让某一个 item，在垂直方向上，特例独行的展示（指定一个特别的对齐方式）</li>
</ul>
</blockquote>
<p></p>
<p>实现：单独设置，最后一个 item 底部对齐</p>
<p></p>
<p>​</p>
<p>​</p>
<h3 id="重点">重点</h3>
<ul>
<li>记住这些代码</li>
<li><strong><code>display: flex</code></strong>     开启flex布局</li>
<li><strong><code>flex-direction: row / column </code></strong>   主轴是横向还是纵向</li>
<li><strong><code>flex-wrap: wrap </code></strong>   空间不足时是否换行</li>
<li><strong><code>just-content: center / space-between</code></strong>   主轴方向上的对齐方式：居中/分开</li>
<li><strong><code>align-items: center  </code></strong>    次轴方向上的对齐方式：居中，顶，底</li>
<li>工作中基本只用这些</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="实践-1">实践</h3>
<blockquote>
<p><a href="https://jsbin.com/yoguyuh/edit?html,css,output" target="_blank" rel="noopener noreffer">JSBin 演示</a></p>
</blockquote>
<h4 id="不同布局-1">不同布局</h4>
<ul>
<li>用 flex 做两栏布局</li>
<li>用 flex 做三栏布局</li>
<li>用 flex 做四栏布局</li>
<li>用 flex 做平均布局 —— <a href="#%e8%b4%9fmargin%e6%96%b9%e6%a1%88" rel="">负 margin</a></li>
<li>用 flex 组合使用，做更复杂的布局</li>
<li><a href="https://jsbin.com/hehekod/edit?html,css,output" target="_blank" rel="noopener noreffer">JSBin 代码</a></li>
</ul>
<h4 id="经验-3">经验</h4>
<ul>
<li>永远不要把 width 和 height 写死，除非特殊说明
<ul>
<li>PC端通常可以写死。移动端不能写死，需要适配各种尺寸：平板/手机…</li>
</ul>
</li>
<li>用  min-width  /  max-width  /  min-height  /  max-height</li>
<li>flex 可以基本满足所有需求</li>
<li>flex  和  <code>margin-xxx : auto</code>  配合有意外的效果——例：<a href="#%e5%b7%a6%e5%8f%b3%e5%b8%83%e5%b1%80" rel="">左右布局</a></li>
</ul>
<p>​</p>
<h4 id="什么叫写死">什么叫写死</h4>
<h5 id="写死">写死</h5>
<ul>
<li>width:100px</li>
</ul>
<h5 id="不写死">不写死</h5>
<ul>
<li>width: 50%</li>
<li>max-width: 100px</li>
<li>width: 30vw   （屏幕宽度的百分之30）</li>
<li>min-width: 80%</li>
<li>特点：不使用 px，或者加 min max 前缀</li>
</ul>
<blockquote>
<p>css 最忌讳把宽高写死</p>
</blockquote>
<p>​</p>
<h4 id="技术总结-1">技术总结</h4>
<h5 id="左右布局">左右布局</h5>
<ul>
<li>表示两栏布局-贴左、贴右：可通过以下两句中的任意一句来实现</li>
<li>margin-xxx:  auto 更灵活</li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
  <span class="p">.</span><span class="nc">header</span> <span class="p">{</span>
    <span class="k">display</span><span class="p">:</span> <span class="kc">flex</span><span class="p">;</span>
    <span class="k">border</span><span class="p">:</span><span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">black</span><span class="p">;</span>
    <span class="c">/*justify-content: space-between; ---------------二者任选其一----------------------*/</span>
  <span class="p">}</span>
  <span class="nt">ul</span> <span class="p">{</span>
    <span class="c">/* margin-left: auto; -------------------------二者任选其一【推荐】------------------*/</span>
    <span class="k">display</span><span class="p">:</span> <span class="kc">flex</span><span class="p">;</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">green</span><span class="p">;</span>
  <span class="p">}</span>
  <span class="nt">ul</span> <span class="o">&gt;</span> <span class="nt">li</span> <span class="p">{</span>
    <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>

<span class="p">&lt;</span><span class="nt">header</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;header&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;logo&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">img</span> <span class="na">alt</span><span class="o">=</span><span class="s">&#34;&#34;</span> <span class="na">src</span><span class="o">=</span><span class="s">&#34;./logo.png&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">ul</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>首页<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>课程<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>优惠<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">li</span><span class="p">&gt;</span>关于<span class="p">&lt;/</span><span class="nt">li</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">ul</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">header</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><h5 id="产品展示格子布局">产品展示格子布局</h5>
<h6 id="失败方案">失败方案</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span><span class="lnt">6
</span><span class="lnt">7
</span><span class="lnt">8
</span><span class="lnt">9
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;imageList&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">imageList</span><span class="p">{</span>
  <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
  <span class="k">width</span><span class="p">:</span> <span class="mi">800</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">margin-right</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
  <span class="k">margin-left</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
  <span class="k">margin-top</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">display</span><span class="p">:</span> <span class="kc">flex</span><span class="p">;</span>
  <span class="k">flex-wrap</span><span class="p">:</span> <span class="kc">wrap</span><span class="p">;</span>
  <span class="k">justify-content</span><span class="p">:</span> <span class="kc">space</span><span class="o">-</span><span class="n">between</span><span class="p">;</span>  <span class="c">/* 会导致产品不足数的行 --&gt; 错位 */</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">image</span><span class="p">{</span>
  <span class="k">width</span><span class="p">:</span> <span class="mi">191</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">191</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">background-color</span><span class="p">:</span> <span class="mh">#ccc</span><span class="p">;</span>
  <span class="k">margin-bottom</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">green</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
<p>​</p>
<h6 id="负margin方案">负margin方案</h6>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;imageList&#34;</span><span class="p">&gt;</span>
  <span class="c">&lt;!-- 可以命名为 inner 或者 wrapper --&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;x&#34;</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;image&#34;</span><span class="p">&gt;&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">.</span><span class="nc">imageList</span> <span class="p">{</span>
  <span class="k">outline</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>   <span class="c">/* 注意：边框去掉或者放在外面，否则占据宽度 */</span>
  <span class="k">width</span><span class="p">:</span> <span class="mi">800</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">margin-right</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
  <span class="k">margin-left</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
  <span class="k">margin-top</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">imageList</span> <span class="o">&gt;</span> <span class="p">.</span><span class="nc">x</span> <span class="p">{</span>
  <span class="k">display</span><span class="p">:</span> <span class="kc">flex</span><span class="p">;</span>
  <span class="k">flex-wrap</span><span class="p">:</span> <span class="kc">wrap</span><span class="p">;</span>
  <span class="k">margin-right</span><span class="p">:</span> <span class="mi">-12</span><span class="kt">px</span><span class="p">;</span>    <span class="c">/* 负margin */</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">image</span> <span class="p">{</span>
  <span class="k">width</span><span class="p">:</span> <span class="mi">191</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">191</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">background-color</span><span class="p">:</span> <span class="mh">#ccc</span><span class="p">;</span>
  <span class="k">margin-bottom</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">green</span><span class="p">;</span>
  <span class="k">margin-right</span><span class="p">:</span> <span class="mi">12</span><span class="kt">px</span><span class="p">;</span>  <span class="c">/* 每个的间距 */</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>]]></description>
</item><item>
    <title>Re：从零开始の CSS 学习笔记——基础篇</title>
    <link>http://samrks.github.io/20200724-re%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84css%E5%9F%BA%E7%A1%80%E7%AF%87/</link>
    <pubDate>Sat, 25 Jul 2020 02:12:24 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://samrks.github.io/20200724-re%E4%BB%8E%E9%9B%B6%E5%BC%80%E5%A7%8B%E7%9A%84css%E5%9F%BA%E7%A1%80%E7%AF%87/</guid>
    <description><![CDATA[<p>熬夜总结 – CSS 基础篇 。🤞🏻 Nobody knows CSS than me !! 🤗</p>
<p></p>
<h2 id="css-的历史">CSS 的历史</h2>
<h3 id="css-是谁发明的">CSS 是谁发明的</h3>
<blockquote>
<p>李爵士的挪威同事赖先生，首先<a href="https://www.w3.org/People/howcome/p/cascade.html" target="_blank" rel="noopener noreffer">提出 CSS</a></p>
<p>Håkon Wium Lie （挪威语）</p>
</blockquote>
<h3 id="赖先生的生平">赖先生的生平</h3>
<h4 id="生平">生平</h4>
<ul>
<li>
<p>1991年获得MIT媒体实验室视觉研究理学硕士学位</p>
</li>
<li>
<p>1994年提出CSS概念而闻名</p>
</li>
<li>
<p>1999年任Opera的CTO（首席技术官，不分前端后端、只要是技术就负责）</p>
</li>
<li>
<p>2005年他写公开信给比尔盖茨问为什么IE不支持Web标准，盖茨说IE 7马上发布，他写了 Acid2 用来验证</p>
</li>
<li>
<p>2006年通过了博士论文答辩</p>
</li>
<li>
<p>2006年他倡议 Web 网页应使用通用字体格式</p>
</li>
<li>
<p>2007年他倡议浏览器可以支持video标签</p>
</li>
</ul>
<h4 id="观点">观点</h4>
<ul>
<li>
<p>微软的IE常常成为他的批评对象</p>
</li>
<li>
<p>他也是Web打印概念的倡导者，用HTML和CSS写书</p>
</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="css-的牛-x-之处在哪">CSS 的牛 X 之处在哪？</h3>
<blockquote>
<p>CSS（Cascading Style Sheets）：==层叠==样式表</p>
</blockquote>
<h4 id="样式层叠">样式层叠</h4>
<p>可以多次对同一选择器进行样式声明</p>
<h4 id="选择器层叠">选择器层叠</h4>
<p>可以用不同选择器对同一个元素进行样式声明</p>
<h4 id="文件层叠">文件层叠</h4>
<p>可以用多个文件进行层叠</p>
<h4 id="这些特性使得-css-极度灵活">这些特性使得 CSS 极度灵活</h4>
<p>这也为 CSS 后来被吐槽留下了隐患</p>
<p>​</p>
<p>​</p>
<h3 id="css-的版本">CSS 的版本</h3>
<blockquote>
<p>⭐目前使用最广泛的css版本：css 2.1 版本</p>
<ul>
<li>2004-2011年间不断更新，没有具体发布时间</li>
</ul>
</blockquote>
<table>
<thead>
<tr>
<th><strong>版本</strong></th>
<th><strong>时间</strong></th>
<th><strong>重点</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td>CSS  1</td>
<td>1996年</td>
<td>不用管</td>
</tr>
<tr>
<td>CSS  2</td>
<td>1998年</td>
<td>添加定位、z-index、media，不用管</td>
</tr>
<tr>
<td>**CSS  2.1 **</td>
<td>2004~2011年</td>
<td>使用最广泛的版本（IE支持）</td>
</tr>
<tr>
<td>CSS  3</td>
<td>1999年开始起草</td>
<td>现代版本，分模块（IE  8 部分支持）</td>
</tr>
<tr>
<td>CSS  4*</td>
<td>分模块升级</td>
<td></td>
</tr>
</tbody>
</table>
<p>​</p>
<p>​</p>
<h3 id="浏览器对css的支持兼容性">浏览器对CSS的支持（兼容性）</h3>
<blockquote>
<p>怎么知道，哪些浏览器，支持哪些特性？</p>
<ul>
<li>方法一：几十种浏览器全部跑一遍</li>
<li>方法二：使用 <a href="https://www.caniuse.com/#search=flex" target="_blank" rel="noopener noreffer">caniuse.com</a></li>
</ul>
</blockquote>
<p></p>
<ul>
<li>红色：不支持flex</li>
<li>黄色：部分支持</li>
<li>绿色：完全支持</li>
</ul>
<h4 id="caniusecom-使用方法">caniuse.com 使用方法</h4>
<h5 id="请收藏此网站">请收藏此网站</h5>
<ul>
<li>
<p>输入你关心的样式，比如 border-radius 或 filter</p>
</li>
<li>
<p>查看大部分浏览器的支持情况</p>
</li>
<li>
<p>如果想看更多，点击 Show All</p>
</li>
<li>
<p>下方会详细说明兼容 bug 有哪些（翻译成中文）</p>
</li>
</ul>
<h5 id="这个网站是怎么运作的">这个网站是怎么运作的</h5>
<ul>
<li>
<p>网站主一开始<a href="http://tests.caniuse.com/" target="_blank" rel="noopener noreffer">自己测试</a>了一部分浏览器</p>
</li>
<li>
<p>社区的前端工程师帮助测试各种各样的浏览器</p>
</li>
<li>
<p>UC 浏览器和 QQ 浏览器当然主要是中国开发者测试</p>
</li>
<li>
<p>大家把测试结果提交到 GitHub 上</p>
</li>
<li>
<p>这就是<u>开发者社区</u>的力量、</p>
<ul>
<li>
<p>什么是社区？</p>
<p>社区不是一个准确存在的概念，大家你帮我我帮你，互相学习，互相分享，就形成了社区。</p>
<p>是一种弱联系。</p>
<p>社区通过汇集的力量将事情给解决好</p>
</li>
</ul>
</li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="css-是艺术">CSS 是艺术</h2>
<blockquote>
<p>就像画画、折纸</p>
<p>你需要用感性思维来理解 CSS</p>
</blockquote>
<h3 id="不要用理性思维">不要用理性思维</h3>
<ul>
<li>
<p>即不要问「为什么会这样」，而是说「原来是这样」</p>
</li>
<li>
<p>浏览器说是怎么样，就是怎么样</p>
</li>
<li>
<p>当然有极少情况是浏览器出错了</p>
</li>
</ul>
<h3 id="为什么-color-red-能让字变红">为什么 color: red 能让字变红</h3>
<ul>
<li>
<p>不要问「为什么」</p>
</li>
<li>
<p>要说「原来是这样」</p>
</li>
<li>
<p>所见即所学</p>
</li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="体系化学习">体系化学习</h2>
<blockquote>
<ul>
<li>有生之年都不太可能把css所有知识学完，因为它太、多、了。只文档可能就有几百页，目录全看一遍都很累：<a href="https://www.w3.org/Style/CSS/specs.en.html" target="_blank" rel="noopener noreffer">css标准文档</a>（google 搜 css spec）</li>
<li>不是把所有知识都学完，而是在一个新知识点到来的时候，马上学会它。这才是学习CSS体系化最重要的手段</li>
</ul>
</blockquote>
<blockquote>
<p>体系化学习 CSS 和 HTML 的过程完全一致</p>
</blockquote>
<h3 id="学一门语言必须学会什么">学一门语言必须学会什么</h3>
<ul>
<li>
<p><a href="#%e8%af%ad%e6%b3%95" rel="">语法</a>（怎么写代码）</p>
</li>
<li>
<p>css 语法非常简单</p>
</li>
<li>
<p>[如何调试](#如何调试 CSS)（怎么知道自己代码写错了）</p>
<ul>
<li>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-js" data-lang="js"><span class="nx">node</span><span class="o">-</span><span class="nx">w3c</span><span class="o">-</span><span class="nx">validator</span> <span class="o">-</span><span class="nx">i</span> <span class="nx">index</span><span class="p">.</span><span class="nx">html</span>    <span class="c1">// 查错
</span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
</li>
<li>
<p><a href="#%e5%9c%a8%e5%93%aa%e6%9f%a5%e8%b5%84%e6%96%99" rel="">在哪查资料</a>（其实就是为了抄代码）</p>
</li>
<li>
<p>MDN</p>
</li>
<li>
<p>标准制定者是谁</p>
<ul>
<li>尝试所有方法仍不能解决问题的话，就必须看<a href="https://www.w3.org/Style/CSS/specs.en.html" target="_blank" rel="noopener noreffer">标准文档</a>了</li>
</ul>
</li>
</ul>
<h3 id="如何学">如何学</h3>
<ul>
<li>
<p>Copy - 抄文档、抄老师</p>
</li>
<li>
<p>Run - 放在自己的机器上运行成功</p>
</li>
<li>
<p>Modify - 加入一点自己的想法，然后重新运行</p>
</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="语法">语法</h3>
<blockquote>
<p>超级简单</p>
</blockquote>
<h4 id="语法一样式语法">语法一：样式语法</h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="nt">选择器</span> <span class="p">{</span>
  <span class="err">属性名:</span> <span class="err">属性值</span><span class="p">;</span>
  <span class="c">/*注释*/</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h5 id="注意事项">注意事项</h5>
<blockquote>
<p>不学常态，学变态</p>
</blockquote>
<ul>
<li>
<p>所有符号都是英文符号，如果写错了，浏览器会警告（样式会被<del>划掉</del>）</p>
</li>
<li>
<p>区分大小写，a 和 A 是不同的东西（特别是大小写很相似的字母，很容易错）</p>
</li>
<li>
<p>没有 // 注释，只有 <code>/* 注释 */</code>  这种形式</p>
</li>
<li>
<p>最后一个分号可以省略，但建议不要省略</p>
</li>
<li>
<p>任何地方写错了，都不会报错，浏览器会直接忽略</p>
</li>
<li>
<p>那我怎么知道自己写没写错呢？一会说</p>
</li>
</ul>
<h4 id="语法二at-httpsdevelopermozillaorgzh-cndocswebcssat-rule语法httpsdevelopermozillaorgzh-cndocswebcssat-rule">语法二：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/At-rule" target="_blank" rel="noopener noreffer">at </a><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/At-rule" target="_blank" rel="noopener noreffer">语法</a></h4>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span><span class="lnt">5
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">@</span><span class="k">charset</span> <span class="s2">&#34;UTF-8&#34;</span><span class="p">;</span>    <span class="c">/* 声明字符编码，必须放在第一行 */</span>
<span class="p">@</span><span class="k">import</span> <span class="nt">url</span><span class="o">(</span><span class="nt">2</span><span class="p">.</span><span class="nc">css</span><span class="o">)</span><span class="p">;</span>   <span class="c">/* 导入一个额外的css文件 */</span>
<span class="p">@</span><span class="k">media</span> <span class="o">(</span><span class="nt">min-width</span><span class="o">:</span> <span class="nt">100px</span><span class="o">)</span> <span class="nt">and</span> <span class="o">(</span><span class="nt">max-width</span><span class="o">:</span> <span class="nt">200px</span><span class="o">)</span> <span class="p">{</span>    <span class="c">/* 媒体查询 */</span>
  <span class="nt">语法一</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><h5 id="注意事项-1">注意事项</h5>
<ul>
<li>
<p>@charset 必须放在第一行</p>
</li>
<li>
<p>前两个 at 语法必须以分号 ; 结尾</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="p">@</span><span class="k">charset</span> <span class="s2">&#34;UTF-8&#34;</span><span class="p">;</span>
<span class="p">@</span><span class="k">import</span> <span class="nt">url</span><span class="o">(</span><span class="nt">2</span><span class="p">.</span><span class="nc">css</span><span class="o">)</span><span class="p">;</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>@media 语法会单独教学</p>
</li>
<li>
<p>charset 是字符集的意思，但 UTF-8 是字符编码 encoding（并不是字符集），这是历史遗留问题</p>
<ul>
<li>最早只有 ASCII 这一种字符集（英文），这个字符集的编码形式就是它自己</li>
<li>后来中国人发现 ASCII 不能表示中文，所以就发明了 GB2312，由中国国家标准局（国标局）发行，GB 就是国家标准的缩写。
<ul>
<li>GB2312 是一个支持中文简体汉字的字符集。它对应的编码形式，是它自己</li>
</ul>
</li>
<li>后来日本、韩国的文字，我们的 GB2312 也表示不了。国标局还没开始动作，微软先一步发明 GBK，k表示扩展。GBK 可以同时表示  中文、日文、韩文（CJK）</li>
<li>后来中国发现还需要和更多国家建立联系，国标库根本就搞不定，就有一个叫 Unicode 的组织，给全球制作了一个字符集，叫做 Unicode（万国码）。这个码包含非常多国家，特别长，所以必须采用不同的编码形式。
<ul>
<li>编码形式包含：UTF8/UTF16/UTF32 （选择任意一个即可）</li>
<li>从 Unicode开始字符集和编码形式就不统一了，之前都是统一的</li>
</ul>
</li>
<li>html 1993年左右发明，css 发明于1996年左右，Unicode在1996年之后发明。</li>
<li>charset 原本后面写一个【字符集的名字】，写 GBK/GB2312 ….这种，对应编码形式也是同名的。但是Unicode发明后，字符集名称和编码形式不统一了，所以我们为了表明自己使用的是 Unicode 的那种编码形式，就只能将Unicode的编码形式，写在表示字符集的 charset 的位置。</li>
<li>==【这就是这个历史问题的发展经过】==</li>
</ul>
</li>
</ul>
<table>
<thead>
<tr>
<th>字符集</th>
<th>编码形式</th>
</tr>
</thead>
<tbody>
<tr>
<td>ASCII</td>
<td>ASCII</td>
</tr>
<tr>
<td>GB2312</td>
<td>GB2312</td>
</tr>
<tr>
<td>GBK</td>
<td>GBK</td>
</tr>
<tr>
<td>Unicode</td>
<td>UTF8/UTF16/UTF32</td>
</tr>
</tbody>
</table>
<ul>
<li>
<p>问： @charset “UTF-8”  指的是什么？</p>
<blockquote>
<ul>
<li>
<p>回答 ：字符集（charset） 是错误的</p>
</li>
<li>
<p><strong>“UTF-8”<strong>指定的不是字符集 charset，而是</strong>指定的【 文件编码 】</strong></p>
<ul>
<li>虽然charset本身是字符集的意思，但后面的 utf-8 指的是  Unicode字符集的**【编码形式】**的一种。这是一个历史遗留问题</li>
</ul>
</li>
</ul>
</blockquote>
</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="如何调试-css">如何调试 CSS</h3>
<h4 id="方法">方法</h4>
<ul>
<li>
<p>使用 W3C 验证器（<a href="https://jigsaw.w3.org/css-validator/" target="_blank" rel="noopener noreffer">在线</a> / 命令行工具）不用试了</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-js" data-lang="js"><span class="nx">node</span><span class="o">-</span><span class="nx">w3c</span><span class="o">-</span><span class="nx">validator</span> <span class="o">-</span><span class="nx">i</span> <span class="nx">index</span><span class="p">.</span><span class="nx">html</span>    <span class="c1">// 可能需要先安装java环境，才能运行 node-w3c-validator
</span></code></pre></td></tr></table>
</div>
</div><ul>
<li><a href="https://www.cnblogs.com/SNNA/p/12531886.html" target="_blank" rel="noopener noreffer">Java环境安装、配置</a></li>
</ul>
</li>
<li>
<p>使用 VSCode 看颜色</p>
</li>
<li>
<p>使用 WebStorm 看颜色</p>
</li>
<li>
<p>使用开发者工具看警告</p>
<ul>
<li>浏览器预览页面，右键检查，查看Element中，一般会给出问题警告。有问题的css会被<del>划删除线</del></li>
</ul>
</li>
</ul>
<h4 id="如何使用开发者工具">如何使用开发者工具</h4>
<ul>
<li>
<p>找到你脑中的标签</p>
</li>
<li>
<p>看它是否有选择器</p>
</li>
<li>
<p>看它的样式是否被划掉</p>
</li>
<li>
<p>看它的样式是否有警告</p>
</li>
</ul>
<h4 id="border-调试法">Border 调试法</h4>
<h5 id="步骤">步骤</h5>
<ul>
<li>怀疑某个元素有问题</li>
<li>就给这个元素加 border</li>
<li>border 展示效果没出现？说明选择器错了或者语法错了
<ul>
<li>通常是 border 上面的代码有问题（因为上面代码执行遇到问题，就会影响下面样式的输出）</li>
</ul>
</li>
<li>border 出现了？看看边界是否符合预期
<ul>
<li>说明选择器没有错、border以上的代码没有错</li>
<li>可以继续往下测试、查找错误</li>
</ul>
</li>
<li>bug 解决了才可以把 border 删掉</li>
</ul>
<h5 id="记住">记住</h5>
<ul>
<li>CSS 的 border 调试法</li>
<li>就相当于 JS 的 log 调试法</li>
<li>我会再每节课重复这个调试法</li>
</ul>
<p>​</p>
<h4 id="新人常见错误">新人常见错误</h4>
<h5 id="低级错误">低级错误</h5>
<ul>
<li>选择器拼写错误</li>
<li>属性名拼写错误</li>
<li>属性值拼写错误</li>
<li>大小写错误</li>
<li>没写分号</li>
<li>中文冒号</li>
<li>没写反花括号</li>
<li>没加单位</li>
</ul>
<h5 id="非低级错误">非低级错误</h5>
<ul>
<li>没有非低级错误</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="在哪查资料">在哪查资料</h3>
<h4 id="网站推荐">网站推荐</h4>
<ul>
<li>Google 搜索关键词时加 MDN</li>
<li>CSS tricks（英文），专门收集 css 小技巧的网站
<ul>
<li>使用方式：在google 搜  <code>[技术名词] css tricks</code>    <a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/">https://css-tricks.com/snippets/css/a-guide-to-flexbox/</a></li>
</ul>
</li>
<li>张鑫旭的博客：可能是中国花时间最多来学css的人
<ul>
<li>使用方式：搜  [技术名词] 张鑫旭</li>
</ul>
</li>
</ul>
<h4 id="书籍推荐">书籍推荐</h4>
<ul>
<li>不推荐买任何书</li>
<li>CSS 和 HTML 一样，以练为主</li>
</ul>
<p>​</p>
<p>​</p>
<h3 id="在哪搜练习素材">在哪搜练习素材</h3>
<h4 id="psd">PSD</h4>
<ul>
<li>Freepik 搜索 <a href="https://www.freepik.com/search?query=web&amp;type=psd" target="_blank" rel="noopener noreffer">PSD web</a>  英文（下载免费的 psd）
<ul>
<li>如果下载慢，就把域名加入翻墙插件</li>
</ul>
</li>
<li>中文免费 PSD 网站较少，需要多搜一下</li>
<li>365PSD 里的 <a href="https://cn.365psd.com/free-psd/ui-kits" target="_blank" rel="noopener noreffer">UI </a><a href="https://cn.365psd.com/free-psd/ui-kits" target="_blank" rel="noopener noreffer">套件</a>还行</li>
</ul>
<h4 id="效果图不提供下载">效果图（不提供下载）</h4>
<ul>
<li>dribbble.com 顶级设计师社区</li>
<li>可以用肉眼模仿它</li>
</ul>
<h4 id="商业网站">商业网站</h4>
<ul>
<li>直接模仿你常去的网站</li>
</ul>
<p>​</p>
<h3 id="不要沉迷临摹">不要沉迷临摹</h3>
<blockquote>
<p>每个类型的临摹一两个即可</p>
<ul>
<li>
<p>PC 网站、手机网站、UI 套件</p>
</li>
<li>
<p>再多无益</p>
</li>
</ul>
</blockquote>
<p>​</p>
<h3 id="遇到查不到的问题怎么办">遇到查不到的问题，怎么办</h3>
<blockquote>
<p>遇到查不到的问题，应该去哪里查文档？  ——找标准制定者</p>
</blockquote>
<blockquote>
<p>李爵士、赖先生</p>
</blockquote>
<ul>
<li>W3C</li>
<li>搜索 CSS spec 可以找到 <a href="https://www.w3.org/Style/CSS/specs.en.html" target="_blank" rel="noopener noreffer">CSS 最新标准</a>
<ul>
<li>没人能看完它</li>
<li>你可以看看 CSS 2.1 标准的<a href="http://www.ayqy.net/doc/css2-1/cover.html" target="_blank" rel="noopener noreffer">中文版</a></li>
<li>正确学 css ，应该是遇到问题，再查资料</li>
</ul>
</li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="基本概念">基本概念</h2>
<h3 id="要理解几个重要的概念">要理解几个重要的概念</h3>
<ul>
<li><a href="#%e6%96%87%e6%a1%a3%e6%b5%81" rel="">文档流</a> Normal Flow</li>
<li><a href="#%e5%9d%97%e3%80%81%e5%86%85%e8%81%94%e3%80%81%e5%86%85%e8%81%94%e5%9d%97" rel="">块、内联、内联块</a></li>
<li><a href="#margin%e5%90%88%e5%b9%b6" rel="">margin 合并</a></li>
<li><a href="#%e7%9b%92%e6%a8%a1%e5%9e%8b" rel="">两种盒模型</a>（border-box 更符合人类思维）</li>
</ul>
<p>​</p>
<h3 id="文档流">文档流</h3>
<blockquote>
<p>文档流的英文名称叫做  Normal Flow</p>
<p>文档流方向：默认，内联元素从左到右，块级元素从上到下</p>
</blockquote>
<p></p>
<p></p>
<p>emmet:  <code>span{第$个span元素}*6</code> + tab</p>
<p>​</p>
<h3 id="块内联内联块">块、内联、内联块</h3>
<blockquote>
<ul>
<li>将元素分为：内联元素、块级元素。是一种已经过时的分法。
<ul>
<li>在新的 HTML5 标准中，元素不分内联、块级。所有元素都可以是内联元素，所有元素都可以是块级元素。</li>
</ul>
</li>
<li>看样式：如果 <strong><code>display:inline</code></strong>， 就是内联元素。如果 <strong><code>display: block</code></strong>  就是块级元素。</li>
<li>内联块：不会出现如【内联元素首尾可以在不同行】的情况，内联块会同行展示，但是又保有 block 的一个特点：不会跨两行（这就是inline和inline-block在流动方向上相似又稍微不同的点）</li>
</ul>
</blockquote>
<h4 id="流动方向">流动方向</h4>
<ul>
<li>inline 元素从左到右，到达最右边才会换行</li>
<li>block 元素从上到下，每一个都另起一行</li>
<li>inline-block 也是从左到右</li>
</ul>
<h4 id="宽度">宽度</h4>
<h5 id="inline-元素"><strong>inline 元素</strong></h5>
<ol>
<li>宽度为 内部 inline 元素的和。</li>
<li>不接受用 width 指定宽度。加了也不变化</li>
<li><strong>不要</strong>在 inline元素内部，再写 block 元素。它的计算可能乱套的，出现后果自负</li>
</ol>
<h5 id="block-元素"><strong>block 元素</strong></h5>
<ol>
<li>
<p>默认自动计算宽度，可用 width 指定</p>
<ul>
<li><code>width: 200px; </code>（200像素）、<code>width: 20em;</code> （20个字宽）</li>
</ul>
</li>
<li>
<p>不指定宽度，宽度默认是 <strong><code>width: auto</code></strong>。不是 width: 100%，<strong>是能有多宽就占多宽</strong>，最大可以占 100%</p>
<ul>
<li>如下图，每个div元素都有边框，【div默认宽度】=100%-边框宽度。如果【设置div宽度为100%】，那么相当于，整行宽度= div宽度100%+边框宽度，所以会多出边框宽度的一小块位置</li>
<li>==经验之谈==：给任何元素都尽量，<strong>不要设置 width: 100% 的样式</strong>。大部分情况写了就等于 bug。</li>
</ul>
<p></p>
</li>
</ol>
<h5 id="inline-block-元素"><strong>inline-block 元素</strong></h5>
<ol>
<li>
<p>结合前两者特点，可用 width</p>
<ul>
<li>
<p>默认情况，与 inline 一致</p>
</li>
<li>
<p>但是又可以用 width 指定宽度，这一点又与 block 一致</p>
</li>
</ul>
</li>
</ol>
<h4 id="高度">高度</h4>
<h5 id="inline-高度">inline 高度</h5>
<ol>
<li>
<p>由 <strong>line-height（行高）</strong> <strong>间接</strong>确定，跟 height 无关 （设置height无效）</p>
<ul>
<li>
<p>如下图，为什么外层的 绿div 没有包住 红span、被撑高呢？</p>
<ul>
<li>因为 span 的高度，不是【内容高+padding】决定的。<strong>padding 改变的不是 span 的实际高度</strong>，只是改变了可视的高度。div 框的高度才是 span 的<strong>实际高度</strong>。</li>
</ul>
<p></p>
<hr>
<ul>
<li>span 的实际高度，由 <strong>行高</strong> 间接确定。如下图，虽然span的红框仍然没变，但是 div高度变化了。而div包裹的高度才是 span 的<strong>实际高度</strong>（只需关注外层div高度即可，红框的高度并不是span实际高度）</li>
</ul>
<p></p>
</li>
<li>
<p>“间接” 怎么理解？</p>
<blockquote>
<p>即使设置行高100px，span的高度也有可能不是100px高</p>
</blockquote>
<ul>
<li>
<p>设置不同的<strong>字体</strong>，会改变 span 的实际高度。经测试：↓↓</p>
<ul>
<li>默认，微软雅黑字体、行高是100px的话，实际高度就是100px。</li>
<li>改成宋体、行高是100px，span 的实际高度变成 101px。</li>
<li>改成 monospace(等宽字体)、行高是100px。 实际高度变成 102px</li>
</ul>
</li>
<li>
<p>具体知识点叫做：<strong>行盒</strong></p>
<p>（可以看<a href="https://zhuanlan.zhihu.com/p/25808995" target="_blank" rel="noopener noreffer">文章</a>，能看懂就看，面试官可能都看不懂，前期可以不用研究这么深）</p>
</li>
</ul>
</li>
</ul>
</li>
</ol>
<h5 id="block-高度">block 高度</h5>
<ul>
<li>
<p>默认高度，由内部所有 <strong>文档流元素</strong> 的<strong>高度总和</strong> 决定的。（由默认行高间接决定）
</p>
<ul>
<li>
<p>内层div是脱离文档流的元素，外层div就无法计算上它的高度</p>
<ul>
<li>
<p>后面会介绍：如何<strong>脱离文档流</strong>、脱离后去哪里了</p>
<p></p>
</li>
</ul>
</li>
</ul>
</li>
<li>
<p>同时也可以自定义设置 height 高度。这种情况，就忽略内部元素高度。</p>
</li>
<li>
<p>如果div中没有任何内容，高度为0。区别于span，span中没有内容，也有高度，由 默认的 line-height 决定。</p>
<p></p>
</li>
</ul>
<h5 id="inline-block-高度">inline-block 高度</h5>
<ul>
<li>默认高度的计算，跟 block 一样。</li>
<li>也可以自定义设置 height。</li>
</ul>
<h3 id="overflow-溢出">overflow 溢出</h3>
<blockquote>
<p>当内容大于容器</p>
</blockquote>
<ul>
<li>当内容的宽度或高度大于容器的，会溢出
<ul>
<li>可用 overflow 来设置是否显示滚动条</li>
<li>auto 是灵活设置</li>
<li>scroll 是永远显示（基本不用）</li>
<li>hidden 是直接隐藏溢出部分</li>
<li>visible 是直接显示溢出部分（默认值）</li>
<li>overflow 可以分为 overflow-x 和 overflow-y，通常只用overflow。x和y可能最终效果会与实际需求有差</li>
</ul>
</li>
</ul>
<ul>
<li>
<p>示例</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;width: 10em; height: 200px;&#34;</span><span class="p">&gt;</span>内容......<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="nt">overflow</span><span class="o">:</span> <span class="nt">visible</span><span class="o">;</span>   <span class="c">/* 默认 */</span>
<span class="nt">overflow</span><span class="o">:</span> <span class="nt">hidden</span><span class="o">;</span>   <span class="c">/* 超出部分隐藏 */</span>
<span class="nt">overflow</span><span class="o">:</span> <span class="nt">scroll</span><span class="o">;</span>   <span class="c">/* 超出部分可滚动预览，很少有人用。因为内容没溢出时，仍显示滚动条，非常丑 */</span>
<span class="nt">overflow</span><span class="o">:</span> <span class="nt">auto</span><span class="o">;</span> 		<span class="c">/* 超出时显示滚动条，不超出不显示 */</span>
</code></pre></td></tr></table>
</div>
</div><p></p>
</li>
<li>
<p>横向滚动条</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="p">&lt;</span><span class="nt">div</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;width: 10em; height: 200px;&#34;</span><span class="p">&gt;</span>
  内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容
  <span class="p">&lt;</span><span class="nt">div</span> <span class="na">style</span><span class="o">=</span><span class="s">&#34;width:1000px;&#34;</span><span class="p">&gt;</span>
    内容
  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    
<span class="p">&lt;</span><span class="nt">style</span><span class="p">&gt;</span>
<span class="nt">div</span><span class="p">{</span>
  <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">green</span><span class="p">;</span>
  <span class="k">overflow</span><span class="p">:</span> <span class="kc">auto</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">span</span><span class="p">{</span>
  <span class="k">border</span><span class="p">:</span> <span class="mi">1</span><span class="kt">px</span> <span class="kc">solid</span> <span class="kc">red</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">&lt;/</span><span class="nt">style</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><ul>
<li>
<p>内部文档流元素宽度超出外层父元素，就会出现横向滚动条</p>
</li>
<li>
<p>同时原本的内容，不会因为宽度被内部元素撑开而平铺显示，仍会只显示在第一屏中</p>
<p></p>
</li>
</ul>
</li>
</ul>
<p>​</p>
<h3 id="脱离文档流">脱离文档流</h3>
<h4 id="回忆一下">回忆一下</h4>
<ul>
<li>
<p>block 高度由内部文档流元素决定，可以设 height</p>
</li>
<li>
<p>这句话的意思是不是说，有些元素可以不在文档流中</p>
</li>
</ul>
<h4 id="哪些元素脱离文档流">哪些元素脱离文档流</h4>
<blockquote>
<p>脱离文档流的元素，那么它所在的容器，就不会把它计算进高度中</p>
<ul>
<li><strong>脱离文档流</strong>，就是从普通文档流中跳出，比普通文档流的层级稍高</li>
</ul>
</blockquote>
<ul>
<li>
<p>float</p>
</li>
<li>
<p>position: absolute / fixed</p>
</li>
</ul>
<h4 id="怎么让元素不脱离文档流">怎么让元素不脱离文档流</h4>
<ul>
<li>不要用上面属性不就不脱离了</li>
</ul>
<p>​</p>
<h3 id="盒模型">盒模型</h3>
<blockquote>
<p>content box &amp; border box</p>
<p>css 盒模型分为两种：一种是 content-box ，一种是 border-box</p>
<p>二者的区别是：</p>
<ul>
<li>content-box 的宽度，只包含 content 部分</li>
<li>border-box 的宽度，包含 border、padding 和 content</li>
</ul>
</blockquote>
<p></p>
<h4 id="分别是">分别是</h4>
<ul>
<li>content-box 内容盒 - 内容，就是盒子的边界</li>
<li>border-box 边框盒 - 边框，才是盒子的边界</li>
</ul>
<h4 id="公式">公式</h4>
<ul>
<li>content-box width = 内容宽度</li>
<li>border-box width = 内容宽度 + padding + border</li>
</ul>
<h4 id="哪个好用">哪个好用</h4>
<ul>
<li>border-box 好用</li>
<li>同时指定 padding、width、border 就知道为什么了</li>
</ul>
<p>​</p>
<h3 id="margin合并">margin合并</h3>
<h4 id="哪些情况会合并">哪些情况会合并</h4>
<ul>
<li>
<p>兄弟 margin 合并</p>
<ul>
<li>上方元素的 margin-bottom，会和下方元素的 margin-top 重合</li>
</ul>
</li>
<li>
<p>父子 margin 合并</p>
<ul>
<li>给子元素添加 margin-top，效果会作用在父元素上（bf：嵌套崩塌）</li>
<li>第一个子元素的 margin-top，会和 最后一个子元素的 margin-bottom，效果会作用在父元素的 margin-top/bottom 或 和父元素的 margin-top/bottom 重合</li>
</ul>
<blockquote>
<p>记住：只有上下会重叠，左右从来不重叠</p>
</blockquote>
</li>
</ul>
<h4 id="如何阻止合并">如何阻止合并</h4>
<blockquote>
<p>不要问为什么，CSS 很多效果是试出来了，无法解释清楚</p>
</blockquote>
<ul>
<li>父子合并用 padding / border 挡住
<ul>
<li>可以用很小的 padding/border 来挡住，让父子的margin无法穿透并重叠</li>
</ul>
</li>
<li>父子合并用 overflow: hidden 挡住</li>
<li>父子合并用 display: flex，不知道为什么，试出来的</li>
<li>兄弟合并是符合预期的</li>
<li>兄弟合并可以用 <code>display: inline-block</code> 消除</li>
</ul>
<p>总之要一条一条死记。</p>
<p>而且 CSS 的属性逐年增多，每年都可能有新的</p>
<blockquote>
<p>为什么css 难学？</p>
<ul>
<li>不正交
<ul>
<li>因为很多没有道理，需要死记硬背的点。</li>
<li>为什么 <code>display: inline-block</code> 可以消除 margin 合并。</li>
<li>并没有 <code>enable-margin-callapse: false</code>  这种选项，翻译一下就知道它是用来单独控制margin合并的。</li>
<li>无法知道 现在写的这句 css，到底会影响哪些属性</li>
</ul>
</li>
<li>什么叫正交？
<ul>
<li>当我们调节显示器的亮度时，显示器的对比度不会改变。</li>
<li>而 css 是不正交的，因为我们在写某一个属性时，可能就会改变其他属性的状态、效果</li>
</ul>
</li>
</ul>
</blockquote>
<p></p>
<p>​</p>
<p>​</p>
<h3 id="基本单位">基本单位</h3>
<h4 id="长度单位">长度单位</h4>
<ul>
<li>px 像素</li>
<li>em 相对于自身 font-size 的倍数</li>
<li>百分数</li>
<li>整数</li>
<li>rem：等你把 em 滚瓜烂熟了再问 rem</li>
<li>vw 和 vh</li>
<li>其他长度单位都用得很少，不用了解</li>
</ul>
<h4 id="颜色">颜色</h4>
<ul>
<li>十六进制 <code>#FF6600</code> 或者 <code>#F60</code> <code>#000</code>
<ul>
<li>也支持最后添加 alpha。 <code>#FF660000</code> 全透明、 <code>#FF6600FF</code> 不透、 <code>#FF660088</code> 半透。但<strong>兼容性不确定</strong></li>
</ul>
</li>
<li>RGBA 颜色 <code>rgb(0,0,0)</code> 或者<code> rgba(0,0,0,1)</code></li>
<li>hsl 颜色 <code>hsl(360,100%,100%)</code>：色相、饱和度、明度
<ul>
<li><code>hsla(360,100%,100%, 0.5)</code></li>
</ul>
</li>
</ul>
<p>​</p>
<p>​</p>
<h2 id="实践做一个彩虹">实践：做一个彩虹</h2>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-html" data-lang="html"><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="p">&lt;</span><span class="nt">html</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">head</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">meta</span> <span class="na">charset</span><span class="o">=</span><span class="s">&#34;utf-8&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">title</span><span class="p">&gt;</span>JS Bin<span class="p">&lt;/</span><span class="nt">title</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">head</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;</span><span class="nt">div</span> <span class="na">class</span><span class="o">=</span><span class="s">&#34;rainbow&#34;</span><span class="p">&gt;</span>
  <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
          <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
            <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
              <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
                <span class="p">&lt;</span><span class="nt">div</span><span class="p">&gt;</span>
                  
                <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
              <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
            <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
          <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
        <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
      <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">body</span><span class="p">&gt;</span>
<span class="p">&lt;/</span><span class="nt">html</span><span class="p">&gt;</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span><span class="lnt">43
</span><span class="lnt">44
</span><span class="lnt">45
</span><span class="lnt">46
</span><span class="lnt">47
</span><span class="lnt">48
</span><span class="lnt">49
</span><span class="lnt">50
</span><span class="lnt">51
</span><span class="lnt">52
</span><span class="lnt">53
</span><span class="lnt">54
</span><span class="lnt">55
</span><span class="lnt">56
</span><span class="lnt">57
</span><span class="lnt">58
</span><span class="lnt">59
</span><span class="lnt">60
</span><span class="lnt">61
</span><span class="lnt">62
</span><span class="lnt">63
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-css" data-lang="css"><span class="o">*</span> <span class="p">{</span>
  <span class="k">box-sizing</span><span class="p">:</span> <span class="kc">border-box</span><span class="p">;</span>
  <span class="k">margin</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
  <span class="k">padding</span><span class="p">:</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
<span class="nt">body</span><span class="p">{</span>
  <span class="k">background</span><span class="p">:</span> <span class="kc">white</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">rainbow</span> <span class="p">{</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">200</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">overflow</span><span class="p">:</span> <span class="kc">hidden</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">rainbow</span> <span class="nt">div</span> <span class="p">{</span>
  <span class="k">overflow</span><span class="p">:</span> <span class="kc">hidden</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">rainbow</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="p">{</span>
  <span class="k">width</span><span class="p">:</span> <span class="mi">400</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">400</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">background</span><span class="p">:</span> <span class="kc">red</span><span class="p">;</span>
  <span class="k">border-radius</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">rainbow</span> <span class="o">&gt;</span> <span class="nt">div</span><span class="o">&gt;</span> <span class="nt">div</span> <span class="p">{</span>
  <span class="k">background</span><span class="p">:</span> <span class="nb">hsl</span><span class="p">(</span><span class="mi">60</span><span class="p">,</span> <span class="mi">80</span><span class="kt">%</span><span class="p">,</span> <span class="mi">50</span><span class="kt">%</span><span class="p">);</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">380</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">margin</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">border-radius</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">rainbow</span> <span class="o">&gt;</span> <span class="nt">div</span><span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="p">{</span>
  <span class="k">background</span><span class="p">:</span> <span class="nb">hsl</span><span class="p">(</span><span class="mi">120</span><span class="p">,</span> <span class="mi">80</span><span class="kt">%</span><span class="p">,</span> <span class="mi">50</span><span class="kt">%</span><span class="p">);</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">360</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">margin</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">border-radius</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">rainbow</span> <span class="o">&gt;</span> <span class="nt">div</span><span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="p">{</span>
  <span class="k">background</span><span class="p">:</span> <span class="nb">hsl</span><span class="p">(</span><span class="mi">180</span><span class="p">,</span> <span class="mi">80</span><span class="kt">%</span><span class="p">,</span> <span class="mi">50</span><span class="kt">%</span><span class="p">);</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">340</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">margin</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">border-radius</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">rainbow</span> <span class="o">&gt;</span> <span class="nt">div</span><span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span><span class="nt">div</span> <span class="p">{</span>
  <span class="k">background</span><span class="p">:</span> <span class="nb">hsl</span><span class="p">(</span><span class="mi">240</span><span class="p">,</span> <span class="mi">80</span><span class="kt">%</span><span class="p">,</span> <span class="mi">50</span><span class="kt">%</span><span class="p">);</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">320</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">margin</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">border-radius</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">rainbow</span> <span class="o">&gt;</span> <span class="nt">div</span><span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span><span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="p">{</span>
  <span class="k">background</span><span class="p">:</span> <span class="nb">hsl</span><span class="p">(</span><span class="mi">300</span><span class="p">,</span> <span class="mi">80</span><span class="kt">%</span><span class="p">,</span> <span class="mi">50</span><span class="kt">%</span><span class="p">);</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">300</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">margin</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">border-radius</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">rainbow</span> <span class="o">&gt;</span> <span class="nt">div</span><span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span><span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="p">{</span>
  <span class="k">background</span><span class="p">:</span> <span class="nb">hsl</span><span class="p">(</span><span class="mi">330</span><span class="p">,</span> <span class="mi">80</span><span class="kt">%</span><span class="p">,</span> <span class="mi">50</span><span class="kt">%</span><span class="p">);</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">280</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">margin</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">border-radius</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
<span class="p">}</span>
<span class="p">.</span><span class="nc">rainbow</span> <span class="o">&gt;</span> <span class="nt">div</span><span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span><span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="o">&gt;</span> <span class="nt">div</span> <span class="p">{</span>
  <span class="k">background</span><span class="p">:</span> <span class="nb">hsl</span><span class="p">(</span><span class="mi">330</span><span class="p">,</span> <span class="mi">80</span><span class="kt">%</span><span class="p">,</span> <span class="mi">100</span><span class="kt">%</span><span class="p">);</span>
  <span class="k">height</span><span class="p">:</span> <span class="mi">260</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">margin</span><span class="p">:</span> <span class="mi">10</span><span class="kt">px</span><span class="p">;</span>
  <span class="k">border-radius</span><span class="p">:</span> <span class="mi">50</span><span class="kt">%</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><p></p>]]></description>
</item></channel>
</rss>
