<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>运行版 - 标签 - Sam&#39;s Garage</title>
        <link>https://liubingxuan.xyz/tags/%E8%BF%90%E8%A1%8C%E7%89%88/</link>
        <description>运行版 - 标签 - Sam&#39;s Garage</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>ryuukousen@gmail.com (Sam)</managingEditor>
            <webMaster>ryuukousen@gmail.com (Sam)</webMaster><lastBuildDate>Wed, 23 Dec 2020 23:32:52 &#43;0800</lastBuildDate><atom:link href="https://liubingxuan.xyz/tags/%E8%BF%90%E8%A1%8C%E7%89%88/" rel="self" type="application/rss+xml" /><item>
    <title>深入理解 Vue 完整版与非完整版</title>
    <link>https://liubingxuan.xyz/vue-compiler-included-vs-runtime-only/</link>
    <pubDate>Wed, 23 Dec 2020 23:32:52 &#43;0800</pubDate>
    <author>作者</author>
    <guid>https://liubingxuan.xyz/vue-compiler-included-vs-runtime-only/</guid>
    <description><![CDATA[<h2 id="深入理解两种区别">深入理解两种区别</h2>
<blockquote>
<p>Vue 完整版</p>
<p>Vue 非完整版（运行版）</p>
</blockquote>
<table>
<thead>
<tr>
<th></th>
<th>Vue 完整版</th>
<th>Vue 非完整版（运行版）</th>
<th>评价（区别）</th>
</tr>
</thead>
<tbody>
<tr>
<td>特点</td>
<td>有 compiler</td>
<td>没有 compiler</td>
<td>compiler 占 40% 体积</td>
</tr>
<tr>
<td>视图</td>
<td>写在 HTML 里<br />或者写在 template 选项</td>
<td>写在 render 函数里<br />用 h 来创建标签</td>
<td>h 是尤雨溪写好传给 render 的</td>
</tr>
<tr>
<td>CDN 引入</td>
<td>vue.js</td>
<td>vue.runtime.js</td>
<td>文件名不同，生产环境后缀为 .min.js</td>
</tr>
<tr>
<td>webpack 引入</td>
<td>需要配置 alias</td>
<td>默认使用此版</td>
<td>尤雨溪配置的</td>
</tr>
<tr>
<td>@vue/cli 引入</td>
<td>需要额外配置</td>
<td>默认使用此版</td>
<td>尤雨溪、蒋豪群配置的</td>
</tr>
</tbody>
</table>
<h3 id="特点">特点</h3>
<blockquote>
<p>「完整版」有 compiler，「非完整版」没有 compiler</p>
</blockquote>
<ul>
<li>compiler 编译器，有编译 HTML 的功能，这个功能很复杂、占空间</li>
<li>导致「完整版」比「非完整版」大 40% 的体积</li>
</ul>
<h3 id="视图">视图</h3>
<blockquote>
<p>比如要写一个 button</p>
</blockquote>
<ul>
<li>
<p>使用「完整版」，button 可以写在 HTML 里或者写在 template 选项里</p>
</li>
<li>
<p>使用「非完整版」，只能写在 render 函数里。用 render 函数的参数 h 函数来创建标签</p>
</li>
<li>
<p>h 是尤雨溪写好并传给 render 的，所以开发者可以获取到这个 h 函数。</p>
<ul>
<li>注意：因为 h 函数是作为 render 函数的参数传递进来的，所以参数名 h 可以任意修改，但 vue 文档里用的是 h，所以推荐不要修改，仍使用 h 作为函数名</li>
</ul>
</li>
</ul>
<h3 id="引入">引入</h3>
<h4 id="通过-cdn-引入">通过 CDN 引入</h4>
<blockquote>
<p>在 index.html，通过 script 标签引入</p>
<p><a href="https://cn.vuejs.org/v2/guide/installation.html#%E7%9B%B4%E6%8E%A5%E7%94%A8-lt-script-gt-%E5%BC%95%E5%85%A5" target="_blank" rel="noopener noreffer">官方文档</a>：用 <code>&lt;script&gt;</code> 标签引入，Vue 会被注册为一个全局变量</p>
</blockquote>
<ul>
<li>文件名为  vue.js，表示「完整版」</li>
<li>文件名为  vue.runtime.js，表示「非完整版」</li>
<li>如果要上线部署（生产环境），需要使用后缀为 .min.js 的文件
<ul>
<li>.min.js 是去掉注释、代码压缩之后的版本，体积更小</li>
<li>vue.min.js 和 vue.runtime.min.js</li>
</ul>
</li>
</ul>
<p>​</p>
<h4 id="通过-webpack-引入">通过 webpack 引入</h4>
<blockquote>
<p>用 webpack 引入 vue 的配置，比较麻烦</p>
</blockquote>
<blockquote>
<p>通过 webpack 引入，默认使用「非完整版」（这是尤雨溪配置的）</p>
</blockquote>
<p>如果想通过 webpack 引入「完整版」，可以参考</p>
<ul>
<li>⚠️ <a href="https://cn.vuejs.org/v2/guide/installation.html?#%E8%BF%90%E8%A1%8C%E6%97%B6-%E7%BC%96%E8%AF%91%E5%99%A8-vs-%E5%8F%AA%E5%8C%85%E5%90%AB%E8%BF%90%E8%A1%8C%E6%97%B6" target="_blank" rel="noopener noreffer">Vue 安装文档</a> 、<a href="https://webpack.js.org/configuration/resolve/#resolvealias" target="_blank" rel="noopener noreffer">webpack 文档</a></li>
<li>⭕️ <a href="https://www.jianshu.com/p/fb265cdb920b" target="_blank" rel="noopener noreffer">webpack 引入 Vue 的两种方式</a></li>
</ul>
<p>​</p>
<h4 id="通过-vuecli-引入">通过 @vue/cli 引入</h4>
<blockquote>
<p>通过 @vue/cli 创建的项目，默认使用「非完整版」（这是尤雨溪、蒋豪群配置的）</p>
</blockquote>
<p>如果想引入「完整版」，可以参考</p>
<ul>
<li>⚠️<a href="https://cli.vuejs.org/zh/guide/webpack.html#%E7%AE%80%E5%8D%95%E7%9A%84%E9%85%8D%E7%BD%AE%E6%96%B9%E5%BC%8F" target="_blank" rel="noopener noreffer">Vue Cli webpack 文档</a></li>
<li>⭕️ <a href="https://github.com/vuejs/vue-cli/issues/2398" target="_blank" rel="noopener noreffer">Issues：how to set alias</a>、<a href="https://github.com/Yatoo2018/webpack-chain/tree/zh-cmn-Hans#%E9%85%8D%E7%BD%AE-resolve-%E5%88%AB%E5%90%8D" target="_blank" rel="noopener noreffer">chainWebpack 文档</a>、<a href="https://www.jianshu.com/p/0c4260120c2b" target="_blank" rel="noopener noreffer">Vue脚手架中配置别名📌</a></li>
</ul>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-js" data-lang="js"><span class="c1">// vue.config.js
</span><span class="c1"></span><span class="kr">const</span> <span class="nx">path</span> <span class="o">=</span> <span class="nx">require</span><span class="p">(</span><span class="s2">&#34;path&#34;</span><span class="p">)</span>
<span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>
  <span class="c1">// 方法一
</span><span class="c1"></span>  <span class="nx">chainWebpack</span><span class="o">:</span> <span class="nx">config</span> <span class="p">=&gt;</span> <span class="p">{</span>
    <span class="nx">config</span><span class="p">.</span><span class="nx">resolve</span><span class="p">.</span><span class="nx">alias</span>
      <span class="p">.</span><span class="nx">set</span><span class="p">(</span><span class="s2">&#34;vuehaha&#34;</span><span class="p">,</span> <span class="nx">path</span><span class="p">.</span><span class="nx">resolve</span><span class="p">(</span><span class="s2">&#34;./node_modules/vue/dist/vue.esm.js&#34;</span><span class="p">))</span> 
    	<span class="c1">// 给「vue完整版」取个别名，&#34;vuehaha&#34;（慎用符号）
</span><span class="c1"></span>  <span class="p">}</span>
  <span class="c1">// 方法二
</span><span class="c1"></span>  <span class="c1">// configureWebpack: {
</span><span class="c1"></span>  <span class="c1">//   resolve: {
</span><span class="c1"></span>  <span class="c1">//     alias: {
</span><span class="c1"></span>  <span class="c1">//       &#34;vuehaha&#34;: path.resolve(&#34;./node_modules/vue/dist/vue.esm.js&#34;)
</span><span class="c1"></span>  <span class="c1">//     }
</span><span class="c1"></span>  <span class="c1">//   }
</span><span class="c1"></span>  <span class="c1">// }
</span><span class="c1"></span><span class="p">}</span>
</code></pre></td></tr></table>
</div>
</div><div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-js" data-lang="js"><span class="c1">// main.js 入口文件
</span><span class="c1"></span><span class="kr">import</span> <span class="nx">Vue</span> <span class="nx">from</span> <span class="s2">&#34;vuehaha&#34;</span>  <span class="c1">// 👈👈👈
</span><span class="c1"></span><span class="k">new</span> <span class="nx">Vue</span><span class="p">({</span>
  <span class="nx">el</span><span class="o">:</span> <span class="s2">&#34;#app&#34;</span><span class="p">,</span>
  <span class="c1">// 👇 完整版，可以「从index.html中」or「从template选项中」直接获取视图
</span><span class="c1"></span>  <span class="nx">template</span><span class="o">:</span><span class="sb">`
</span><span class="sb">	&lt;div&gt;
</span><span class="sb">      {{n}}
</span><span class="sb">      &lt;button @click=&#34;add&#34;&gt;+1&lt;/button&gt;
</span><span class="sb">  	&lt;/div&gt;
</span><span class="sb">	`</span><span class="p">,</span>
  <span class="nx">data</span><span class="o">:</span> <span class="p">{</span> <span class="nx">n</span><span class="o">:</span> <span class="mi">0</span> <span class="p">},</span>
  <span class="nx">methods</span><span class="o">:</span> <span class="p">{</span>
    <span class="nx">add</span><span class="p">()</span> <span class="p">{</span> <span class="k">this</span><span class="p">.</span><span class="nx">n</span> <span class="o">+=</span> <span class="mi">1</span> <span class="p">}</span>
  <span class="p">}</span>
<span class="p">})</span>
</code></pre></td></tr></table>
</div>
</div><p>​</p>
<h3 id="template-和-render">template 和 render</h3>
<blockquote>
<p>template 和 render 总是二选一使用。如果二者同时使用，必然有一个会失效</p>
</blockquote>
<ul>
<li>template 是给「Vue 完整版」使用的
<ul>
<li>完整版必须要写 html 字符串，可以写到 template 选项里，也可以写到 HTML 文件里</li>
</ul>
</li>
<li>render 是给「Vue 非完整版」使用的
<ul>
<li>非完整版必须要写 render 函数</li>
</ul>
</li>
</ul>
<p>​</p>
<h2 id="vue-实例的使用">Vue 实例的使用</h2>
<blockquote>
<p>需求：实现点击按钮加一。实现四种方案下的 Demo</p>
</blockquote>
<h3 id="方案一">方案一</h3>
<blockquote>
<p>CDN 引入 Vue 完整版（vue.js 或 vue.min.js）</p>
<ul>
<li>包含编译器 compiler，视图可以直接从 HTML 里 或者 template 选项里获取</li>
<li><a href="https://cn.vuejs.org/v2/guide/installation.html#%E6%9C%AF%E8%AF%AD" target="_blank" rel="noopener noreffer">官方文档</a> —— 编译器：用来将模板字符串编译成为 JavaScript 渲染函数的代码</li>
</ul>
</blockquote>
<blockquote>
<p><strong><a href="https://codesandbox.io/s/beautiful-nobel-hdhj4?file=/src/main.js" target="_blank" rel="noopener noreffer">在线示例</a>：HTML</strong></p>
<p><strong><a href="https://codesandbox.io/s/youthful-night-h7jiq?file=/src/main.js" target="_blank" rel="noopener noreffer">在线示例</a>：template</strong></p>
</blockquote>
<h3 id="方案二">方案二</h3>
<blockquote>
<p>CDN 引入 Vue 非完整版（vue.runtime.js 或 vue.runtime.min.js）</p>
<ul>
<li>没有编译器，无法编译 HTML，只能从 JS 构建视图</li>
<li>开发者需书写 render 函数（ h 构建方法 ）<a href="https://cn.vuejs.org/v2/guide/installation.html#%E8%BF%90%E8%A1%8C%E6%97%B6-%E7%BC%96%E8%AF%91%E5%99%A8-vs-%E5%8F%AA%E5%8C%85%E5%90%AB%E8%BF%90%E8%A1%8C%E6%97%B6" target="_blank" rel="noopener noreffer">官方文档</a></li>
<li>h 构建方法的代码非常复杂，所以不建议使用这种方案</li>
</ul>
</blockquote>
<blockquote>
<p><strong><a href="https://codesandbox.io/s/quizzical-swirles-vn4w1?file=/src/main.js" target="_blank" rel="noopener noreffer">在线示例</a></strong></p>
</blockquote>
<h3 id="方案三">方案三</h3>
<blockquote>
<p>CDN 引入 Vue 非完整版，配合 Vue Loader（<a href="https://vue-loader.vuejs.org/zh/#vue-loader-%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F" target="_blank" rel="noopener noreffer">官方文档</a>）和 .vue 文件</p>
<ul>
<li>Vue Loader 可以把一个<strong>单独的 .vue 文件</strong>翻译成一个对象，对象包含 render 函数（h 构建方法）</li>
<li>开发者可以在不写 h 函数的基础上，得到 h 函数</li>
</ul>
</blockquote>
<blockquote>
<p>Vue Loader 是 webpack 的 loader，它允许你以一种名为<strong>单文件组件 (SFCs)</strong> 的格式撰写 Vue 组件</p>
<ul>
<li>这就是 webpack 为前端带来的可能。允许以任意形式（如 .vue 文件）组织一个对象，只要最后能通过一个 loader 把它还原成这个对象即可</li>
</ul>
</blockquote>
<blockquote>
<p><strong><a href="https://codesandbox.io/s/relaxed-tdd-bjums?file=/src/Demo.vue" target="_blank" rel="noopener noreffer">在线示例</a></strong></p>
</blockquote>
<p>​</p>
<h3 id="最优方案--方案三">最优方案 — 方案三</h3>
<blockquote>
<p>最佳实践：<strong>总是使用非完整版，然后配合 vue-loader 和 .vue 文件</strong></p>
<ul>
<li>vue-loader 用于加载/翻译 .vue 文件</li>
</ul>
</blockquote>
<p>具体思路（为什么说这个是最优方案）</p>
<ol>
<li>
<p>保证用户体验，用户下载的 JS 文件体积更小，但<strong>只支持 h 函数</strong></p>
</li>
<li>
<p>保证开发体验，开发者可直接在 vue 文件里写 HTML 标签，而<strong>不写 h 函数</strong></p>
</li>
<li>
<p>脏活让 loader 做，vue-loader 会把 .vue 文件里开发者写的 HTML <strong>转为 h 函数</strong></p>
<ul>
<li>开发者可以在不写 h 函数的基础上 ,（通过 vue-loader）得到 h 函数</li>
<li>既保证了开发体验，又保证了用户体验</li>
<li>ps：把所有细节<strong>封装</strong>到一个（类、函数、插件…）里，这就是工程师要做的</li>
</ul>
</li>
</ol>
<p>​</p>
<h2 id="在线搭建-vue-项目">在线搭建 Vue 项目</h2>
<p>通常，我们会使用 @vue/cli 创建 vue 项目（sh ：vue create xxx-demo）</p>
<p>但还有另一种更方便的方式 —— <a href="https://codesandbox.io/" target="_blank" rel="noopener noreffer">codesandbox.io</a></p>
<blockquote>
<p>CodeSandbox 是一个在线的代码编辑器，主要聚焦于创建 Web 应用项目。可以把它看作是一个浏览器端的沙盒运行环境，支持多种流行的构建模板，例如 create-react-app、 vue-cli、parcel 等等。 可以用于快速原型开发、DEMO 展示、Bug 还原等等。</p>
</blockquote>
<ul>
<li>打开网址，点击 create sandbox，选择 vue 图标，即可在线创建出一个 vue 项目（如下图）</li>
<li>在线项目支持下载 ZIP ，解压即用（不过通常都是测试 demo 也无需下载）</li>
</ul>
<p></p>
<blockquote>
<p><strong>提示</strong></p>
<p><a href="https://codesandbox.io/" target="_blank" rel="noopener noreffer">codesandbox.io</a> 登录后只能创建 50 个项目</p>
<p>但不登录可以创建无限个（注意清理 cookie），所以不要登录（Do Not Sign In）😉</p>
</blockquote>]]></description>
</item></channel>
</rss>
