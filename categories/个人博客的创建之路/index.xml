<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>个人博客的创建之路 - 分类 - Sam&#39;s Garage</title>
        <link>http://samrks.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF/</link>
        <description>个人博客的创建之路 - 分类 - Sam&#39;s Garage</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>ryuukousen@gmail.com (Sam)</managingEditor>
            <webMaster>ryuukousen@gmail.com (Sam)</webMaster><lastBuildDate>Wed, 15 Jul 2020 12:58:21 &#43;0800</lastBuildDate><atom:link href="http://samrks.github.io/categories/%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%88%9B%E5%BB%BA%E4%B9%8B%E8%B7%AF/" rel="self" type="application/rss+xml" /><item>
    <title>博客之路02：💰个人博客绑定域名</title>
    <link>http://samrks.github.io/3-buy-setup-a-domain-to-your-blog/</link>
    <pubDate>Wed, 15 Jul 2020 12:58:21 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://samrks.github.io/3-buy-setup-a-domain-to-your-blog/</guid>
    <description><![CDATA[<p>买个域名玩玩！</p>
<h2 id="个人博客绑定域名">个人博客绑定域名</h2>
<h3 id="购买域名">购买域名</h3>
<blockquote>
<p>namesilo （方便、无需填写个人真实信息）和阿里云（中文、可能需要实名填写详细信息）</p>
</blockquote>
<h4 id="namesilohttpswwwnamesilocom"><a href="https://www.namesilo.com/" target="_blank" rel="noopener noreffer">namesilo</a></h4>
<ul>
<li>
<p>进入<a href="https://www.namesilo.com" target="_blank" rel="noopener noreffer">官网</a>，搜索并选中需求的域名（domain），进行注册</p>
<p></p>
<p></p>
</li>
<li>
<p>支付，使用支付宝，需设置<a href="https://custweb.alipay.com/account/index.htm" target="_blank" rel="noopener noreffer">支付宝邮箱</a></p>
</li>
<li>
<p>购买成功后，等待跳转。邮箱也会收到购买成功的邮件。</p>
<ul>
<li>每年需要续费，不续费，会有一个保护期，保护期过了，域名就重新开放购买</li>
</ul>
</li>
<li>
<p>点击 <strong><code>Manage my Domains </code></strong>【管理我的域名】。</p>
<ul>
<li>初次进入可能需要填写基本信息。点击 create my new account。只要保证当前账户邮箱是真实的即可</li>
</ul>
</li>
<li>
<p>在域名管理页面，点击蓝色圆形按钮，可以进入 【Manage DNS】 管理DNS页面</p>
</li>
</ul>
<p>​</p>
<h4 id="阿里云httpswwwaliyuncom"><a href="https://www.aliyun.com" target="_blank" rel="noopener noreffer">阿里云</a></h4>
<ol>
<li>进入<a href="https://www.aliyun.com/" target="_blank" rel="noopener noreffer">官网</a>，注册一个账户，国内账户通常需要提供真实的手机号/姓名/身份证等。</li>
<li>在【域名与网站】选项卡中，选择【域名注册】；或者直接在<u>搜索框</u>进入【域名 控制台】选择【域名注册】</li>
<li>搜索域名，加入清单，结算
<ul>
<li>个人 or 企业</li>
<li>填写 [个人] 信息</li>
<li>支付</li>
</ul>
</li>
</ol>
<p>​</p>
<h3 id="配置-github-pages">配置 GitHub Pages</h3>
<ul>
<li>
<p>添加域名</p>
<ul>
<li>找到 github pages 中的 custom domain ，添加域名，SAVE 保存</li>
<li>仓库会多出一个 CNAME 文件，记录配置的域名</li>
</ul>
</li>
<li>
<p>注意：不勾选 Enforce HTTPS。现在不用开启 HTTPS（不开启比较方便测试）</p>
<ul>
<li>勾选后，所有与当前仓库相关的页面，可能都需要变成 https，可能还需要申请免费证书之类的，hin麻烦</li>
</ul>
</li>
</ul>
<p>​</p>
<h3 id="配置-dns">配置 DNS</h3>
<blockquote>
<p>最终效果是，让 4个A记录出现在域名的DNS管理页面中，就搞定了</p>
</blockquote>
<h4 id="配置四条-a-记录">配置四条 A 记录</h4>
<ol>
<li>
<p>找到 github pages 中的 custom domain ，点击 <strong><code>Learn more</code></strong>  ，找到【<a href="https://docs.github.com/cn/github/working-with-github-pages/managing-a-custom-domain-for-your-github-pages-site#configuring-an-apex-domain" target="_blank" rel="noopener noreffer">配置 apex 域</a>】</p>
</li>
<li>
<p>找到 4 个IP，配置到域名中</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span><span class="lnt">4
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-js" data-lang="js"><span class="mf">185.199.108.153</span>
<span class="mf">185.199.109.153</span>
<span class="mf">185.199.110.153</span>
<span class="mf">185.199.111.153</span>
</code></pre></td></tr></table>
</div>
</div></li>
</ol>
<h5 id="namesilo-配置-a-记录">namesilo 配置 A 记录</h5>
<ul>
<li>
<p>（点击蓝色圆形按钮）进入某个域名的管理页面，点击选择 A</p>
<ul>
<li>
<p></p>
</li>
<li>
<p>会生成一个配置，然后依次将4个IP 多填入提交，生成4条配置。只保留这4条配置，将其他默认存在的配置删除即可，默认提供的配置都是没用的</p>
<p></p>
</li>
</ul>
</li>
</ul>
<h5 id="阿里云-配置-a-记录">阿里云 配置 A 记录</h5>
<blockquote>
<p>基本同 namesilo</p>
<ul>
<li>在域名DNS解析中，添加 4 条 A 记录 IP</li>
<li>下拉框选择 @</li>
</ul>
</blockquote>
<p>​</p>
<h4 id="测试dns是否配置成功">测试DNS是否配置成功</h4>
<blockquote>
<p>打开命令行，运行<code>nslookup liubingxuan.xyz</code></p>
<ul>
<li>命令行能打印出4条A记录的IP，就说明配置的DNS生效了</li>
<li>刚配置完可能没法立即生效，需要等待（可能半小时、一天或更久，只能等，听天由命😢 ）</li>
</ul>
</blockquote>
<ul>
<li>Windows 用户：nslookup 域名</li>
<li>Mac 用户：dig + noall + answer 域名</li>
<li>A 记录可能要很久才会生效，等就好了</li>
</ul>
<p>​</p>
<h3 id="无法访问域名">无法访问域名</h3>
<blockquote>
<p>如果全部配置成功，但仍无法访问域名、进入博客或者博客乱码，就只能放弃域名方案 😭。。。</p>
<ul>
<li>把仓库中的 CNAME（自定义域名） 删掉。settings中 custom domain 也删掉。</li>
</ul>
</blockquote>]]></description>
</item><item>
    <title>博客之路01：如何用 hugo 搭建个人博客</title>
    <link>http://samrks.github.io/1-setup-a-blog-with-hugo/</link>
    <pubDate>Mon, 13 Jul 2020 18:54:01 &#43;0800</pubDate>
    <author>作者</author>
    <guid>http://samrks.github.io/1-setup-a-blog-with-hugo/</guid>
    <description><![CDATA[<p>第一篇正式博文，我想给大家分享下我的博客的创建过程吧！🥇</p>
<p>​</p>
<blockquote>
<p>Hugo 是由 Go 语言实现的静态网站生成器。简单、易用、高效、易扩展、快速部署。</p>
</blockquote>
<p>​</p>
<h2 id="安装-hugo">安装 Hugo</h2>
<ul>
<li>
<p><a href="https://gohugo.io/getting-started/installing" target="_blank" rel="noopener noreffer">官方教程</a>  英文</p>
</li>
<li>
<p>Mac 安装方式</p>
<ul>
<li>
<p>brew install hugo</p>
</li>
<li>
<p>hugo version</p>
</li>
</ul>
</li>
<li>
<p>Windows 安装方式</p>
<ul>
<li>去 <a href="https://github.com/gohugoio/hugo/releases" target="_blank" rel="noopener noreffer">Hugo releases 页面</a> 下载 hugo_xxx_Windows- 64bit.zip</li>
<li>解压，把 hugo.exe 放到 D:\Software\hugo\hugo.exe</li>
<li>把 D:\Software\hugo\ 加到 PATH</li>
<li>重启终端，运行 <strong><code>hugo version</code></strong> 查看版本</li>
</ul>
</li>
</ul>
<p>​</p>
<h2 id="快速搭建博客">快速搭建博客</h2>
<blockquote>
<p><a href="https://gohugo.io/getting-started/quick-start/" target="_blank" rel="noopener noreffer">官方文档教程</a>，必看！</p>
</blockquote>
<h3 id="准备提交">准备、提交</h3>
<ol>
<li>
<p>新建 blog 目录，运行 <strong><code>hugo new site xxx.github.io-generator </code></strong>  ， xxx 为 github 用户名 。会在当前目录中创建 xxx.github.io-generator 文件夹（博客生成器）</p>
</li>
<li>
<p>进入博客生成器目录，<strong><code>git init</code></strong></p>
</li>
<li>
<p>选择并下载<a href="https://themes.gohugo.io/" target="_blank" rel="noopener noreffer">主题</a> ，放到 themes 目录下 <strong><code>git clone https://github.com/dillonzq/LoveIt.git themes/LoveIt</code></strong></p>
<ul>
<li>
<p>遇到报错 ↘</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span><span class="lnt">2
</span><span class="lnt">3
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-js" data-lang="js"><span class="nx">fatal</span><span class="o">:</span> <span class="nx">unable</span> <span class="nx">to</span> <span class="nx">access</span> <span class="s1">&#39;https://github.com/dillonzq/LoveIt.git/&#39;</span><span class="o">:</span> <span class="nx">error</span> <span class="nx">setting</span> <span class="nx">certificate</span> <span class="nx">verify</span> <span class="nx">locations</span><span class="o">:</span>
  <span class="nx">CAfile</span><span class="o">:</span> <span class="nx">D</span><span class="o">:</span><span class="err">/Software/Git/mingw64/ssl/certs/ca-bundle.crt</span>
  <span class="nx">CApath</span><span class="o">:</span> <span class="nx">none</span>
</code></pre></td></tr></table>
</div>
</div></li>
<li>
<p>解决办法：使用 git clone 出现 <code>fatal: unable to access 'https://github.com/...'</code> ，执行代码 ​↓</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre class="chroma"><code><span class="lnt">1
</span></code></pre></td>
<td class="lntd">
<pre class="chroma"><code class="language-js" data-lang="js"><span class="nx">git</span> <span class="nx">config</span> <span class="o">--</span><span class="nx">system</span> <span class="nx">http</span><span class="p">.</span><span class="nx">sslverify</span> <span class="kc">false</span>   <span class="c1">// 把证书校验禁用 
</span></code></pre></td></tr></table>
</div>
</div></li>
</ul>
</li>
<li>
<p>然后，将主题添加到站点配置中：<strong><code>echo 'theme = &quot;LoveIt&quot;' &gt;&gt; config.toml</code></strong>   // 主题目录的名称</p>
</li>
<li>
<p>创建新文章：<strong><code>hugo new  posts/first_post.md </code></strong></p>
<p><code>D:\blog\xxx.github.io-generator\content\posts\first_post.md</code> created</p>
</li>
<li>
<p>编辑文章后，修改 <strong><code>draft: false</code></strong>。draft : true 表示处于草稿状态，此时Hugo不会真正发布它</p>
</li>
<li>
<p>初次创建博客或修改主题，需将主题文档中给出的配置，粘贴到 <strong><code>config.toml</code></strong> 文件中。</p>
<p>baseURL 配置成 <strong><code>http://[用户名].github.io/</code></strong></p>
</li>
<li>
<p><strong><code>hugo server -D</code></strong>  建立本地访问 https://localhost:1313 预览博客</p>
</li>
<li>
<p><strong><code>hugo</code></strong>   创建一个新的目录  public/，这就是需要提交到 github，最终生成线上博客的目录</p>
</li>
<li>
<p>根目录下，新建 <strong><code>.gitignore</code></strong> 文件，添加 <strong><code>/public/</code></strong>。使得 /public 可以自成一个仓库</p>
</li>
<li>
<p>进入public <strong><code>cd public</code></strong>，<strong><code>git init</code></strong>   <strong><code>git add .</code></strong>    <strong><code>git commit</code></strong></p>
</li>
</ol>
<p>​</p>
<h3 id="第一次部署">第一次部署</h3>
<ol>
<li>登录 github，创建博客专用仓库，仓库名必须为 ： <strong><code>[用户名].github.io</code></strong> 。</li>
<li>进入 public 目录，<strong><code>git remote add origin xxx</code></strong></li>
<li><strong><code>git push -u origin master</code></strong></li>
<li>进入 github 博客仓库的 <a href="https://github.com/xxx/xxx.github.io/settings" target="_blank" rel="noopener noreffer">Settings</a>，找到 GitHub Pages ，选择 master ，保存</li>
<li>通过 <a href="http://xxx.github.io" target="_blank" rel="noopener noreffer">http://[用户名].github.io</a> 就能访问博客</li>
</ol>
<p>​</p>
<h3 id="以后的部署">以后的部署</h3>
<ol>
<li>在 xxx.github.io-creator 目录（注意确保自己不在 public 目录）里运行 <code>hugo new posts/第二篇博客.md</code></li>
<li>运行 <code>code posts/第二篇博客.md</code> 对文件进行编辑，注意不要把文件原本的内容 front matter 给删了，直接在后面另起一行写新内容。</li>
<li><strong><code>hugo server -D</code></strong>  建立本地访问 https://localhost:1313 预览博客</li>
<li>运行 <strong><code>hugo -D</code></strong>，得到新的 public 目录</li>
<li>进入 public 目录 <strong><code>cd public</code></strong>，执行一下操作
<ol>
<li><strong><code>git add .</code></strong> 注意有一个点</li>
<li><strong><code>git commit -m update</code></strong></li>
<li><strong><code>git push -f</code></strong> 其中 -f 是强制上传的意思</li>
</ol>
</li>
<li>等待几分钟后，你的博客就会出现第二篇文章了！
<ul>
<li>通过 <a href="http://xxx.github.io" target="_blank" rel="noopener noreffer">http://[用户名].github.io</a> 访问博客</li>
</ul>
</li>
</ol>
<p>​</p>
<h2 id="备份博客生成器-generator">备份博客生成器 generator</h2>
<blockquote>
<p>程序员永远都会留备份</p>
</blockquote>
<ul>
<li>
<p>新建仓库 xxx.github.io-generator</p>
</li>
<li>
<p>将本地 xxx.github.io-generator 目录，<code>git init</code>，<code>git add .</code> ，<code>git commit -m backup</code>，<code>git remote add origin xxx</code>，<code>git push -u origin master</code>  即可</p>
<ul>
<li>如果在执行 add 时，提示我们需要执行 rm 操作，可能是因为主题目录下已经存在 .git 文件，主题目录本身就是一个本地仓库了，那和 generator 目录会形成一个嵌套子目录的关系，that&rsquo;s not good . 我们需要把主题目录下的 .git 文件删除</li>
</ul>
</li>
</ul>]]></description>
</item></channel>
</rss>
